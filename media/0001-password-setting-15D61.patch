From 728727cf2a0b21f9fc1b4b36bc12fd2b37e76abd Mon Sep 17 00:00:00 2001
From: Szybet <53944559+Szybet@users.noreply.github.com>
Date: Wed, 28 Sep 2022 22:36:21 +0200
Subject: [PATCH] password setting

---
 src/functions.h           |  7 +++++
 src/settings/settings.cpp | 54 +++++++++++++++++++++++++++++++++++----
 src/settings/settings.h   |  2 +-
 3 files changed, 57 insertions(+), 6 deletions(-)

diff --git a/src/functions.h b/src/functions.h
index 4c52d51..d427517 100644
--- a/src/functions.h
+++ b/src/functions.h
@@ -1164,6 +1164,13 @@ namespace {
         }
         return false;
     }
+    // This function will lock the device up until a valid password will be provided
+    void askForPermissions() {
+        if(QFile(".config/12-lockscreen/password").exists() == true and QFile(".config/12-lockscreen/salt").exists() == true) {
+            QProcess process;
+            process.startDetached("lockscreen", QStringList());
+        }
+    }
 }
 
 #endif // FUNCTIONS_H
diff --git a/src/settings/settings.cpp b/src/settings/settings.cpp
index 1ccfade..38ba54d 100644
--- a/src/settings/settings.cpp
+++ b/src/settings/settings.cpp
@@ -748,19 +748,24 @@ void settings::on_resetBtn_clicked()
 void settings::on_setPasscodeBtn_clicked()
 {
     log("'Set passcode' button clicked", className);
-    log("Launching lockscreen binary", className);
-    string_writeconfig("/tmp/setPasscode", "true");
-    QProcess process;
-    process.startDetached("lockscreen", QStringList());
-    qApp->quit();
+    // Ask for password before change
+    askForPermissions();
+    changePassword();
+
 }
 
 void settings::on_enableLockscreenCheckBox_toggled(bool checked)
 {
+    askForPermissions();
+
+    QFile(".config/12-lockscreen/password").remove();
+    QFile(".config/12-lockscreen/salt").remove();
+
     QString settingString = "lockscreen";
     if(checked == true) {
         logEnabled(settingString, className);
         string_writeconfig(".config/12-lockscreen/config", "true");
+        changePassword();
     }
     else {
         logDisabled(settingString, className);
@@ -1141,3 +1146,42 @@ void settings::on_showUSBPromptCheckBox_toggled(bool checked)
         string_writeconfig(".config/22-usb/show-dialog", "false");
     }
 }
+
+void settings::changePassword() {
+    global::keyboard::keypadText = "";
+    global::keyboard::keypadDialog = true;
+    generalDialogWindow = new generalDialog();
+    generalDialogWindow->setAttribute(Qt::WA_DeleteOnClose);
+    generalDialogWindow->exec();
+    if(global::keyboard::keypadText == "") {
+        // Im not sure if needed
+        // showToastNative("Failed to set passprase");
+        string_writeconfig(".config/12-lockscreen/config", "false");
+        ui->enableLockscreenCheckBox->setCheckState(Qt::CheckState::Unchecked);
+    }
+    else {
+        // Get the hash
+        QByteArray key = global::keyboard::keypadText.toLocal8Bit();
+        global::keyboard::keypadText = "";
+
+
+        // Salt
+        QRandomGenerator* generator = QRandomGenerator::system();
+        QString salt;
+        for(int i = 0; i <= 5; i++) {
+            salt.append(QString::number(generator->generate64()));
+        }
+
+        // Finish
+        QCryptographicHash hasher(QCryptographicHash::RealSha3_512);
+        hasher.addData(key + salt.toLocal8Bit());
+        QByteArray hash = hasher.result();
+
+        QFile passwordFile = QFile(".config/12-lockscreen/password");
+        QFile saltFile = QFile(".config/12-lockscreen/salt");
+        passwordFile.open(QIODevice::ReadWrite);
+        saltFile.open(QIODevice::ReadWrite);
+        passwordFile.write(hash);
+        saltFile.write(salt.toLocal8Bit());
+    }
+}
diff --git a/src/settings/settings.h b/src/settings/settings.h
index 646e4d2..0ab6230 100644
--- a/src/settings/settings.h
+++ b/src/settings/settings.h
@@ -78,7 +78,7 @@ private slots:
     void on_localLibraryShowFoldersCheckBox_toggled(bool checked);
     void on_updateCheckingCheckbox_toggled(bool checked);
     void on_showUSBPromptCheckBox_toggled(bool checked);
-
+    void changePassword();
 signals:
     void showToast(QString messageToDisplay);
     void closeIndefiniteToast();
-- 
2.37.3

