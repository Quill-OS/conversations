==============================================================
Guild: Quill OS
Channel: Development / porting / Sony PRS-T1
==============================================================

[4/21/2022 6:23 AM] tux_linux
Maybe?


[4/21/2022 6:24 AM] tux_linux
@NonaSuomy can you get a sample boot log from serial?


[4/21/2022 7:40 AM] szybet
How do you want to get Linux run on it?


[4/21/2022 12:34 PM] tux_linux
I don't know


[4/21/2022 12:51 PM] szybet
Without a datasheet you can do nothing


[4/21/2022 12:52 PM] szybet
Maybe android sources could provide some info but i dont think so


[4/21/2022 1:04 PM] szybet
There are not available propably


[4/21/2022 1:04 PM] szybet
So thats it


[4/21/2022 4:04 PM] nonasuomy
I will try


[4/21/2022 4:06 PM] nonasuomy
Trying to get it to charge first


[4/21/2022 4:07 PM] nonasuomy
It may have efuses or something where you can’t downgrade it I may not be remembering correctly


[4/21/2022 4:09 PM] nonasuomy
I remember trying to go back a firmware version as it wouldn’t boot with the usb plugged in.


[4/21/2022 4:22 PM] szybet
So its damaged?


[4/21/2022 4:23 PM] nonasuomy
No it was a reported firmware bug


[4/21/2022 4:30 PM] szybet
Is there a sdcard?


[4/21/2022 6:30 PM] tux_linux
This, please


[4/21/2022 8:15 PM] nonasuomy
Seems you can use the SD card on the side and just divert initramfs from the emmc to the sd card slot.


[4/21/2022 8:16 PM] nonasuomy
This guy pretty much covers it https://www.mobileread.com/forums/showthread.php?t=329270

{Embed}
https://www.mobileread.com/forums/showthread.php?t=329270
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal...
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal flash Sony Reader Dev Corner


[4/21/2022 8:16 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-DD845.png


[4/21/2022 8:17 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/84BAE461-39A0-47B8-ACF4-946C912A6F06-7B120.jpg


[4/21/2022 8:18 PM] nonasuomy
sd slot on the right there


[4/21/2022 8:19 PM] nonasuomy
Some partition information https://www.mobileread.com/forums/showthread.php?t=1701

{Embed}
https://www.mobileread.com/forums/showthread.php?t=1701
Sync cable and Screen Protector for Zire 72 - MobileRead Forums
Sync cable and Screen Protector for Zire 72 Handhelds and Smartphones


[4/21/2022 9:12 PM] tux_linux
Ok, nice, it would be really great if you got serial to work


[4/21/2022 9:37 PM] nonasuomy
Only issue about the serial connector it seems like it's on the back side of the board hope there is a front side to them as well


[4/21/2022 9:38 PM] szybet
it isin't really


[4/21/2022 9:38 PM] nonasuomy
the screen on it seems a lot more crisp and blanks faster


[4/21/2022 9:38 PM] szybet
you need to dissasemble it completly


[4/21/2022 9:38 PM] szybet
you mean?


[4/21/2022 9:41 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1373-93C78.jpg


[4/21/2022 9:44 PM] nonasuomy
That's fine and all just annoying as the battery is soldered in and glued to the case.


[4/21/2022 9:45 PM] szybet
sony 😂


[4/21/2022 9:45 PM] nonasuomy
Tiny ribbon cables suck as well easy to rip


[4/21/2022 9:45 PM] szybet
be carefull with those flex cables and antena connector


[4/21/2022 9:46 PM] szybet
and while dessoldering be carefull to not start a fire


[4/21/2022 9:50 PM] nonasuomy
"This product includes Iwata Mincho Font designed by IWATA Corporation"


[4/21/2022 9:59 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/4F43F8BB-0892-4D9C-96A4-A4E25B0BF887-3D784.jpg


[4/21/2022 9:59 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1375-D3E44.jpg


[4/21/2022 9:59 PM] szybet
OH NICE


[4/21/2022 9:59 PM] szybet
so there is hope now


[4/21/2022 10:01 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/FC2A1B99-E592-4250-9C5D-62850223E85B-705F1.jpg


[4/21/2022 10:01 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/DA079CAD-194E-401C-9D58-B6DDD01A929B-6A8EA.jpg


[4/21/2022 10:02 PM] nonasuomy
Inkbox needs a 632 page Eula


[4/21/2022 10:04 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/AE481959-D97B-46B5-859C-C9EA76D75540-35759.jpg


[4/21/2022 10:05 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/649BA3D0-70E1-4A16-88C4-39AFC38AA9EC-BD5E5.jpg


[4/21/2022 10:05 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/23B9603F-0A6B-41F1-9E2A-E6E8B7AA2C31-290E2.jpg


[4/21/2022 10:06 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/239E967C-0844-4A2A-87BC-6F52A322B518-2B9F0.jpg


[4/21/2022 10:27 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1382-9F1F7.mov


[4/21/2022 10:28 PM] nonasuomy
You can see how smooth and fast the blanking is


[4/21/2022 10:31 PM] nonasuomy
also very clean no ghosting


[4/21/2022 10:33 PM] szybet
1. its propably better hardware?
2. inkbox is in early stage of developement
3. some engineers will make a better job than some students, without the datasheets etc


[4/21/2022 10:36 PM] nonasuomy
Oh I'm just comparing with the Kobo in general not saying anything about InkBox


[4/21/2022 10:36 PM] szybet
sony has a soldered in battery ;p

{Reactions}
😂 

[4/21/2022 10:36 PM] nonasuomy
same CPU though


[4/21/2022 10:37 PM] nonasuomy
not sure what it uses for the eink driver


[4/21/2022 10:37 PM] tux_linux
Very good


[4/21/2022 10:37 PM] tux_linux
Yay

{Reactions}
😅 

[4/21/2022 10:38 PM] nonasuomy
The rf shielding sticker ripped some of the labels off


[4/21/2022 10:38 PM] tux_linux
I should get it somehow


[4/21/2022 10:39 PM] tux_linux
It seems a really nice device


[4/21/2022 10:40 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/69AD7659-3FBF-4919-B311-2BE46E16A8DE-A14B1.jpg


[4/21/2022 10:41 PM] szybet
reverse engineering the android sources to get linux kernel to work?


[4/21/2022 10:43 PM] tux_linux
Maybe trying Touch B kernel could somehow work


[4/21/2022 10:43 PM] tux_linux
At least partly


[4/21/2022 10:43 PM] szybet
is there waveform too?


[4/21/2022 10:43 PM] szybet
on this device


[4/21/2022 10:45 PM] tux_linux
Sure
It is needed


[4/21/2022 10:45 PM] nonasuomy
wm8321g


[4/22/2022 2:58 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1385-9AB37.jpg


[4/22/2022 2:58 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1386-01177.jpg


[4/22/2022 2:58 AM] tux_linux
nice


[4/22/2022 3:08 AM] nonasuomy
sketchy taking that out there was a piece of double sided tape right along that thin pcb part 😐

{Reactions}
👍 

[4/22/2022 3:35 AM] nonasuomy
which baud rate would you guess?


[4/22/2022 3:35 AM] nonasuomy
tried 9600


[4/22/2022 3:35 AM] tux_linux
115200


[4/22/2022 3:36 AM] tux_linux
It's pretty common on embedded devices


[4/22/2022 3:39 AM] nonasuomy
nop 😦


[4/22/2022 3:39 AM] tux_linux
are you seeing any 'noise' on the terminal?


[4/22/2022 3:39 AM] nonasuomy
yeah


[4/22/2022 3:40 AM] tux_linux
https://www.mobileread.com/forums/showthread.php?t=329270
He seems to use 115200

{Embed}
https://www.mobileread.com/forums/showthread.php?t=329270
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal...
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal flash Sony Reader Dev Corner


[4/22/2022 3:41 AM] tux_linux
Are you grounded correctly?


[4/22/2022 3:42 AM] nonasuomy
some times they use diff bauds for boot and terminals


[4/22/2022 3:42 AM] nonasuomy
yes


[4/22/2022 3:45 AM] nonasuomy
sony are a bunch of non conformists so I'm sure its something rando


[4/22/2022 3:45 AM] tux_linux
maybe


[4/22/2022 3:45 AM] tux_linux
try 38400


[4/22/2022 3:51 AM] tux_linux
https://wiki.mobileread.com/wiki/PRST1_Rooting_and_Tweaks
This seems really extensive

{Embed}
https://wiki.mobileread.com/wiki/PRST1_Rooting_and_Tweaks
PRST1 Rooting and Tweaks


[4/22/2022 3:51 AM] nonasuomy
when I'm not grounded I get nothing


[4/22/2022 3:51 AM] tux_linux
But I don't think it covers UART


[4/22/2022 3:56 AM] nonasuomy
nope


[4/22/2022 3:56 AM] nonasuomy
seems you can just dump serial over usb without doing this


[4/22/2022 3:57 AM] nonasuomy
but I'll keep trying for now


[4/22/2022 3:57 AM] nonasuomy
maybe it's just dumping random binary garbage to the port


[4/22/2022 3:57 AM] tux_linux
Maybe


[4/22/2022 3:57 AM] nonasuomy
```
▒|D▒"!▒
       ▒@ ▒▒▒▒▒
               ▒▒▒F▒0▒▒ ▒▒"x▒▒▒
                               ▒@@▒▒▒▒8▒▒  ▒▒
                                             <▒
                                               ▒▒!@▒p▒▒@( @@▒▒▒▒▒▒▒@▒@ @(▒▒▒▒▒▒▒P`▒(▒@  0!  @@ ▒
```


[4/22/2022 3:58 AM] nonasuomy
some ascii art for you


[4/22/2022 3:58 AM] tux_linux
19200 or 57600
try this


[4/22/2022 3:58 AM] nonasuomy
I call it the sony city scape.


[4/22/2022 3:58 AM] tux_linux
hehe


[4/22/2022 3:58 AM] nonasuomy
yes no love


[4/22/2022 3:58 AM] nonasuomy
may try lower now


[4/22/2022 3:59 AM] tux_linux
quite strange


[4/22/2022 3:59 AM] tux_linux
did you solder them?


[4/22/2022 4:00 AM] nonasuomy
no just holding them on the pads as there is 0.0000000001mm clearance between the board and the case


[4/22/2022 4:00 AM] tux_linux
ok


[4/22/2022 4:00 AM] tux_linux
I never solder anything myself
but maybe it's something to try here


[4/22/2022 4:02 AM] nonasuomy
Don't think it would matter in general if I put an solder on the pads when I go to put it back together it will touch the casted frame then I would have to clean it off and probably pull the traces off the board or something fun

{Reactions}
👍 

[4/22/2022 4:03 AM] nonasuomy
pretty sure it's baud related or maybe this rx he lists is actually tx


[4/22/2022 4:03 AM] tux_linux
try swapping them


[4/22/2022 4:06 AM] nonasuomy
seems to be dumping on both just tried 115200


[4/22/2022 4:07 AM] nonasuomy
you would think rx would be silent


[4/22/2022 4:08 AM] tux_linux
that's really strange


[4/22/2022 4:28 AM] tux_linux
does it output garbage even when it's powered off?


[4/22/2022 4:49 AM] nonasuomy
no


[4/22/2022 5:39 AM] nonasuomy
I remember now why this was sitting around https://us.community.sony.com/s/question/0D50B00004IKoEnSAL/solutions-for-various-prst1-troubles-returning-to-older-firmware-versions-making-a-backup?language=es


[4/22/2022 5:41 AM] nonasuomy
I put the rupor-rescue folder OS Firmware on the root of the SD card then hold the home and menu then reset the pin then it flashes the yellow light but then reboots if you have the USB plug in.


[4/22/2022 5:42 AM] nonasuomy
It got updated to the latest firmware and then attempted to put back to the older firmware which causes the USB Lock on boot and No Wifi


[4/22/2022 5:42 AM] nonasuomy
If you leave the USB cable out it boots fine.


[4/22/2022 5:42 AM] nonasuomy
just no wifi


[4/22/2022 5:43 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/rupor-rescue-893A9.7z


[4/22/2022 5:44 AM] nonasuomy
If the device sees that it is on a higher version than the update files it won't update.


[4/22/2022 5:46 AM] nonasuomy
There's a trick to it where you can put the older version back but it still reports the newer version number. I think I got to this part but could never get it to show the older version so I couldn't properly restore the older firmware which makes it stuck with this USB problem.


[4/22/2022 5:49 AM] nonasuomy
You have to make it think it's at 03 to make it able to upgrade back to .05 where all the problems go away.


[4/22/2022 5:50 AM] nonasuomy
.07 has problems


[4/22/2022 5:58 AM] nonasuomy
"But beware - we haven't found a way to restore the whole flash memory - if you damage the first sectors or the first partitions, you're lost."


[4/22/2022 6:05 AM] nonasuomy
https://us.softpedia-secure-download.com/dl/27076882cba2f11c519e0f900009cd85/6262266b/300384392/drivers/tablets/PRS-T1_Updater_1.0.07.05070.exe


[4/22/2022 6:05 AM] nonasuomy
https://us.softpedia-secure-download.com/dl/f59413fa250049838e554b3ef34e2771/62622987/300313844/drivers/firmware/PRS-T1_Updater_1.0.05.11130.exe


[4/22/2022 6:09 AM] nonasuomy
https://www.sony.co.uk/electronics/support/reader-digital-book-prs-t-series/prs-t1/downloads/Z0005571

{Embed}
https://www.sony.co.uk/electronics/support/reader-digital-book-prs-t-series/prs-t1/downloads/Z0005571
Reader for PC | Sony UK
/mnt/data/projects/git/conversations/media/sonyview1-F76CF


[4/22/2022 6:10 AM] nonasuomy
Interesting...


[4/22/2022 6:10 AM] nonasuomy
Applicable models: PRS-300, PRS-350, PRS-505, PRS-600, PRS-650, PRS-T1, PRS-T2, PRS-T2N, PRS-T3, PRS-T3S
Benefits and improvements:
For Country/Region setting as UK, Germany and Austria, this update will replace “Reader Store” icon with “Kobo eBook Store” icon to enable direct access to Kobo


[4/22/2022 6:28 AM] szybet
This will not work


[4/22/2022 6:28 AM] szybet
Solder them, really


[4/22/2022 6:30 AM] nonasuomy
Yes it will done it many times with different devices.


[4/22/2022 6:30 AM] nonasuomy
https://projects.mobileread.com/reader/users/porkupan/PRST1/flash_packages/


[4/22/2022 6:30 AM] szybet
Do you have proper ground connection?


[4/22/2022 6:30 AM] nonasuomy
yes


[4/22/2022 6:30 AM] szybet
Did you soldered it?


[4/22/2022 6:30 AM] nonasuomy
No and I won't.


[4/22/2022 6:31 AM] szybet
Then you will achieve nothing


[4/22/2022 6:31 AM] szybet
Why?


[4/22/2022 6:32 AM] nonasuomy
There is nothing wrong with holding a connection you can see the console dumping stuff soldering it won't change that we have no idea what it's doing


[4/22/2022 6:33 AM] nonasuomy
copper to copper solder wont make magic happen.


[4/22/2022 6:33 AM] szybet
Do you se stuff that makes sense?


[4/22/2022 6:36 AM] nonasuomy
It's probably dumping glitched crud as to why the usb port won't work.


[4/22/2022 6:37 AM] tux_linux
It works for me


[4/22/2022 6:38 AM] tux_linux
I've never done any soldering in my life and I can connect Kobos and Kindles with toothpicks

{Reactions}
☑️ 

[4/22/2022 6:46 AM] nonasuomy
I'm just going to start flashing it with those packages above and hope for the best


[4/22/2022 6:47 AM] nonasuomy
restore-set-1.0.05.11130-us.zip


[4/22/2022 6:47 AM] nonasuomy
Says updating on the screen now and the SD card light is going crazy so hopefully it's doing something...

{Reactions}
👍 

[4/22/2022 6:52 AM] nonasuomy
I think I tossed in the towel last time because it took multiple mins to an hour to do a flash and every time I modified the firmware version in hex it always just kept showing up as 07


[4/22/2022 6:54 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/FD3FD034-CFE5-465F-8F45-6D31D76A5615-77B51.jpg


[4/22/2022 6:54 AM] nonasuomy
Nope still dead lock with us cable plugged in on boot 😦


[4/22/2022 6:56 AM] nonasuomy
Such a most annoying glitch when the usb cable doesn’t work.


[4/22/2022 7:04 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/49A876D2-0641-47F7-9029-F64AFAC719A8-D21DF.jpg


[4/22/2022 7:05 AM] nonasuomy
See even though I flashed it with 05 it still shows 07


[4/22/2022 7:07 AM] szybet
I dont understand you people :p


[4/22/2022 3:43 PM] nonasuomy
I think this is where the document goes wrong “Then take out the microSD and feed it to your pc. Make a copy of
mmcblk2.img and use a hex-editor to do a search & replace in 'text'
mode: there are four instances of '1.0.07.05070' (or whatever
version number is shown by 'settings -> about -> device information'
to replace with '1.0.03.11140'. I used Bless for this, which is
available for Debian variants of gnu/linux. My source for much of
the above, a posting by edclark on
http://community.sony.com/t5/Reader-...re/td-p/460702
Used HxD on a Windows box.” Search never found 4 instances they should have told you exactly where they were or just upload the already modified working image.


[4/22/2022 3:55 PM] nonasuomy
Finally got the rescue console working...
```


[4/22/2022 4:14 PM] tux_linux
Output?


[4/22/2022 4:16 PM] nonasuomy
I think the eMMc has some bad sectors 😦
```
[root (ttyGS0)]# mount -o remount,rw /dev/mmcblk0p1 /initrd/mnt/sd
[root (ttyGS0)]# dd if=/dev/mmcblk2 of=/initrd/mnt/sd/mmcblk2.img
dd: /dev/mmcblk2: Input/output error
```


[4/22/2022 4:18 PM] nonasuomy
```
g_multi gadget: Multifunction Composite Gadget, version: 2009/07/21
g_multi gadget: g_multi ready
dr_controller_run: udc enter low power mode
fsl-usb2-udc: bind to driver g_multi
epdc_progress_work_func end progress.
usb wakeup is here
otg udc wakeup
try_wake_up_udc: udc out low power mode
it is ACTIVE host
g_multi gadget: high speed config #2: Multifunction Composite (RNDIS + MS + ACM)
mmcblk2: retrying using single block read(cmderr=0,dataerr=-110,stoperr=0)
mmcblk2: error -110 transferring data, sector 8160, nr 16, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8160
mmcblk2: error -110 transferring data, sector 8161, nr 15, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8161
mmcblk2: error -110 transferring data, sector 8162, nr 14, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8162
mmcblk2: error -110 transferring data, sector 8163, nr 13, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8163
Buffer I/O error on device mmcblk2, logical block 1020
mmcblk2: retrying using single block read(cmderr=0,dataerr=-110,stoperr=0)
mmcblk2: error -110 transferring data, sector 8160, nr 8, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8160
mmcblk2: error -110 transferring data, sector 8161, nr 7, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8161
mmcblk2: error -110 transferring data, sector 8162, nr 6, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8162
mmcblk2: error -110 transferring data, sector 8163, nr 5, card status 0x80900
end_request: I/O error, dev mmcblk2, sector 8163
Buffer I/O error on device mmcblk2, logical block 1020
```


[4/22/2022 4:21 PM] nonasuomy
I remember trying to use http://forum.xda-developers.com/attachment.php?attachmentid=1819847&d=1363793360 gTablet-e2fsprogs-1.42.7.zip


[4/22/2022 4:22 PM] nonasuomy
```
use e2fsck to
 
check and repair three file systems with this string of commands:
 
[root (ttyGS0)]# cd /initrd/mnt/sd/
 
[root (ttyGS0)]# busybox chmod +x e2fsck
 
[root (ttyGS0)]# e2fsck -v /dev/mmcblk2p9
 
[root (ttyGS0)]# e2fsck -v /dev/mmcblk2p10
 
[root (ttyGS0)]# e2fsck -v /dev/mmcblk2p6
```


[4/22/2022 4:24 PM] nonasuomy
https://wiki.mobileread.com/w/index.php?title=PRST1_Rooting_and_Tweaks&section=11#Fix_filesystem_errors_and_bad_blocks

{Embed}
https://wiki.mobileread.com/w/index.php?title=PRST1_Rooting_and_Tweaks&section=11
PRST1 Rooting and Tweaks

{Reactions}
👍 

[4/22/2022 5:21 PM] nonasuomy
Only issue is I don't believe the corruption is on any of those partitions 😦


[4/22/2022 5:22 PM] nonasuomy
6 9 10 all report as no issues and clean


[4/22/2022 5:22 PM] nonasuomy
yet it still fails at those sectors above


[4/22/2022 5:22 PM] szybet
its internal flash?


[4/22/2022 5:22 PM] nonasuomy
yes


[4/22/2022 5:22 PM] szybet
then... well


[4/22/2022 5:23 PM] nonasuomy
well then... ?


[4/22/2022 5:23 PM] szybet
you can replace the flash IC


[4/22/2022 5:24 PM] nonasuomy
It was stated above that they have no idea how to clone the very first boot sector of the device.


[4/22/2022 5:24 PM] szybet
1. i dont think you will find one
2. its not easy to replace
3. bootloader and everything


[4/22/2022 5:24 PM] szybet
??? dd doesn't work?


[4/22/2022 5:25 PM] nonasuomy
You would think but that was a quote from the guy called U-Boot... you think he would know what he was doing... haha


[4/22/2022 5:25 PM] szybet
what?


[4/22/2022 5:26 PM] szybet
u-boot is the bootloader for imx boards, and many other arm platforms


[4/22/2022 5:28 PM] nonasuomy
correct but the guy that was talking about not being able to properly backup the first boot partition in the forum his name was "U-Boot" I would expect he would know a lot about U-Boot to name himself that.


[4/22/2022 5:28 PM] nonasuomy
Just like a guy named Tux-Linux I would expect to know a lot about Linux 😄


[4/22/2022 5:30 PM] szybet
this sounds like someone is stupid
why coudln't you dd the whole flash? wtf?


[4/22/2022 5:51 PM] nonasuomy
Not sure if I come across the comment again I will let you determine their level of intellect.


[4/22/2022 5:53 PM] nonasuomy
Wonder if I can just take the partition from this EU version and dump it on this US version https://mega.nz/folder/NNUFCKAI#kV3Kr2Zvsa87_tFiDxOORw

{Embed}
https://mega.nz/folder/NNUFCKAI
1.8 GB folder on MEGA
9 files
/mnt/data/projects/git/conversations/media/rich-folder-C9FBC.png


[4/22/2022 7:05 PM] nonasuomy
https://www.mobileread.com/forums/showthread.php?t=191604

{Embed}
https://www.mobileread.com/forums/showthread.php?t=191604
PRS-T1 Backup/Restore with Linux (rupor-rescue.7z) - MobileRead Forums
PRS-T1 Backup/Restore with Linux (rupor-rescue.7z) Sony Reader Dev Corner


[4/22/2022 7:05 PM] nonasuomy
Comment #2


[4/22/2022 7:06 PM] szybet
```
you can backup everything, but in order to restore a partition, you have to enter recovery mode and access the reader via serial gadget connection. but this is impossible with a damaged boot manager / initrd / kernel 

So, I would not only backup the whole flash disk, but each partition seperately because in case of a messed up device, you will more likely want to restore system or data partition 
```
its simply bricked then


[4/22/2022 7:06 PM] szybet
wrong choosing of words


[4/22/2022 7:07 PM] szybet
without a way to read the flash when u-boot is bricked we won't have good time


[4/22/2022 7:07 PM] szybet
what is the flash chip? maybe after desoldering it can be readed from a usb - flash reading thing


[4/22/2022 7:10 PM] nonasuomy
It's a BGA would not be fun to solder.


[4/22/2022 7:11 PM] szybet
there is no other way really


[4/22/2022 7:11 PM] nonasuomy
https://tenor.com/view/spider-man-doctor-strange-there-has-to-be-another-way-train-there-isnt-gif-23916991

{Embed}
https://tenor.com/view/spider-man-doctor-strange-there-has-to-be-another-way-train-there-isnt-gif-23916991
/mnt/data/projects/git/conversations/media/spider-man-doctor-strange-028BA.png


[4/22/2022 7:12 PM] szybet
maybe there are exposed i2c spi or something other of the chip, and you can write to it externally


[4/22/2022 7:13 PM] nonasuomy
My limitation right now is I don't have a spare SD card to try this booting direct to SD trying to find something suitable so far just finding dead cards (I don't want to flash over my inkbox setup one)


[4/22/2022 7:13 PM] szybet
can you boot the kernel from the sd card?


[4/22/2022 7:14 PM] nonasuomy
I have a 16GB one here but it has PIKVM on it so I have to rip it first may work


[4/22/2022 7:14 PM] nonasuomy
Yes this is what we want.


[4/22/2022 7:14 PM] szybet
so you can?...


[4/22/2022 7:15 PM] szybet
i dont think so


[4/22/2022 7:15 PM] nonasuomy
https://www.mobileread.com/forums/showthread.php?t=329270

{Embed}
https://www.mobileread.com/forums/showthread.php?t=329270
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal...
PRS-T1 PRS-T1 run from SD card / UART recovery from broken internal flash Sony Reader Dev Corner


[4/22/2022 7:15 PM] nonasuomy
look past the first guys comments he starts explaining to another person how to flash his image to sd and boot from it.


[4/22/2022 7:16 PM] nonasuomy
says something about how they had corruption in different spots


[4/22/2022 7:17 PM] nonasuomy
Ideally I want to try what @tux-linux said about testing the touch a/b build with a mix of those directions.


[4/22/2022 7:26 PM] nonasuomy
Wish that JS-Wolf guy would stop replying to topics with "just buy another reader" second time I've seen him do that.


[4/22/2022 7:27 PM] nonasuomy
Then all the quality information gets side tracked in to a blah blah about a device to buy.


[4/22/2022 7:28 PM] nonasuomy
Also wish people put more information after they figured something out with the OP's help... Just like YAY IT WORKS... ok well wtf did you do...


[4/22/2022 7:37 PM] nonasuomy
"Based on your error messages & symptoms, it seems your flash is broken in the user partition area while my was broken in the kernel area. But doesn't matter, as my image moves it all to SD card."


[4/22/2022 7:38 PM] tux_linux
That's never funny


[4/22/2022 7:39 PM] tux_linux
Maybe divert contacts to another MMC?


[4/22/2022 7:42 PM] nonasuomy
Maybe we can https://jpa.kapsi.fi/stuff/other/sd_card_PRS-T1_1.0.07_adb_enabled.bin.xz modify this image with the files from Touch A/B


[4/22/2022 7:44 PM] nonasuomy
Can you explain this step I'm not following why you would want to make a copy of the same image why not just use the first image?
```
I haven't actually tried this myself, but I think you could get it done this way using the rupor USB shell:

1. Copy the uboot env from my image to a separate file:
Code:
dd if=sd_card_PRS-T1_1.0.07_adb_enabled.bin skip=786432 of=uboot_new.bin bs=1 count=131072
```


[4/22/2022 8:05 PM] nonasuomy
Looks like that made a 128KB image


[4/22/2022 8:05 PM] nonasuomy
so maybe it's just the boot parameters


[4/22/2022 8:07 PM] nonasuomy
Ah yes that is what he is doing.


[4/22/2022 8:13 PM] nonasuomy
Ideally this would be best as then you could mod these without taking anything apart.


[4/22/2022 8:13 PM] nonasuomy
Here goes nothing... booting oem os from the sd card slot...


[4/22/2022 8:14 PM] nonasuomy
yay it works


[4/22/2022 8:15 PM] nonasuomy
_quits room never to be seen again..._


[4/22/2022 8:16 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1390-55E47.jpg


[4/22/2022 8:17 PM] nonasuomy
So nice to have wifi and usb working again!


[4/22/2022 8:18 PM] nonasuomy
Hmm


[4/22/2022 8:22 PM] nonasuomy
Looks like it lost all it's where abouts while being on the SDCard slot.

{Attachments}
/mnt/data/projects/git/conversations/media/3CBDFC29-8D94-4863-A663-BFD6B72E02C1-C837D.jpg


[4/22/2022 8:22 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/017B04C7-AF38-475C-8699-7BADC37EB1F2-0B46E.jpg


[4/22/2022 8:23 PM] nonasuomy
Browser auto flips to landscape


[4/22/2022 8:42 PM] nonasuomy
Here is just the bootloader to swap to SDCard boot.

{Attachments}
/mnt/data/projects/git/conversations/media/uboot_new-7A89D.bin

{Reactions}
👍 

[4/22/2022 8:56 PM] tux_linux
U-Boot is usually that small


[4/22/2022 8:57 PM] nonasuomy
**SDCard Boot directions for Sony PRS-T1**

Copy contents of https://discord.com/channels/809205711778480158/966554812567130152/966907186154438686 to root of SDCard folder

Copy uboot_new.bin https://discord.com/channels/809205711778480158/966554812567130152/967133364454834197 to Rupor Rescue SD Card, along with the other files that are already there.

SD Card Layout
```
OS Firmware
|-files
| |-update.img
uboot_new.bin
```

Boot Rupor Rescue to get serial shell over USB (Hold HOME + MENU buttons before you turn on device).

Remount SD Card as writable.

```
mount -o remount,rw /dev/mmcblk0p1 /initrd/mnt/sd
```

Change directory to the SD Card mounted.

```
cd /initrd/mnt/sd
```

Backup the old uboot env to a file.

```
dd if=/dev/mmcblk2 skip=786432 of=uboot_old.bin bs=1 count=131072
```

Write a new one.

```
dd if=uboot_new.bin of=/dev/mmcblk2 seek=786432 bs=1 count=131072
```

Reset device and it should now be booting to the SD Card image.


[4/22/2022 9:03 PM] nonasuomy
@tux-linux what information were you looking for from the uart?


[4/22/2022 9:04 PM] nonasuomy
Addresses of various important blocks that are stored on SD/eMMC before the first partition

```
[root (ttyGS0)]# cat /sys/module/rawdatatable/parameters/rawdata_param
MBR                             :0x00000000:0x00000400
uBoot                           :0x00000400:0x000bfc00
Boot Env                        :0x000c0000:0x00020000
Reserved1                       :0x000e0000:0x00020000
Normal Kernel                   :0x00100000:0x00400000
Normal Rootfs                   :0x00500000:0x00100000
Recovery Kernel                 :0x00600000:0x00400000
Reserved2                       :0x00a00000:0x00500000
Normal Boot Env                 :0x00f00000:0x00020000
Recovery Boot Env               :0x00f20000:0x00020000
Raw Data Table                  :0x00f40000:0x00020000
Info                            :0x00f60000:0x00020000  
Id                              :0x00f80000:0x00020000
Reserved3                       :0x00fa0000:0x00060000
Boot Image                      :0x01000000:0x00100000
Waveform                        :0x01100000:0x00200000
LOG                             :0x01300000:0x00500000
```


[4/22/2022 9:06 PM] nonasuomy
Wonder if I should attempt to root from the sdcard first to get more information before attempting Touch A/B combination.


[4/22/2022 9:12 PM] tux_linux
U-Boot version, U-Boot log, kernel position in MMC, load address, etc


[4/22/2022 11:02 PM] nonasuomy
https://discord.com/channels/809205711778480158/830961435122991155/967161007346692137


[4/22/2022 11:02 PM] nonasuomy
https://oss.sony.net/Products/Linux/Audio/category03.html

{Embed}
https://oss.sony.net/Products/Linux/Audio/category03.html
Sony Global - Source Code Distribution Service
Source code download


[4/22/2022 11:06 PM] nonasuomy
https://prodgpl.blob.core.windows.net/download/Audio/common/2UrziX9Zanih0kfZRY4U3Q/linux-2.6.35.2-20140522-2.tgz


[4/22/2022 11:07 PM] nonasuomy
https://oss.sony.net/Products/Linux/Audio/PRS-T1JP_20140702.html

{Embed}
https://oss.sony.net/Products/Linux/Audio/PRS-T1JP_20140702.html
Sony Global - Source Code Distribution Service
Source code download


[4/23/2022 12:01 AM] tux_linux
Nice


[4/23/2022 1:49 AM] nonasuomy
besides watching the uart can you explain more verbosely where these things are so I can find them for you maybe through the recovery console?


[4/23/2022 2:15 AM] szybet
You need to get into U-Boot, execute help, look for version command, then execute it, execute boot and gather all the output even from the begginging, thats it


[4/23/2022 2:15 AM] szybet
Propably


[4/23/2022 2:17 AM] nonasuomy
Do you think there is a way to "get into U-Boot" from the ADB Shell?


[4/23/2022 4:39 AM] tux_linux
No


[4/23/2022 4:40 AM] tux_linux
Usually you interrupt the boot process by pressing a key on the keyboard right after you press the power button


[4/23/2022 6:57 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-60764.txt


[4/23/2022 7:09 AM] nonasuomy (pinned)
MX50_ARM2 U-Boot > help
?       - alias for 'help'
autoscr - DEPRECATED - use "source" command instead
base    - print or set address offset
bdinfo  - print Board Info structure
boot    - boot default, i.e., run 'bootcmd'
bootd   - boot default, i.e., run 'bootcmd'
bootm   - boot application image from memory
bootp   - boot image via network using BOOTP/TFTP protocol
cls     - clear screen
cmp     - memory compare
coninfo - print console devices and information
cp      - memory copy
crc32   - checksum calculation
dhcp    - boot image via network using DHCP/TFTP protocol
echo    - echo args to console
erase   - erase FLASH memory
ext2load- load binary file from a Ext2 filesystem
ext2ls  - list files in a directory (default /)
fatinfo - print information about filesystem
fatload - load binary file from a dos filesystem
fatls   - list files in a directory (default /)
flinfo  - print FLASH memory information
go      - start application at address 'addr'
help    - print online help
i2c     - I2C sub-system
iminfo  - print header information for application image
imxtract- extract a part of a multi-image
itest   - return true/false on integer compare
loadb   - load binary file over serial line (kermit mode)
loads   - load S-Record file over serial line
loady   - load binary file over serial line (ymodem mode)
loop    - infinite loop on address range
md      - memory display
mii     - MII utility commands
mm      - memory modify (auto-incrementing address)
mmc     - MMC sub system
mmcinfo - mmcinfo <dev num>-- display MMC info

{Attachments}
/mnt/data/projects/git/conversations/media/message-A089D.txt


[4/23/2022 7:09 AM] nonasuomy
mtest   - simple RAM read/write test
mw      - memory write (fill)
nfs     - boot image via network using NFS protocol
nm      - memory modify (constant address)
ping    - send ICMP ECHO_REQUEST to network host
printenv- print environment variables
protect - enable or disable FLASH write protection
rarpboot- boot image via network using RARP/TFTP protocol
reset   - Perform RESET of the CPU
run     - run commands in an environment variable
saveenv - save environment variables to persistent storage
setenv  - set environment variables
sf      - SPI flash sub-system
sleep   - delay execution for some time
source  - run script from memory
sspi    - SPI utility commands
tftpboot- boot image via network using TFTP protocol
version - print monitor version
MX50_ARM2 U-Boot >


[4/23/2022 7:22 AM] nonasuomy
MX50_ARM2 U-Boot > base
Base Address: 0x00000000


[4/23/2022 7:23 AM] nonasuomy
MX50_ARM2 U-Boot > coninfo
List of available devices:
lcd      00000002 ..O
serial   80000003 SIO stdin stdout stderr
nulldev  80000003 SIO


[4/23/2022 7:24 AM] nonasuomy
MX50_ARM2 U-Boot > version

U-Boot 2009.08 (Dec 21 2011 - 14:48:38)


[4/23/2022 7:31 AM] nonasuomy
MX50_ARM2 U-Boot > iminfo

## Checking Image at 70800000 ...
Unknown image format!


[4/23/2022 7:32 AM] nonasuomy
@tux-linux anything else?


[4/23/2022 7:41 AM] nonasuomy
There’s the faulty Sandisk eMMC under the e-ink flex cable.

{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1394-C6FAC.jpg


[4/23/2022 9:44 AM] nonasuomy
That PRSTUX set this for their build...
```
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootcmd=mmc read 2 ${loadaddr} 0x800 0x1400;bootm ${loadaddr}
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/sbin/init bootdev=2 rawtable=0xF40000 
```


[4/23/2022 5:25 PM] tux_linux
Thanks for the logs
It seems pretty similar to the Touch B on the bare hardware part


[4/23/2022 6:40 PM] nonasuomy
What do you think would happen if I just tried to boot the touch B image?


[4/23/2022 6:40 PM] nonasuomy
Is that load addr the right position for that?


[4/23/2022 6:41 PM] szybet
1. Nothing, it panicks
2. magic smoke comes out of some chip
3. the battery starts burning


[4/23/2022 6:42 PM] nonasuomy
Are you speaking from exp?


[4/23/2022 6:42 PM] szybet
not experience, from my knowledge


[4/23/2022 6:45 PM] nonasuomy
@tux-linux what version of Debian do you use for compiling?


[4/23/2022 6:45 PM] szybet
it isin't really that much diffrence, just not an old one. use 11 or 10


[4/23/2022 7:15 PM] tux_linux
The eink screen will probably go bye-bye


[4/23/2022 7:15 PM] tux_linux
(forever)


[4/23/2022 7:15 PM] szybet
hm, why exactly? details?


[4/23/2022 7:16 PM] tux_linux
It should load the kernel fine
But don't try it


[4/23/2022 7:16 PM] tux_linux
Well, I'm pretty certain it's a completely different eink screen, so the waveform will mess it up completely


[4/23/2022 7:17 PM] szybet
sad that it doesn't have any protection


[4/23/2022 7:19 PM] tux_linux
11, 10 will do


[4/23/2022 7:20 PM] tux_linux
Also the Touch B image is too big for the MMC


[4/23/2022 9:46 PM] nonasuomy
Are you talking about the 2GB eMMC that is corrupted? Using an external 4GB SDCard


[4/23/2022 9:47 PM] szybet
waveform is on the internal emmc right?...


[4/23/2022 9:47 PM] szybet
you won't get far if you don't replace this flash :/


[4/23/2022 9:48 PM] nonasuomy
I already have it booting from the SDCard with the OEM os.


[4/23/2022 9:49 PM] szybet
its steal reading from the flash


[4/23/2022 9:49 PM] szybet
it will kill it one day completly


[4/23/2022 9:49 PM] nonasuomy
We’ll deal with that when that time comes.


[4/23/2022 9:51 PM] nonasuomy
What does the waveform data do? Controls how the screen updates?


[4/23/2022 9:51 PM] szybet
its the information for the kernel / cpu how and what to write to the e-ink


[4/23/2022 9:52 PM] nonasuomy
Where is it normally stored?


[4/23/2022 9:52 PM] szybet
on a specified location on a flash


[4/23/2022 9:53 PM] nonasuomy
What does it look like


[4/23/2022 9:54 PM] szybet
https://discord.com/channels/809205711778480158/943711473341960253/963910834751426634


[4/23/2022 9:54 PM] szybet
here it is from the nia


[4/23/2022 9:54 PM] szybet
its model specific, but still maybe you will find it


[4/23/2022 10:25 PM] tux_linux
Does everything load from the external MMC?


[4/23/2022 10:26 PM] szybet
it would be nice if it did


[4/23/2022 10:40 PM] nonasuomy
Well holding onto home and menu triggers the device to update from SD so maybe if you know what to do from there.


[4/23/2022 10:43 PM] nonasuomy
Does the device know what to do with those buttons before it touches loading commands from the eMMC? If there was no internal SD card in the KOBO would it still do something?


[4/23/2022 10:45 PM] nonasuomy
Is there some kind of hardware bios before the internal memory module.


[4/24/2022 1:30 AM] nonasuomy
Someone should make a bga to sdcard slot


[4/24/2022 1:31 AM] nonasuomy
Lots of devices to go from eMMC to SD but not SD to eMMC 😄


[4/24/2022 1:37 AM] nonasuomy
https://www.digchip.com/datasheets/download_datasheet.php?id=7693769&part-number=SDIN5D1-2G-LT


[4/24/2022 1:38 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-8876B.png


[4/24/2022 1:47 AM] nonasuomy
I got the folders docker-build 14.04 / rootfs / splash to make but not boot or 12.04 (if this is needed?)


[4/24/2022 1:48 AM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/blob/master/boot/Makefile

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/boot/Makefile
boot/Makefile · master · Matias N. / prstux
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[4/24/2022 1:48 AM] nonasuomy
Anything there standout that may be a tool that I don't have?


[4/24/2022 1:49 AM] nonasuomy
think this mkubootenv maybe something.


[4/24/2022 1:49 AM] nonasuomy
maybe it's this https://github.com/tklauser/mkubootenv

{Embed}
https://github.com/tklauser/mkubootenv
GitHub - tklauser/mkubootenv: U-Boot environment image creator
U-Boot environment image creator. Contribute to tklauser/mkubootenv development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/mkubootenv-A8995


[4/24/2022 1:51 AM] nonasuomy
I think that checks out... 

```
usage: mkubootenv [-s <size>] <source file> <target file>
```

```
mkubootenv/mkubootenv -s 131072 boot-env.txt bootenv
```


[4/24/2022 1:52 AM] tux_linux
Probably, but why not use setenv in U-Boot console?


[4/24/2022 1:54 AM] nonasuomy
not sure I'm just trying to get this to build the prstux image not trying to do anything a different way just yet.

{Reactions}
👍 

[4/24/2022 1:55 AM] nonasuomy
Are the steps some place to build the InkBox Touch B build?


[4/24/2022 1:56 AM] tux_linux
Hmm... Not really
You can try imgtool, but there's not a written walkthrough


[4/24/2022 1:56 AM] nonasuomy
What dependencies would be required?


[4/24/2022 1:56 AM] tux_linux
A lot


[4/24/2022 1:56 AM] nonasuomy
Can you list them for me?


[4/24/2022 1:56 AM] nonasuomy
I'll start installing everything in this VM


[4/24/2022 1:57 AM] tux_linux
Too much to remember
I'll try to write them down later
Look in the emu repo, in the readme there are some you should install


[4/24/2022 2:06 AM] nonasuomy
What do you think would have to be mainly modified in the Touch B firmware to get this working on the PRS-T1?


[4/24/2022 2:10 AM] tux_linux
Eink related stuff


[4/24/2022 2:18 AM] nonasuomy
I just tried to run it. It strangely blanked the screen then showed the regular loading screen but the bar never moved heard some squealing so I just reset it and put the other card back in seems ok.


[4/24/2022 2:54 AM] tux_linux
Whoa, I'm impressed it got there


[4/24/2022 2:54 AM] tux_linux
Well, first thing would be to compile a kernel from Sony's sources


[4/24/2022 3:30 AM] nonasuomy
How do you go about that?


[4/24/2022 4:41 AM] nonasuomy
Have no idea what I built with prstux repo but it completed and after a small tweak of pointing it to a file instead of the card it spit out a 900K image not sure what it’s for.


[4/24/2022 4:43 AM] nonasuomy
I see this here but also not sure what it’s for… http://build.koreader.rocks/download/nightly/v2022.03.1-40-g4e517f48_2022-04-22/koreader-sony-prstux-v2022.03.1-40-g4e517f48_2022-04-22.zip


[4/24/2022 4:46 AM] nonasuomy
Pokes @NiLuJe


[4/24/2022 5:16 AM] tux_linux
I think you need to set up a block device with a file
Some things (partition, dd) won't work otherwise
Read about qemu-nbd


[4/24/2022 5:18 AM] tux_linux
```
qemu-img create -f qcow2 prstux.img 3.6G
modprobe nbd
qemu-nbd --connect /dev/nbd0 prstux.img
```
Then point your script to nbd0


[4/24/2022 5:19 AM] tux_linux
To write it to the SD, dd from nbd0 and **not the image**


[4/24/2022 4:21 PM] nonasuomy
Building PRSTUX repo from fresh debian 11 install (not sure what I'm doing yet...)
```
sudo apt install git  linux-headers-$(uname -r) build-essential docker curl debootstrap qemu qemu-utils qemu-user-static binfmt-support imagemagick vim
sudo modprobe binfmt_misc
sudo curl -sSL https://get.docker.com/ | sh
mkdir code
cd code
git clone https://github.com/tklauser/mkubootenv.git 
cd mkubootenv
sudo make
cd ..
git clone https://gitlab.com/phreakuencies/prstux.git
cd prstux
cp ~/code/mkubootenv/mkubootenv ~/code/prstux/mkubootenv/
```

Fix broken Makefile replace spaces with tabs
```
vim /home/nonasuomy/code/prstux/splash/Makefile
:%s/^[ ]\+/\t/g
```

remove the first ../ in front of the script path as well.

```
sudo make flash DEVICE=./prstux.img
```


[4/24/2022 4:22 PM] nonasuomy
Output
```
~/code/prstux$ make flash DEVICE=./prstux.img
make -C boot
make[1]: Entering directory '/home/nonasuomy/code/prstux/boot'
mkubootenv/mkubootenv -s 131072 boot-env.txt bootenv
make[1]: Leaving directory '/home/nonasuomy/code/prstux/boot'
make -C boot flash
make[1]: Entering directory '/home/nonasuomy/code/prstux/boot'
Flashing...
../scripts/flash_normal_bootenv.sh ./prstux.img
Will flash into device: ./prstux.img
Continue? Type 'yes': yes
+ echo 'Zeroing normal env area'
Zeroing normal env area
+ sudo dd if=/dev/zero of=./prstux.img bs=512 seek=30720 count=256
256+0 records in
256+0 records out
131072 bytes (131 kB, 128 KiB) copied, 0.00130886 s, 100 MB/s
+ echo 'Flashing env'
Flashing env
+ sudo dd if=bootenv of=./prstux.img bs=512 seek=30720 count=256
256+0 records in
256+0 records out
131072 bytes (131 kB, 128 KiB) copied, 0.00254849 s, 51.4 MB/s
+ sudo dd if=bootenv of=./prstux.img bs=512 seek=1536 count=256
256+0 records in
256+0 records out
131072 bytes (131 kB, 128 KiB) copied, 0.00657853 s, 19.9 MB/s
+ echo Synching
Synching
+ sync
+ sync
+ sync
Done.
make[1]: Leaving directory '/home/nonasuomy/code/prstux/boot'
make -C splash flash
make[1]: Entering directory '/home/nonasuomy/code/prstux/splash'
convert splash.png -size 800x600 -depth 8 gray:bootsplash.bin
Flashing...
../scripts/flash_bootsplash.sh ./prstux.img
Flashing bootsplash
480000+0 records in
480000+0 records out
480000 bytes (480 kB, 469 KiB) copied, 1.40263 s, 342 kB/s
Synching
Done.
make[1]: Leaving directory '/home/nonasuomy/code/prstux/splash'
```


[4/24/2022 4:22 PM] tux_linux
ok so you don't need to do this?


[4/24/2022 4:22 PM] tux_linux
and provide nbd0 as DEVICE env var?


[4/24/2022 4:23 PM] nonasuomy
not sure where are you finding this?


[4/24/2022 4:23 PM] tux_linux
Because dd-ing to files doesn't work as you expect


[4/24/2022 4:23 PM] nonasuomy
Do you see that process in any of their build files?


[4/24/2022 4:23 PM] tux_linux
No
But they're using the MMC as DEVICE


[4/24/2022 4:24 PM] tux_linux
Which is a block device, just like nbd0, and not a file


[4/24/2022 4:24 PM] tux_linux
Is it still a 900K image?


[4/24/2022 4:24 PM] nonasuomy
little bit larger now after I corrected the Makefile error as it seems to have added the splash haha.


[4/24/2022 4:25 PM] nonasuomy
```
-rw-r--r-- 1 nonasuomy nonasuomy 17257216 Apr 24 10:17 prstux.img
```


[4/24/2022 4:26 PM] tux_linux
hmm
what if you flash it to an MMC?


[4/24/2022 4:32 PM] nonasuomy
Does 17MB seem like enough?


[4/24/2022 4:33 PM] tux_linux
...no?
But I don't really know PRSTux, maybe it is enough


[4/24/2022 4:34 PM] nonasuomy
I feel like nothing is in there no kernel or system files etc


[4/24/2022 4:34 PM] tux_linux
then try with the qemu-img thing above


[4/24/2022 4:36 PM] nonasuomy
Wouldn't that just make an empty image that is 3.6G then it would splice that 17MB into it?


[4/24/2022 4:36 PM] nonasuomy
I feel like something is missing


[4/24/2022 4:36 PM] tux_linux
qcow2 is dynamically allocated


[4/24/2022 4:36 PM] nonasuomy
Where are the linux os files coming from


[4/24/2022 4:36 PM] tux_linux
so if you try to see the size of the img file, it will show how much has been written to it (approximately)


[4/24/2022 4:37 PM] tux_linux
that's why you need to dd from nbd0 and not the img itself


[4/24/2022 4:37 PM] nonasuomy
He seems to only have modules from sony in the directory no kernel


[4/24/2022 4:38 PM] tux_linux
it says it, there are two parts

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-59E5F.png


[4/24/2022 4:38 PM] tux_linux
first that 17mb nonsense, then apparently there is a prstux.img somewhere


[4/24/2022 4:39 PM] tux_linux
unless there isn't


[4/24/2022 4:39 PM] nonasuomy
there isn't


[4/24/2022 4:39 PM] tux_linux
but you should `make all` then


[4/24/2022 4:40 PM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-189D4.png


[4/24/2022 4:42 PM] nonasuomy
Hmm maybe this prstux-base image...


[4/24/2022 4:43 PM] nonasuomy
```
sudo make all
[sudo] password for nonasuomy: 
make -C boot
make[1]: Entering directory '/home/nonasuomy/code/prstux/boot'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/nonasuomy/code/prstux/boot'
make -C splash
make[1]: Entering directory '/home/nonasuomy/code/prstux/splash'
make[1]: 'bootsplash.bin' is up to date.
make[1]: Leaving directory '/home/nonasuomy/code/prstux/splash'
make -C docker-build 14.04
make[1]: Entering directory '/home/nonasuomy/code/prstux/docker-build'
docker build -t prstux-dev:14.04 14.04
Sending build context to Docker daemon   2.56kB
Step 1/8 : FROM ubuntu:14.04
 ---> 13b66b487594
Step 2/8 : RUN apt-get -y update
 ---> Using cache
 ---> e2966287f94f
Step 3/8 : RUN apt-get install -y emdebian-archive-keyring
 ---> Using cache
 ---> 68f078683adf
Step 4/8 : RUN apt-get install -y build-essential git bison autoconf gperf flex texinfo help2man gawk libtool libncurses5-dev unzip bc
 ---> Using cache
 ---> 510d48b1e3ab
Step 5/8 : RUN apt-get install -y pkg-config-arm-linux-gnueabihf
 ---> Using cache
 ---> df7b42790e3a
Step 6/8 : RUN apt-get install -y u-boot-tools
 ---> Using cache
 ---> 5f70785bb8bb
Step 7/8 : RUN apt-get install -y wget vim
 ---> Using cache
 ---> 46afb16fe8b3
Step 8/8 : RUN apt-get install -y debootstrap qemu-user-static
 ---> Using cache
 ---> 322a2df2c107
Successfully built 322a2df2c107
Successfully tagged prstux-dev:14.04
make[1]: Leaving directory '/home/nonasuomy/code/prstux/docker-build'
make -C rootfs
make[1]: Entering directory '/home/nonasuomy/code/prstux/rootfs'
./make-base.sh
prstux-base docker image already exists. use make clean_base to remove if you want to rebuild it
make[1]: Leaving directory '/home/nonasuomy/code/prstux/rootfs'
```


[4/24/2022 4:45 PM] nonasuomy
He says this:
```
Build
TODO: not finished
In case you prefer to recreate PRSTUX image yourself, you can do so by cloning the repository and simply do:

$ make


This will produce a .tar file containing the contents of the root filesystem and a ready-made image appropriate for burning into an SD card. The .tar file is useful if you want to update PRSTUX after an update but want to leave your data (such as eBooks) intact.
```


[4/24/2022 4:46 PM] nonasuomy
I'm guessing by the terminal output above that it created a docker container but never output a build file from it as a tar as said above.


[4/24/2022 4:49 PM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/make-base.sh

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/make-base.sh
rootfs/make-base.sh · master · Matias N. / prstux
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[4/24/2022 4:51 PM] nonasuomy
How would we output that docker to a writable image?


[4/24/2022 5:25 PM] nonasuomy
Hmm I guess it does…


[4/24/2022 5:25 PM] nonasuomy
‘’’sudo tar -C rootfs -c . | docker import - prstux-base:latest
  sudo rm -rf rootfs/‘’’


[4/24/2022 5:39 PM] nonasuomy
Hmm maybe because I ran everything separately to figure out the dependancies and maybe it broke the flow with those files already existing in each of the folders.


[4/24/2022 7:06 PM] nonasuomy
I guess thats actually  dumping the contents of rootfs to the docker running.


[4/24/2022 7:10 PM] tux_linux
that's what it seems it does, yeah


[4/24/2022 7:13 PM] nonasuomy
```
mount: permission denied
update-binfmts: warning: Couldn't mount the binfmt_misc filesystem on /proc/sys/fs/binfmt_misc.
```


[4/24/2022 7:13 PM] tux_linux
you need to enable that feature in your kernel


[4/24/2022 7:13 PM] tux_linux
or maybe it is availble as a module


[4/24/2022 7:15 PM] nonasuomy
I believe I modprobed it above


[4/24/2022 7:15 PM] tux_linux
that's strange


[4/24/2022 7:16 PM] tux_linux
it's a warning, I don't know if it is fatal or not


[4/24/2022 7:29 PM] nonasuomy
Does it need sudo modprobe binfmt_misc inside the docker build or binfmt_misc is for the host?


[4/24/2022 7:29 PM] tux_linux
afaik, docker doesn't use its own kernel/VM


[4/24/2022 7:29 PM] tux_linux
so, on the host


[4/24/2022 7:30 PM] nonasuomy
It says mount: permission denied above the warning


[4/24/2022 7:31 PM] tux_linux
probably sudo then


[4/24/2022 7:31 PM] tux_linux
and docker probably isn't running as root


[4/24/2022 7:31 PM] tux_linux
modprobe on your host


[4/24/2022 7:34 PM] nonasuomy
```
binfmt is trying to register qemu as a binary loader so you don't need to invoke qemu everytime you need to run a binary with it. To do that it requires privileges that the container doesn't have.

Ignore those warnings because it doesn't make sense to register binfmt on the host while the image is being built.
```


[4/24/2022 7:35 PM] tux_linux
where's that written?


[4/24/2022 7:35 PM] nonasuomy
https://stackoverflow.com/questions/54951262/binfmt-misc-problems-in-ubuntu18-04-under-docker

{Embed}
https://stackoverflow.com/questions/54951262/binfmt-misc-problems-in-ubuntu18-04-under-docker
binfmt_misc problems in ubuntu18.04 under docker
Trying to get a cross chroot running under ubuntu:18.04 in a docker container.

While trying to install binfmt-support (dependency of qemu-user-static) this happens:

~ docker run -it ubuntu:18.04 ...
/mnt/data/projects/git/conversations/media/apple-touch-icon%402-C50E4.png


[4/24/2022 7:36 PM] tux_linux
well, from an educated guess, prstux img builder is probably trying to use qemu-arm or qemu-user-arm, which requires binfmt most of the time


[4/24/2022 7:36 PM] tux_linux
it would make sense, given it's building an image for an ARM device


[4/24/2022 7:38 PM] nonasuomy
no expliations though conflicts with what this person is saying as well https://community.nxp.com/t5/Layerscape/LSDK1909-weston-compilation-failure-on-custom-docker-container/m-p/1026748

{Embed}
https://community.nxp.com/t5/Layerscape/LSDK1909-weston-compilation-failure-on-custom-docker-container/m-p/1026748
LSDK1909 weston compilation failure on custom docker container
I am having trouble building a ls1088ardb_pb image (with CONFIG_APP_SECURE_OBJ and CONFIG_APP_OPTEE enabled) via LSDK 19.09 on a docker amd64 Ubuntu 18.04.3 container.  I have seen previous questions about this (LSDK weston build error , compilation failure flexbuild_lsdk1909_update_221019 "app" com...


[4/24/2022 7:38 PM] nonasuomy
```
"I figured out the issue: I had been installing “sudo apt install -y binfmt-support qemu-system-common qemu-user-static" within the container, rather than the host.After installing it on the host, the issue was resolved."
```


[4/24/2022 7:51 PM] nonasuomy
Tried both ways and still has the error so we're just going to ignore it like you said haha...


[4/24/2022 7:52 PM] tux_linux
A semi-appropriate thing to do would be to actually install Ubuntu 14.04 on a VM and use the tools that were available at the time


[4/24/2022 7:53 PM] tux_linux
Though I don't know if you could still access the packages server


[4/24/2022 7:53 PM] tux_linux
Probably archive.ubuntu.com


[4/24/2022 7:59 PM] nonasuomy
Maybe


[4/24/2022 7:59 PM] nonasuomy
```
I: Base system installed successfully.
sha256:f60291bf47337abb8193d56f1dd1b8dfae0bafd245cb93f6ece11260a4f64e60
make[1]: Leaving directory '/home/nonasuomy/code/prstux/rootfs'
```


[4/24/2022 8:00 PM] nonasuomy
ok so what now build thing...


[4/24/2022 8:00 PM] tux_linux
that's suspicious


[4/24/2022 8:00 PM] tux_linux
but anyway, we'll see


[4/24/2022 8:02 PM] nonasuomy
Checked all the folders nothing came out


[4/24/2022 8:03 PM] tux_linux
\*yay\*


[4/24/2022 8:03 PM] tux_linux
we really should just get the kernel sources


[4/24/2022 8:03 PM] tux_linux
after that we can setup inkbox


[4/24/2022 8:03 PM] nonasuomy
I think the scripts are missing the output part from docker after it does this massaging


[4/24/2022 8:05 PM] nonasuomy
Lead the way  senpai https://prodgpl.blob.core.windows.net/download/Audio/common/2UrziX9Zanih0kfZRY4U3Q/linux-2.6.35.2-20140522-2.tgz


[4/24/2022 8:06 PM] tux_linux
but this is not for android right?


[4/24/2022 8:08 PM] nonasuomy
This device stock runs android 2.2.1 is that what you are asking?


[4/24/2022 8:08 PM] tux_linux
yes, there are differences between android and linux kernel


[4/24/2022 8:08 PM] tux_linux
even though the Android one is Linux-based


[4/24/2022 8:08 PM] tux_linux
but maybe they don't matter


[4/24/2022 8:13 PM] nonasuomy
```
:~/code/prstux$ sudo docker images
REPOSITORY    TAG       IMAGE ID       CREATED             SIZE
prstux-base   latest    f60291bf4733   13 minutes ago      342MB
prstux-dev    14.04     9fb33fb8ac9b   22 minutes ago      527MB
<none>        <none>    d97cb24c140d   About an hour ago   524MB
ubuntu        14.04     13b66b487594   13 months ago       197MB
```


[4/24/2022 8:17 PM] nonasuomy
I'm guessing the image would have to be close to one of those in size.


[4/24/2022 8:22 PM] nonasuomy
I think scripting like this is missing https://iximiuz.com/en/posts/from-docker-container-to-bootable-linux-disk-image/

{Embed}
https://iximiuz.com/en/posts/from-docker-container-to-bootable-linux-disk-image/
From Docker Container to Bootable Linux Disk Image
Dump Docker container's filesystem to tar archive and covert it to bootable Linux disk image.
/mnt/data/projects/git/conversations/media/dive-systemd-4EBC0.gif


[4/24/2022 8:25 PM] nonasuomy
"We couldn't find any code results matching docker export in project Matias N. / prstux"


[4/24/2022 8:26 PM] tux_linux
Maybe it didn't exist at the time


[4/24/2022 8:44 PM] nonasuomy
Maybe or they got side tracked after getting that far...


[4/24/2022 8:44 PM] nonasuomy
```
CID=$(docker run -d prstux-base /bin/true)

docker export -o prstux.tar ${CID}

sudo tar -tf 
prstux.tar | grep -E '^[^/]*/?$'
.dockerenv
bin/
boot/
dev/
etc/
home/
lib/
media/
mnt/
opt/
proc/
root/
run/
sbin/
srv/
sys/
tmp/
usr/
var/
```


[4/24/2022 11:02 PM] nonasuomy
So what needs to happen?


[4/24/2022 11:03 PM] tux_linux
first, try to compile a kernel from those sources and get it to boot on the Sony


[4/24/2022 11:03 PM] tux_linux
after that we can include it in the official kernel repo and start porting


[4/24/2022 11:07 PM] nonasuomy
How do you accomplish this process?


[4/24/2022 11:09 PM] tux_linux
```
git clone https://github.com/Kobo-InkBox/kernel
export PATH="${PATH}:/kernel/toolchain/gcc-4.8/bin"
cd "/sony/kernel/source"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage
```


[4/24/2022 11:09 PM] tux_linux
Then
`dd if=uImage of=/dev/mmcblk0 bs=512 seek=2048`
the seek value may not be the same if sony put the load sector elsewhere


[4/24/2022 11:11 PM] tux_linux
it will be 2048 (0x800)


[4/24/2022 11:11 PM] nonasuomy
https://discord.com/channels/809205711778480158/966554812567130152/967330075253043230


[4/24/2022 11:11 PM] nonasuomy
Does that explain where it is or this is something different?


[4/24/2022 11:11 PM] tux_linux
the `bootcmd` part tells it


[4/24/2022 11:12 PM] tux_linux
`mmc read 2 ${loadaddr} 0x800 0x1400`
means read the MMC 2 from sector 2048 to sector 5120


[4/24/2022 11:15 PM] nonasuomy
Ok will see how this goes!

{Reactions}
👍 

[4/24/2022 11:15 PM] ninuje
Too many cooks: what was the actual ping about?


[4/25/2022 12:55 AM] nonasuomy
https://youtu.be/QrGrOK8oZG8

{Embed}
Adult Swim
https://www.youtube.com/watch?v=QrGrOK8oZG8
Too Many Cooks | Adult Swim
Too Many Cooks
Watch Full Episodes: http://asw.im/3cyX3a
SUBSCRIBE: https://youtube.com/adultswim1?sub_confirmation=1

About Adult Swim:
Adult Swim is your late-night home for animation and live-action comedy. Enjoy some of your favorite shows, including Robot Chicken, Venture Bros., Tim and Eric, Aqua Teen, Childrens Hospital, Delocated, Metalo...
/mnt/data/projects/git/conversations/media/sddefault-48C80.jpg


[4/25/2022 12:55 AM] nonasuomy
Did you have a PRS-T2/T1 and have that PRSTUX running?


[4/25/2022 1:49 AM] nonasuomy
```
~/code/linux-2.6.35.2$ sudo make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage
make: arm-linux-gnueabihf-gcc: No such file or directory
  HOSTCC  scripts/basic/fixdep
  HOSTCC  scripts/basic/docproc
  HOSTCC  scripts/basic/hash
  HOSTCC  scripts/kconfig/conf.o
scripts/kconfig/conf.c: In function ‘conf_sym’:
scripts/kconfig/conf.c:159:6: warning: variable ‘type’ set but not used [-Wunused-but-set-variable]
  159 |  int type;
      |      ^~~~
scripts/kconfig/conf.c: In function ‘conf_choice’:
scripts/kconfig/conf.c:231:6: warning: variable ‘type’ set but not used [-Wunused-but-set-variable]
  231 |  int type;
      |      ^~~~
  HOSTCC  scripts/kconfig/kxgettext.o
  SHIPPED scripts/kconfig/zconf.tab.c
  SHIPPED scripts/kconfig/lex.zconf.c
  SHIPPED scripts/kconfig/zconf.hash.c
  HOSTCC  scripts/kconfig/zconf.tab.o
  HOSTLD  scripts/kconfig/conf
scripts/kconfig/conf -s arch/arm/Kconfig
***
*** You have not yet configured your kernel!
*** (missing kernel config file ".config")
***
*** Please run some configurator (e.g. "make oldconfig" or
*** "make menuconfig" or "make xconfig").
***
make[2]: *** [/home/nonasuomy/code/linux-2.6.35.2/scripts/kconfig/Makefile:34: silentoldconfig] Error 1
make[1]: *** [/home/nonasuomy/code/linux-2.6.35.2/Makefile:464: silentoldconfig] Error 2
make: *** No rule to make target 'include/config/auto.conf', needed by 'include/config/kernel.release'.  Stop.
```


[4/25/2022 1:55 AM] tux_linux
`env | grep PATH`?


[4/25/2022 1:58 AM] nonasuomy
```
env | grep PATH
PATH=/home/nonasuomy/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/snap/bin:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin
```


[4/25/2022 2:03 AM] tux_linux
If you run `arm-linux-gnueabihf-gcc`, what does it output?


[4/25/2022 2:03 AM] tux_linux
don't use sudo to make


[4/25/2022 2:04 AM] tux_linux
i think it might actually be your problem


[4/25/2022 2:05 AM] nonasuomy
```
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage
scripts/kconfig/conf -s arch/arm/Kconfig
***
*** You have not yet configured your kernel!
*** (missing kernel config file ".config")
***
*** Please run some configurator (e.g. "make oldconfig" or
*** "make menuconfig" or "make xconfig").
***
make[2]: *** [/home/nonasuomy/code/linux-2.6.35.2/scripts/kconfig/Makefile:34: silentoldconfig] Error 1
make[1]: *** [/home/nonasuomy/code/linux-2.6.35.2/Makefile:464: silentoldconfig] Error 2
make: *** No rule to make target 'include/config/auto.conf', needed by 'include/config/kernel.release'.  Stop.
```


[4/25/2022 2:05 AM] tux_linux
then, the toolchain problem is fine
now fiddle in `arch/arm/configs` and try to see if you see something relevant for the Sony


[4/25/2022 2:10 AM] nonasuomy
```
~/code/linux-2.6.35.2/arch/arm/configs$ ls
acs5k_defconfig             mx21_defconfig
acs5k_tiny_defconfig        mx27_defconfig
afeb9260_defconfig          mx31pdk_defconfig
am200epdkit_defconfig       mx3_defconfig
am3517_evm_defconfig        mx3_updater_defconfig
ams_delta_defconfig         mx51_defconfig
ap4evb_defconfig            n770_defconfig
assabet_defconfig           n8x0_defconfig
at572d940hfek_defconfig     neocore926_defconfig
at91cap9adk_defconfig       neponset_defconfig
at91rm9200dk_defconfig      netwinder_defconfig
at91rm9200ek_defconfig      netx_defconfig
at91sam9260ek_defconfig     nhk8815_defconfig
at91sam9261ek_defconfig     ns9xxx_defconfig
at91sam9263ek_defconfig     nuc910_defconfig
at91sam9g20ek_defconfig     nuc950_defconfig
at91sam9rlek_defconfig      nuc960_defconfig
ateb9200_defconfig          omap_2430sdp_defconfig
badge4_defconfig            omap_3430sdp_defconfig
bcmring_defconfig           omap_3630sdp_defconfig
cam60_defconfig             omap3_beagle_defconfig
carmeva_defconfig           omap3_defconfig
cerfcube_defconfig          omap3_evm_defconfig
cm_t35_defconfig            omap3_pandora_defconfig
cm_x2xx_defconfig           omap3_stalker_lks_defconfig
cm_x300_defconfig           omap3_touchbook_defconfig
cns3420vb_defconfig         omap_4430sdp_defconfig
colibri_pxa270_defconfig    omap_apollon_2420_defconfig
colibri_pxa300_defconfig    omap_generic_1510_defconfig
collie_defconfig            omap_generic_1610_defconfig
corgi_defconfig             omap_generic_1710_defconfig
cpu9260_defconfig           omap_generic_2420_defconfig
cpu9g20_defconfig           omap_h2_1610_defconfig
cpuat91_defconfig           omap_h4_2420_defconfig
csb337_defconfig            omap_innovator_1510_defconfig
csb637_defconfig            omap_innovator_1610_defconfig
da8xx_omapl_defconfig       omap_ldp_defconfig
davinci_all_defconfig       omap_osk_5912_defconfig
devkit8000_defconfig        omap_perseus2_730_defconfig
```


[4/25/2022 2:10 AM] nonasuomy
```
dove_defconfig              omap_zoom2_defconfig
ebsa110_defconfig           omap_zoom3_defconfig
ecbat91_defconfig           onearm_defconfig
edb7211_defconfig           orion5x_defconfig
em_x270_defconfig           overo_defconfig
ep93xx_defconfig            palmte_defconfig
eseries_pxa_defconfig       palmtt_defconfig
ezx_defconfig               palmz71_defconfig
footbridge_defconfig        palmz72_defconfig
fortunet_defconfig          pcm027_defconfig
g3evm_defconfig             picotux200_defconfig
g4evm_defconfig             pleb_defconfig
h3600_defconfig             pnx4008_defconfig
h5000_defconfig             pxa168_defconfig
h7201_defconfig             pxa255-idp_defconfig
h7202_defconfig             pxa3xx_defconfig
hackkit_defconfig           pxa910_defconfig
htcherald_defconfig         qil-a9260_defconfig
igep0020_defconfig          raumfeld_defconfig
imote2_defconfig            realview_defconfig
imx23evk_defconfig          realview-smp_defconfig
imx23evk_updater_defconfig  rpc_defconfig
imx25_3stack_defconfig      rx51_defconfig
imx25_updater_defconfig     s3c2410_defconfig
imx28evk_defconfig          s3c6400_defconfig
imx28evk_updater_defconfig  s5p6440_defconfig
imx5_android_defconfig      s5p6442_defconfig
imx5_defconfig              s5pc100_defconfig
imx5_updater_defconfig      s5pc110_defconfig
```


[4/25/2022 2:11 AM] nonasuomy
```
integrator_defconfig        s5pv210_defconfig
iop13xx_defconfig           sam9_l9260_defconfig
iop32x_defconfig            shannon_defconfig
iop33x_defconfig            shark_defconfig
ixp2000_defconfig           simpad_defconfig
ixp23xx_defconfig           spear300_defconfig
ixp4xx_defconfig            spear310_defconfig
jornada720_defconfig        spear320_defconfig
kafa_defconfig              spear600_defconfig
kb9202_defconfig            spitz_defconfig
kirkwood_defconfig          stamp9g20_defconfig
ks8695_defconfig            stmp378x_defconfig
lart_defconfig              stmp37xx_defconfig
loki_defconfig              sx1_defconfig
lpd270_defconfig            tct_hammer_defconfig
lpd7a400_defconfig          trizeps4_defconfig
lpd7a404_defconfig          u300_defconfig
lubbock_defconfig           u8500_defconfig
lusl7200_defconfig          usb-a9260_defconfig
magician_defconfig          usb-a9263_defconfig
mainstone_defconfig         versatile_defconfig
mini2440_defconfig          viper_defconfig
mmp2_defconfig              xcep_defconfig
msm_defconfig               yl9200_defconfig
mv78xx0_defconfig           zeus_defconfig
mx1_defconfig
```


[4/25/2022 2:11 AM] nonasuomy
This one is highlighted imx5_android_defconfig


[4/25/2022 2:16 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/imx5_android_defconfig-33EE0


[4/25/2022 2:16 AM] nonasuomy
See anything there that might need changing?


[4/25/2022 2:22 AM] nonasuomy
Definitely the right file "CONFIG_TOUCHSCREEN_SONYIR=y" What do you do with this file now?


[4/25/2022 2:38 AM] nonasuomy
```
make ARCH=arm imx5_android_defconfig CROSS_COMPILE=arm-linux-gnueabihf- uImage
arch/arm/configs/imx5_android_defconfig:514:warning: override: reassigning to symbol NETFILTER_XT_CONNMARK
#
# configuration written to .config
#
scripts/kconfig/conf -s arch/arm/Kconfig

*** Error during update of the kernel configuration.

make[3]: *** [/home/nonasuomy/code/linux-2.6.35.2/scripts/kconfig/Makefile:34: silentoldconfig] Error 1
make[2]: *** [/home/nonasuomy/code/linux-2.6.35.2/Makefile:464: silentoldconfig] Error 2
make[1]: *** No rule to make target 'include/config/auto.conf', needed by 'include/config/kernel.release'.  Stop.
make: *** [Makefile:444: uImage] Error 2
```


[4/25/2022 2:40 AM] tux_linux
try the two commands separately?


[4/25/2022 2:40 AM] tux_linux
`make ARCH=arm CORSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig`
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage`


[4/25/2022 2:42 AM] nonasuomy
```
nonasuomy@DebianCompiler:~/code/linux-2.6.35.2$ make ARCH=arm CORSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig
arch/arm/configs/imx5_android_defconfig:514:warning: override: reassigning to symbol NETFILTER_XT_CONNMARK
#
# configuration written to .config
#
nonasuomy@DebianCompiler:~/code/linux-2.6.35.2$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage
scripts/kconfig/conf -s arch/arm/Kconfig

*** Error during update of the kernel configuration.

make[2]: *** [/home/nonasuomy/code/linux-2.6.35.2/scripts/kconfig/Makefile:34: silentoldconfig] Error 1
make[1]: *** [/home/nonasuomy/code/linux-2.6.35.2/Makefile:464: silentoldconfig] Error 2
make: *** No rule to make target 'include/config/auto.conf', needed by 'include/config/kernel.release'.  Stop.
```


[4/25/2022 2:43 AM] tux_linux
strange.


[4/25/2022 2:43 AM] tux_linux
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- distclean`
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- mrproper`


[4/25/2022 2:43 AM] tux_linux
then run the two commands above again


[4/25/2022 2:44 AM] nonasuomy
yay it's doing stuff!

{Reactions}
👍 

[4/25/2022 2:45 AM] nonasuomy
```
Can't use 'defined(@array)' (Maybe you should just omit the defined()?) at kernel/timeconst.pl line 373.
make[1]: *** [/home/nonasuomy/code/linux-2.6.35.2/kernel/Makefile:138: kernel/timeconst.h] Error 255
make: *** [Makefile:884: kernel] Error 2
```


[4/25/2022 2:46 AM] tux_linux
`vi kernel/timeconst.pl`
go to line 373
replace the existing statement with
`if (!@val) {`


[4/25/2022 2:47 AM] tux_linux
so it looks like this

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-E44EB.png


[4/25/2022 2:58 AM] nonasuomy
Compiling again... 😄

{Reactions}
👍 

[4/25/2022 2:58 AM] nonasuomy
Did you have to do the same?


[4/25/2022 2:58 AM] nonasuomy
for the kobo


[4/25/2022 2:58 AM] tux_linux
on those kernels, yes


[4/25/2022 2:58 AM] tux_linux
not the distclean/mrproper bit though


[4/25/2022 2:59 AM] nonasuomy
any more of those gotchas?


[4/25/2022 2:59 AM] tux_linux
i don't think so

{Reactions}
🤞 

[4/25/2022 3:00 AM] nonasuomy
I always shoot myself in the foot with vm size I told myself to always use 40GB and some dumb reason I put it to 20GB and have like 99mb so this compile will probably die


[4/25/2022 3:01 AM] nonasuomy
prob need to expand the vdi.


[4/25/2022 3:01 AM] tux_linux
yea


[4/25/2022 3:03 AM] nonasuomy
```
  CC      net/core/gen_stats.o
In file included from net/core/gen_stats.c:18:0:
include/linux/module.h:212:22: fatal error: closing dependency file net/core/.gen_stats.o.d: No space left on device
  static const struct kernel_symbol __ksymtab_##sym \
                      ^
include/linux/module.h:218:2: note: in expansion of macro ‘__EXPORT_SYMBOL’
  __EXPORT_SYMBOL(sym, "")
  ^
net/core/gen_stats.c:252:1: note: in expansion of macro ‘EXPORT_SYMBOL’
 EXPORT_SYMBOL(gnet_stats_finish_copy);
 ^
compilation terminated.
make[2]: *** [scripts/Makefile.build:231: net/core/gen_stats.o] Error 1
make[1]: *** [scripts/Makefile.build:366: net/core] Error 2
make: *** [Makefile:884: net] Error 2
```


[4/25/2022 3:03 AM] nonasuomy
haha


[4/25/2022 3:03 AM] nonasuomy
no space left on device


[4/25/2022 3:03 AM] tux_linux
well...


[4/25/2022 3:03 AM] tux_linux
expand your disk


[4/25/2022 3:03 AM] nonasuomy
speak of the devil


[4/25/2022 3:03 AM] tux_linux
or compile in ram


[4/25/2022 3:04 AM] tux_linux
(if you have enough)


[4/25/2022 3:04 AM] nonasuomy
how much space in total does it require?


[4/25/2022 3:04 AM] tux_linux
not that much


[4/25/2022 3:04 AM] tux_linux
512M more I would say


[4/25/2022 3:07 AM] nonasuomy
Purged all the Sony files going again for now 450MB free will see if there's anything else hiding.


[4/25/2022 3:09 AM] nonasuomy
596MB free hope that's enough


[4/25/2022 3:10 AM] nonasuomy
How long did the compile take on your vm?


[4/25/2022 3:11 AM] tux_linux
~50s

{Reactions}
👀 

[4/25/2022 3:11 AM] tux_linux
but my VM is fast


[4/25/2022 3:11 AM] tux_linux
you can try with make jobs
`-j4`, `-j8`, etc.


[4/25/2022 3:12 AM] nonasuomy
```
  CC      net/socket.o
net/core/.scm.o.cmd:3: *** unterminated variable reference.  Stop.
make[1]: *** [scripts/Makefile.build:366: net/core] Error 2
make: *** [Makefile:884: net] Error 2
```


[4/25/2022 3:13 AM] tux_linux
no idea


[4/25/2022 3:20 AM] nonasuomy
😦


[4/25/2022 3:21 AM] tux_linux
But maybe the fix is easy

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-3FD42.png


[4/25/2022 3:23 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/scm.o-ABB95.cmd


[4/25/2022 3:41 AM] nonasuomy
I may have got it someone said quote marks shouldn't be in make files even though it wasn't directly related I removed that and it started compiling again

{Reactions}
👍 

[4/25/2022 3:43 AM] nonasuomy
```
-D"KBUILD_STR(s)=#s" 
-D"KBUILD_BASENAME=KBUILD_STR(scm)"  
-D"KBUILD_MODNAME=KBUILD_STR(scm)"
```
to 
```
-DKBUILD_STR(s)=#s 
-DKBUILD_BASENAME=KBUILD_STR(scm)  
-DKBUILD_MODNAME=KBUILD_STR(scm)
```


[4/25/2022 3:46 AM] nonasuomy
nope


[4/25/2022 3:47 AM] nonasuomy
```
  CC      net/socket.o
net/core/.scm.o.cmd:3: *** unterminated variable reference.  Stop.
make[1]: *** [scripts/Makefile.build:366: net/core] Error 2
make: *** [Makefile:884: net] Error 2
```


[4/25/2022 4:18 AM] nonasuomy
Sooo not saying this is sane to do but I only found 3 instance of that file mentioned in google and did a search in this repo https://github.com/ananjaser1211/Refinedkernel_2/search?q=.scm.o.cmd

{Embed}
https://github.com/ananjaser1211/Refinedkernel_2/search?q=.scm.o.cmd
Search · .scm.o.cmd · ananjaser1211/Refinedkernel_2
Refined Kernel For Galaxy J5/J7 2017 - V2.8. Contribute to ananjaser1211/Refinedkernel_2 development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/Refinedkernel_2-E8646


[4/25/2022 4:18 AM] nonasuomy
```
/.gitignore
net/core/.request_sock.o.cmd
net/core/.rtnetlink.o.cmd
net/core/.scm.o.cmd
net/core/.secure_seq.o.cmd
net/core/.skbuff.o.cmd
```


[4/25/2022 4:19 AM] nonasuomy
I saw here that it was on the ignore list... so I deleted the file...


[4/25/2022 4:19 AM] tux_linux
hmm
and?


[4/25/2022 4:20 AM] nonasuomy
```
Image Name:   Linux-2.6.35.3
Created:      Sun Apr 24 22:16:10 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2246720 Bytes = 2194.06 KiB = 2.14 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```


[4/25/2022 4:20 AM] tux_linux
yay!


[4/25/2022 4:21 AM] tux_linux
but it's possible it won't load because it seems it doesn't load enough from the MMC


[4/25/2022 4:21 AM] tux_linux
you'll have to change the env
try it before


[4/25/2022 4:22 AM] nonasuomy
What do you mean?


[4/25/2022 4:22 AM] tux_linux
It might not load all of the uImage


[4/25/2022 4:22 AM] tux_linux
only read the MMC up to a certain point


[4/25/2022 4:25 AM] nonasuomy
So now this... I'm just writing this to a blank SD card?


[4/25/2022 4:25 AM] tux_linux
No, the SD card needs to contain at least U-Boot


[4/25/2022 4:26 AM] nonasuomy
./tux-linux --verbose

{Reactions}
😂 

[4/25/2022 4:27 AM] tux_linux
tl;dr, just dd the kernel to an existing working sony firmware card


[4/25/2022 4:28 AM] nonasuomy
What about if I do it to this Rupor's recovery will that work?


[4/25/2022 4:28 AM] tux_linux
i don't really know


[4/25/2022 4:29 AM] nonasuomy
I'm just not sure what android will do with it if I do it to the official os


[4/25/2022 4:30 AM] nonasuomy
I guess we can just try them all...


[4/25/2022 4:31 AM] nonasuomy
do we care about the full os loading or just enough to get a console?


[4/25/2022 4:31 AM] nonasuomy
rupors would just be a console


[4/25/2022 4:31 AM] tux_linux
enough to get a kernel panic


[4/25/2022 4:32 AM] tux_linux
that will let us know that it's working (roughly)


[4/25/2022 4:50 AM] ninuje
Nope, but supposedly the author did ;p

{Reactions}
😅 

[4/25/2022 5:56 AM] nonasuomy
Nothing so far


[4/25/2022 5:56 AM] nonasuomy
not even uboot


[4/25/2022 6:01 AM] nonasuomy
just an orange flashing light


[4/25/2022 6:26 AM] nonasuomy
Ok got something


[4/25/2022 6:27 AM] nonasuomy
```
U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [POR]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 31
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
```


[4/25/2022 6:27 AM] nonasuomy
```
MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2246720 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    286848 Bytes = 280.1 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK
```


[4/25/2022 6:27 AM] nonasuomy
```
Starting kernel ...

Linux version 2.6.35.3 (nonasuomy@DebianCompiler) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) ) #1 PREEMPT Sun Apr 24 22:16:04 EDT 2022
CPU: ARMv7 Processor [412fc085] revision 5 (ARMv7), cr=10c53c7f
CPU: VIPT nonaliasing data cache, VIPT nonaliasing instruction cache
Machine: Freescale MX50 ARM2 Board
Ignoring unrecognised tag 0x54410008
Memory policy: ECC disabled, Data cache writeback
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 63754
Kernel command line: console=ttymxc2,115200 init=/init bootdev=0 rawtable=0xF40000
PID hash table entries: 1024 (order: 0, 4096 bytes)
Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
Memory: 251MB = 251MB total
Memory: 249236k/249236k available, 7788k reserved, 0K highmem
Virtual kernel memory layout:
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    DMA     : 0xf9e00000 - 0xffe00000   (  96 MB)
    vmalloc : 0x90000000 - 0xf4000000   (1600 MB)
    lowmem  : 0x80000000 - 0x8fb00000   ( 251 MB)
    pkmap   : 0x7fe00000 - 0x80000000   (   2 MB)
    modules : 0x7f000000 - 0x7fe00000   (  14 MB)
      .init : 0x80008000 - 0x80025000   ( 116 kB)
      .text : 0x80025000 - 0x80412000   (4020 kB)
      .data : 0x8042e000 - 0x804a86c0   ( 490 kB)
SLUB: Genslabs=9, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Hierarchical RCU implementation.
        RCU-based detection of stalled CPUs is disabled.
        Verbose stalled-CPUs detection is disabled.
NR_IRQS:396
MXC GPIO hardware
MXC IRQ initialized
You should not call the gpmi_set_parent
MXC_Early serial console at MMIO 0x63f90000 (options '115200')
bootconsole [ttymxc2] enabled
Console: colour dummy device 80x30
Mix log static memory : 7fe00000 - 7fffffff
              address : 90400000
  There is not the last log.
```


[4/25/2022 6:28 AM] nonasuomy
```
Initialize a static memory for mix_logger.
```


[4/25/2022 6:31 AM] nonasuomy
So nothing panic'd?


[4/25/2022 6:32 AM] nonasuomy
What would be the next step?


[4/25/2022 6:36 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/uImage-C2B79


[4/25/2022 6:39 AM] nonasuomy
I used the Stock OS here https://jpa.kapsi.fi/stuff/other/sd_card_PRS-T1_1.0.07_adb_enabled.bin.xz


[4/25/2022 2:37 PM] tux_linux
ok, well, even better if nothing panicked


[4/25/2022 2:37 PM] tux_linux
congrats, we have a working kernel


[4/25/2022 2:37 PM] tux_linux
the screen flashes alright?


[4/25/2022 3:24 PM] nonasuomy
Flashes but then restarts and flashes again.


[4/25/2022 3:25 PM] nonasuomy
I believe there is supposed to be more to the log but maybe that is because no os booted?


[4/25/2022 3:26 PM] nonasuomy
I searched "There is not the last log." and there is only one result of someone capturing the boot process in gist... https://gist.github.com/nrdmn/c75f8c8011ca82def7f28e4e23d05ed8

{Embed}
https://gist.github.com/nrdmn/c75f8c8011ca82def7f28e4e23d05ed8
Sony PRS-T1
Sony PRS-T1. GitHub Gist: instantly share code, notes, and snippets.
/mnt/data/projects/git/conversations/media/gist-og-image-17482.png


[4/25/2022 3:29 PM] nonasuomy
Maybe it died Initializing a static memory for mix_logger?


[4/25/2022 3:29 PM] nonasuomy
What do you need next?


[4/25/2022 4:02 PM] tux_linux
Is it with the stock Sony system?


[4/25/2022 4:02 PM] nonasuomy
yes


[4/25/2022 4:05 PM] tux_linux
Whoops


[4/25/2022 4:06 PM] tux_linux
Do you know how to embed an initrd in a kernel?


[4/25/2022 4:07 PM] nonasuomy
No sir.


[4/25/2022 4:08 PM] nonasuomy
What need to be done to do that?


[4/25/2022 4:08 PM] tux_linux
Ok


[4/25/2022 4:08 PM] tux_linux
Get busybox source


[4/25/2022 4:08 PM] tux_linux
Tell me when you have


[4/25/2022 4:09 PM] nonasuomy
Any specific version?


[4/25/2022 4:09 PM] tux_linux
No


[4/25/2022 4:09 PM] tux_linux
Latest


[4/25/2022 4:09 PM] tux_linux
Latest stable


[4/25/2022 4:10 PM] nonasuomy
3 May 2021 -- BusyBox 1.33.1 (stable) Does this version make sense?


[4/25/2022 4:10 PM] tux_linux
Ok yeah


[4/25/2022 4:11 PM] nonasuomy
30 November 2021 -- BusyBox 1.33.2 (stable)


[4/25/2022 4:11 PM] tux_linux
Latest then


[4/25/2022 4:11 PM] nonasuomy
26 December 2021 -- BusyBox 1.35.0 (unstable)


[4/25/2022 4:11 PM] tux_linux
Latest stable


[4/25/2022 4:12 PM] tux_linux
So November


[4/25/2022 4:12 PM] tux_linux
Do you have gcc 4.8 in your path?


[4/25/2022 4:12 PM] nonasuomy
Isn't that what was in your kernel package?


[4/25/2022 4:13 PM] tux_linux
Yes


[4/25/2022 4:13 PM] tux_linux
So get it in your path


[4/25/2022 4:14 PM] tux_linux
Then
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf defconfig`


[4/25/2022 4:14 PM] tux_linux
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf -j8 install`


[4/25/2022 4:14 PM] tux_linux
Tell me when it's done


[4/25/2022 6:22 PM] nonasuomy
Rebuilding the VM will be back in action soon.

{Reactions}
👍 

[4/25/2022 9:49 PM] nonasuomy
ok back!


[4/25/2022 9:52 PM] nonasuomy
```
export PATH="${PATH}:/home/nonasuomy/code/busybox"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf -j8 install
```


[4/25/2022 9:57 PM] nonasuomy
hmmm it's trying to install that kernel on my machine... and getting a permission denied


[4/25/2022 9:57 PM] szybet
what exactly error?


[4/25/2022 9:57 PM] nonasuomy
sbin/installkernel 42 cannot create /boot/vmlinuz-2.6.35.3: Permission denied


[4/25/2022 9:58 PM] szybet
why are you installing kernel for PRS-T1 on your machine...


[4/25/2022 9:58 PM] nonasuomy
lurk up.


[4/25/2022 9:58 PM] szybet
you need here to change a env variable to install it somewhere else


[4/25/2022 9:58 PM] szybet
or just install it there and then copy


[4/25/2022 10:03 PM] nonasuomy
how do you give it a different directory?


[4/25/2022 10:06 PM] nonasuomy
Apparently 
```
export INSTALL_PATH=/home/nonasuomy/code/kernelinstall
```


[4/25/2022 10:09 PM] szybet
yea


[4/25/2022 10:31 PM] nonasuomy
```
Kernel: arch/arm/boot/Image is ready
/bin/bash /home/nonasuomy/code/linux-2.6.35.2/arch/arm/boot/install.sh 2.6.35.3 \
arch/arm/boot/Image System.map "/home/nonasuomy/code/kernelinstall/"
```


[4/25/2022 10:44 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/giphy-BAC86.gif


[4/25/2022 10:46 PM] szybet
Are you compiling this in a VM?


[4/25/2022 10:51 PM] nonasuomy
Yes sir


[4/25/2022 10:52 PM] szybet
It is not efficient... Try a container


[4/25/2022 10:52 PM] szybet
Distrobox, docker


[4/25/2022 10:52 PM] szybet
There was another one too, orange logo


[4/25/2022 10:57 PM] nonasuomy
...


[4/25/2022 10:57 PM] szybet
Well for now stick with a VM, but for the future use containers


[4/25/2022 11:00 PM] nonasuomy
https://tenor.com/view/derail-valley-thomas-gordon-gif-14615083

{Embed}
https://tenor.com/view/derail-valley-thomas-gordon-gif-14615083
/mnt/data/projects/git/conversations/media/derail-valley-thomas-7D95D.png


[4/26/2022 12:19 AM] ninuje
Or do what actually works for you ;). (VMs are fine, I hate docker).


[4/26/2022 12:20 AM] nonasuomy
Why do you hate it?


[4/26/2022 12:21 AM] ninuje
Because I can't be arsed to learn to use it, so it's just an impediment to actually getting shit done.


[4/26/2022 12:21 AM] ninuje
And getting shit done > learning to use crap to maybe get shit done slower


[4/26/2022 12:21 AM] ninuje
😄


[4/26/2022 12:22 AM] ninuje
(I can see the appeal for some things, these are... not it).


[4/26/2022 12:22 AM] ninuje
I don't even use a VM at all to cross-compile, FWIW.


[4/26/2022 12:22 AM] ninuje
And, surprise: it works 😄


[4/26/2022 12:22 AM] ninuje
(Requires not running a shitty distro, though)


[4/26/2022 12:23 AM] nonasuomy
I always assume when people say they hate something is because they don't want to learn something new.


[4/26/2022 12:24 AM] ninuje
I also hate indirection layers with a fiery passion


[4/26/2022 12:24 AM] ninuje
And it's the very definition of a system-level indirection layer ;o)


[4/26/2022 12:24 AM] ninuje
If you actually need to automate builds or some such, sure, it's "fun" (not), but practical and useful


[4/26/2022 12:24 AM] ninuje
If you're actually just building stuff for the first time by hand: ahahaha, nope.


[4/26/2022 12:25 AM] ninuje
Cross compilation is already a balancing act, that would feel akin to doing that with your eyes closed and your hands bound behind your back.


[4/26/2022 12:26 AM] nonasuomy
Yeah I didn't understand why they were suggesting that when we have yet to get anything working properly yet.


[4/26/2022 12:50 AM] nonasuomy
I agree from an automation stand point it is pretty important though when you are trying to do something large scale. One off nothingness testing... not so much.


[4/26/2022 12:50 AM] nonasuomy
@tux-linux what needs to be done next with the install kernel?


[4/26/2022 2:23 AM] tux_linux
sorry, i really don't feel like it now
the goal would be to get a working busybox initrd with a console+shell


[4/26/2022 2:24 AM] nonasuomy
are you ok?


[4/26/2022 2:24 AM] tux_linux
yea
kinda tired among others


[4/26/2022 2:25 AM] nonasuomy
Ok well I hope you feel better.

{Reactions}
👍 

[4/26/2022 2:25 AM] tux_linux
Well,
what's working as of right now ?


[4/26/2022 2:26 AM] nonasuomy
we attempted that uImage boot it got so far and then you said whoops. Then told me to grab busybox. I did so and seemed like the compile completed.


[4/26/2022 2:26 AM] nonasuomy
I'm just not sure what to do with the output of that now.


[4/26/2022 2:26 AM] tux_linux
do you have an `_install` folder in the busybox source?


[4/26/2022 2:28 AM] nonasuomy
Checking

{Reactions}
👍 

[4/26/2022 2:29 AM] nonasuomy
```
~/code/kernelinstall$ ls
config-2.6.35.3  System.map-2.6.35.3  vmlinuz-2.6.35.3
```


[4/26/2022 2:30 AM] nonasuomy
```
~/code/busybox$ cd _install
bash: cd: _install: No such file or directory
```


[4/26/2022 2:30 AM] tux_linux
`ls -shal` ?


[4/26/2022 2:32 AM] nonasuomy
Nothing


[4/26/2022 2:33 AM] tux_linux
nothing, as in no `_install`?


[4/26/2022 2:35 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-77CEF.txt


[4/26/2022 2:35 AM] tux_linux
ok, make distclean


[4/26/2022 2:36 AM] nonasuomy
```
export INSTALL_PATH=/home/nonasuomy/code/kernelinstall
export PATH="${PATH}:/home/nonasuomy/code/busybox"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf -j8 install
```


[4/26/2022 2:36 AM] nonasuomy
this is all I have done.


[4/26/2022 2:36 AM] tux_linux
i'm trying it on my box right now


[4/26/2022 2:39 AM] nonasuomy
You may have set that path _install under busybox I set the path to ~/code/kernelinstall


[4/26/2022 2:39 AM] tux_linux
oh


[4/26/2022 2:39 AM] nonasuomy
were these things not what you were looking for?


[4/26/2022 2:39 AM] tux_linux
so there is something in ~/code/kernelinstall


[4/26/2022 2:39 AM] tux_linux
no


[4/26/2022 2:39 AM] tux_linux
like this
```
nicolas@gentoo-ryzen ~/D/busybox-1.35.0> ls -shal _install
total 20K
4.0K drwxr-xr-x  5 nicolas nicolas 4.0K Apr 25 20:37 ./
4.0K drwxr-xr-x 36 nicolas nicolas 4.0K Apr 25 20:37 ../
4.0K drwxr-xr-x  2 nicolas nicolas 4.0K Apr 25 20:37 bin/
   0 lrwxrwxrwx  1 nicolas nicolas   11 Apr 25 20:37 linuxrc -> bin/busybox*
4.0K drwxr-xr-x  2 nicolas nicolas 4.0K Apr 25 20:37 sbin/
4.0K drwxr-xr-x  4 nicolas nicolas 4.0K Apr 25 20:37 usr/
nicolas@gentoo-ryzen ~/D/busybox-1.35.0> 
```


[4/26/2022 2:40 AM] tux_linux
also, I forgot something, you need to enable static build in menuconfig


[4/26/2022 2:40 AM] tux_linux
`Settings -> Static binary`


[4/26/2022 2:40 AM] tux_linux
(`make menuconfig`)


[4/26/2022 2:42 AM] nonasuomy
installing ncurses stuff...


[4/26/2022 2:43 AM] nonasuomy
fml "your display is too small to run menuconfig...


[4/26/2022 2:43 AM] tux_linux
you could also edit .config


[4/26/2022 2:43 AM] nonasuomy
the virtualbox linux additions are a PoS 😦


[4/26/2022 2:44 AM] nonasuomy
don't let the desktop load


[4/26/2022 2:44 AM] tux_linux
I don't remember what's its name


[4/26/2022 2:44 AM] tux_linux
ssh instead?


[4/26/2022 2:44 AM] nonasuomy
ok


[4/26/2022 2:46 AM] nonasuomy
fixing networking...

{Reactions}
👍 

[4/26/2022 2:46 AM] nonasuomy
Need bridge not Nat


[4/26/2022 2:50 AM] tux_linux
you could just unzoom the terminal otherwise


[4/26/2022 2:55 AM] nonasuomy
ok got it but no settings...


[4/26/2022 2:56 AM] tux_linux
`CTRL+-` and `CTRL+SHIFT++`


[4/26/2022 2:59 AM] nonasuomy
Looks like I need to be in the busybox directory not the linux kernel directory?


[4/26/2022 2:59 AM] tux_linux
yes?


[4/26/2022 3:00 AM] nonasuomy
probably why _install doesn't exist as well..


[4/26/2022 3:00 AM] nonasuomy
minor details are missing...


[4/26/2022 3:00 AM] tux_linux
why did you think I wanted you to get busybox source?


[4/26/2022 3:01 AM] nonasuomy
I thought adding it to path made it magically use it somehow from the kernel directory 😄


[4/26/2022 3:02 AM] tux_linux
welp, ok


[4/26/2022 3:02 AM] tux_linux
well no we know why it didn't work... ;p

{Reactions}
😅 

[4/26/2022 3:02 AM] nonasuomy
"Build static binary (no shared libs) (new) ?


[4/26/2022 3:02 AM] tux_linux
yes that one


[4/26/2022 3:02 AM] tux_linux
space to select it


[4/26/2022 3:02 AM] nonasuomy
That is all just exit and save?


[4/26/2022 3:03 AM] tux_linux
yes


[4/26/2022 3:03 AM] tux_linux
then compile and install with `make install`


[4/26/2022 3:04 AM] tux_linux
(with ARCH, CROSS_COMPILE env vars, etc.)


[4/26/2022 3:13 AM] nonasuomy
```
cd ~/code/busybox
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin:/home/nonasuomy/code/busybox"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- distclean
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- mrproper
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 install
```


[4/26/2022 3:14 AM] nonasuomy
Look ok?


[4/26/2022 3:14 AM] tux_linux
no!


[4/26/2022 3:14 AM] nonasuomy
ok


[4/26/2022 3:14 AM] tux_linux
you mixed up the kernel and busybox source


[4/26/2022 3:16 AM] tux_linux
```
cd ~/code/busybox
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- distclean
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
# Enable static build #
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 install
```


[4/26/2022 3:19 AM] nonasuomy
Clear as a bell thank you.

{Reactions}
👍 

[4/26/2022 3:19 AM] nonasuomy
compiling...


[4/26/2022 3:20 AM] nonasuomy
```
--------------------------------------------------
You will probably need to make your busybox binary
setuid root to ensure all configured applets will
work properly.
--------------------------------------------------
```


[4/26/2022 3:20 AM] nonasuomy
hopefully that means all good.


[4/26/2022 3:20 AM] tux_linux
not to worry about


[4/26/2022 3:21 AM] tux_linux
now, go to kernel source


[4/26/2022 3:21 AM] nonasuomy
```
cd ~/code/linux-2.6.35.2
```


[4/26/2022 3:21 AM] nonasuomy
here.


[4/26/2022 3:21 AM] tux_linux
2.6.35.2?


[4/26/2022 3:21 AM] tux_linux
that's interesting


[4/26/2022 3:21 AM] nonasuomy
yes


[4/26/2022 3:22 AM] nonasuomy
what is kobo?


[4/26/2022 3:22 AM] tux_linux
2.6.35.3


[4/26/2022 3:22 AM] nonasuomy
niceeee


[4/26/2022 3:22 AM] tux_linux
\*not nice


[4/26/2022 3:22 AM] nonasuomy
sadface.


[4/26/2022 3:22 AM] tux_linux
I made a typo


[4/26/2022 3:22 AM] tux_linux
well, I don't know


[4/26/2022 3:22 AM] tux_linux
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig`


[4/26/2022 3:23 AM] nonasuomy
done


[4/26/2022 3:23 AM] tux_linux
hang on


[4/26/2022 3:23 AM] nonasuomy
hanging!


[4/26/2022 3:24 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-74C46.png


[4/26/2022 3:24 AM] tux_linux
Go in General setup and make that part look like this


[4/26/2022 3:24 AM] tux_linux
Change intramfs source file(s) path to /home/nonasuomy/code/busybox/_install


[4/26/2022 3:27 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-ED13E.png


[4/26/2022 3:27 AM] nonasuomy
For some reason it says .3 at the top...


[4/26/2022 3:27 AM] nonasuomy
so maybe just a mislabel on sony's part of the folder.


[4/26/2022 3:27 AM] tux_linux
probably


[4/26/2022 3:28 AM] nonasuomy
more to do in here or exit save?


[4/26/2022 3:28 AM] tux_linux
yes


[4/26/2022 3:29 AM] tux_linux
go into boot options


[4/26/2022 3:29 AM] tux_linux
are you able to access your sony's recovery console now?


[4/26/2022 3:29 AM] tux_linux
fine actually


[4/26/2022 3:29 AM] tux_linux
i've got it with the gist from earlier

{Reactions}
😅 

[4/26/2022 3:30 AM] tux_linux
```
console=ttymxc2,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
```
set this as the kernel command line


[4/26/2022 3:30 AM] tux_linux
i modified the message, take what is there now


[4/26/2022 3:31 AM] tux_linux
then enable "always use the default kernel command string"


[4/26/2022 3:31 AM] nonasuomy
anything there that may understand that we are going to sdcard and not the eMMC? or nothing related to that currently?


[4/26/2022 3:32 AM] tux_linux
oh wait


[4/26/2022 3:32 AM] tux_linux
I forgot some things in the cmdline


[4/26/2022 3:32 AM] tux_linux
well, it will just boot the initrd from ram, so nothing to do with the emmc


[4/26/2022 3:32 AM] tux_linux
nor the sd


[4/26/2022 3:32 AM] tux_linux
ok the command line should be fine now


[4/26/2022 3:32 AM] tux_linux
then, exit save


[4/26/2022 3:34 AM] tux_linux
```
vi ~/code/busybox/_install/etc/init.d/rcS
```
create etc/init.d if not existing
populate rcS with this content:
```
#!/bin/sh

mkdir -p /sys /proc /dev
mount -t sysfs sysfs /sys
mount -t proc proc /proc
mount -t devtmpfs devtmpfs /dev

/bin/sh
```
then recompile the kernel


[4/26/2022 3:34 AM] nonasuomy
```
noinitrd console=ttymxc0,115200 root=/dev/mtdblock2 rw rootfstype=jffs2 ip=off
```


[4/26/2022 3:34 AM] nonasuomy
this is what used to be there just for ref...


[4/26/2022 3:34 AM] tux_linux
outdated
it's not even using the right serial console


[4/26/2022 3:35 AM] nonasuomy
I'm removing that noinitrd as well at the start?


[4/26/2022 3:35 AM] tux_linux
absolutely all of it


[4/26/2022 3:35 AM] tux_linux
and paste the cmdline above


[4/26/2022 3:35 AM] nonasuomy
kk


[4/26/2022 3:36 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-5DC8E.png


[4/26/2022 3:36 AM] tux_linux
check always use...


[4/26/2022 3:37 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-23063.png


[4/26/2022 3:37 AM] tux_linux
yes


[4/26/2022 3:38 AM] tux_linux
all good
exit save then do the instructions above


[4/26/2022 3:38 AM] nonasuomy
on my way...

{Reactions}
👍 

[4/26/2022 3:41 AM] nonasuomy
create etc/init.d if not existing ... they didn't


[4/26/2022 3:41 AM] tux_linux
it's normal


[4/26/2022 3:45 AM] nonasuomy
Ok so just for clarity and future generations reading this

```
cd ~/code/linux-2.6.35.2
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- distclean
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- mrproper
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- imx5_android_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
```
Go in General setup and make that part look like this

Change intramfs source file(s) path to 
```
/home/nonasuomy/code/busybox/_install
```
Turn off Support initial ramdisks compressed using gzip
Turn on Support initial ramdisks compressed using LZMA

Exit General setup

Go into Boot options
Delete everything in the kernel command string 
```
noinitrd console=ttymxc0,115200 root=/dev/mtdblock2 rw rootfstype=jffs2 ip=off
```
change it to this
```
console=ttymxc2,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
```
Then enable "Always use the default kernel command string"

Exit Boot Options

Exit Main Menu then save yes.

```
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 uImage
```

Flash to working Sony SD Image

```
dd if=uImage of=/dev/mmcblk0 bs=512 seek=2048
```


[4/26/2022 3:45 AM] nonasuomy
?


[4/26/2022 3:47 AM] tux_linux
NOOOOOO


[4/26/2022 3:47 AM] nonasuomy
haha


[4/26/2022 3:47 AM] tux_linux
you need to redo the kernel menuconfig


[4/26/2022 3:48 AM] tux_linux
the `imx5_android_defconfig` reset .config


[4/26/2022 3:48 AM] nonasuomy
ok I never did anything yet.


[4/26/2022 3:48 AM] nonasuomy
so just do make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 install


[4/26/2022 3:49 AM] nonasuomy
nothing else


[4/26/2022 3:49 AM] tux_linux
not install


[4/26/2022 3:49 AM] tux_linux
uImage


[4/26/2022 3:49 AM] tux_linux
```
cd ~/code/linux-2.6.35.2
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin"
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 uImage
```


[4/26/2022 3:49 AM] tux_linux
distclean and mrproper will clean .config too


[4/26/2022 3:50 AM] nonasuomy
compiling...


[4/26/2022 4:01 AM] nonasuomy
```
  LD      arch/arm/boot/compressed/vmlinux
  OBJCOPY arch/arm/boot/zImage
  Kernel: arch/arm/boot/zImage is ready
  UIMAGE  arch/arm/boot/uImage
Image Name:   Linux-2.6.35.3
Created:      Mon Apr 25 21:54:31 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    3303116 Bytes = 3225.70 KiB = 3.15 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```


[4/26/2022 4:02 AM] tux_linux
ok


[4/26/2022 4:03 AM] tux_linux
now try to flash it to the mmc


[4/26/2022 4:04 AM] nonasuomy
3.2M Apr 25 21:54 uImage


[4/26/2022 4:04 AM] tux_linux
uImage


[4/26/2022 4:04 AM] nonasuomy
does that size seem ok


[4/26/2022 4:05 AM] tux_linux
yes


[4/26/2022 4:05 AM] nonasuomy
should it be bigger now with the inclusion of busybox?


[4/26/2022 4:05 AM] nonasuomy
than the prior one we made


[4/26/2022 4:06 AM] tux_linux
yes


[4/26/2022 4:06 AM] nonasuomy
looks like it 2.14MB


[4/26/2022 4:08 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/uImage-86D8A


[4/26/2022 4:08 AM] tux_linux
dd it to the sd


[4/26/2022 4:10 AM] nonasuomy
This


[4/26/2022 4:10 AM] tux_linux
yes


[4/26/2022 4:10 AM] nonasuomy
kk


[4/26/2022 4:14 AM] nonasuomy
uart right nothing will be going to the screen yet?


[4/26/2022 4:18 AM] nonasuomy
Nothing just red flashing so far


[4/26/2022 4:18 AM] nonasuomy
flashes red a few times then dead


[4/26/2022 4:21 AM] nonasuomy
```
U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [POR]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 35
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK

MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
```


[4/26/2022 4:31 AM] nonasuomy
```
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    3303116 Bytes =  3.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... Bad Data CRC
ERROR: can't get kernel image!
MX50_ARM2 U-Boot >
```


[4/26/2022 4:35 AM] tux_linux
Ok it's the load size


[4/26/2022 4:35 AM] tux_linux
printenv ?


[4/26/2022 4:37 AM] nonasuomy (pinned)
```
MX50_ARM2 U-Boot > printenv
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
rawtable=0xF40000
bootargs=console=ttymxc2,115200 init=/init bootdev=0 rawtable=0xF40000
bootcmd=mmc read 0 ${loadaddr} 0x800 0x1400;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258;bootm ${loadaddr} ${loadaddr_ramdisk}
bootdev=0

Environment size: 326/131068 bytes
```


[4/26/2022 4:43 AM] tux_linux
Change bootcmd for
`mmc read 0 ${loadaddr} 0x800 0x2710; bootm ${loadaddr}`


[4/26/2022 4:44 AM] tux_linux
Escape ";" when setenv


[4/26/2022 4:44 AM] tux_linux
Basically, setenv bootcmd mmc read...


[4/26/2022 4:45 AM] tux_linux
saveenv when done, then reset


[4/26/2022 4:46 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 0 ${loadaddr} 0x800 0x2710; bootm ${loadaddr}

MMC read: dev # 0, block # 2048, count 10000 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
10000 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    3303116 Bytes =  3.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK

Starting kernel ...



U-Boot 2009.08 (Dec 21 2011 - 14:48:38)
```


[4/26/2022 4:47 AM] nonasuomy
then it said bad again


[4/26/2022 4:47 AM] nonasuomy
didnt get a chance to do anything else


[4/26/2022 4:49 AM] tux_linux
Maybe earlyprintk can help
Time to sleep here


[4/26/2022 4:49 AM] nonasuomy
ok I'll wait for you have a good rest.

{Reactions}
👍 

[4/26/2022 4:50 AM] tux_linux
Try to enable it


[4/26/2022 4:50 AM] nonasuomy
Enable what?


[4/26/2022 4:50 AM] tux_linux
earlyprintk


[4/26/2022 4:53 AM] nonasuomy
```
earlyprintk=serial,ttymxc2,115200 init=/init bootdev=0 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
```


[4/26/2022 4:53 AM] nonasuomy
can you change that from u-boot or have to rebuild?


[4/26/2022 4:53 AM] tux_linux
Rebuild


[4/26/2022 4:54 AM] nonasuomy
"earlyprintk=serial,ttyS0,115200 enable earlyprintk on serial port. Pretty much useless on sunxi since some u-boot specific mechanism of printing to u-boot enabled serial port is used anyway and duplicates the earlyprintk functionality. Might come handy if you want to use another port, however."


[4/26/2022 4:55 AM] tux_linux
We're not on sunxi hardware


[4/26/2022 4:57 AM] tux_linux
VMs are efficient with QEMU/KVM or Xen hypervisors
VirtualBox a bit less though


[4/26/2022 5:00 AM] nonasuomy
Should we change some size stuff before compile so we don't have that crc error?


[4/26/2022 5:05 AM] tux_linux
No


[4/26/2022 5:05 AM] tux_linux
Use the same command to start it from U-Boot


[4/26/2022 5:07 AM] nonasuomy
It basically just crashes and reboots endlessly


[4/26/2022 5:08 AM] nonasuomy
Someone said this is in the kernel config as well does it need to be enabled as well?


[4/26/2022 5:08 AM] nonasuomy
CONF_PRINTK=y
CONF_EARLY_PRINTK=y
CONFIG_DEBUG_LL=y (low-level debug)
# CONFIG_DEBUG_ICEDCC is not set


[4/26/2022 5:29 AM] nonasuomy
https://stackoverflow.com/questions/52035914/earlyprintk-not-work-as-expected-kernel-hung-during-booting

{Embed}
https://stackoverflow.com/questions/52035914/earlyprintk-not-work-as-expected-kernel-hung-during-booting
earlyprintk not work as expected, kernel hung during booting
I am booting the kernel (arm, cortexa15), and the kernel hung at:

## Booting kernel from Legacy Image at 40007fc0 ...
   Image Name:   Linux-4.4.138-cip25-rt19-yocto-s
   Image Type:   ARM Linux K...
/mnt/data/projects/git/conversations/media/apple-touch-icon%402-C50E4.png


[4/26/2022 5:53 AM] nonasuomy
Finally found it
```
Kernel hacking  ---> 
[*] Kernel debugging
[*] Kernel low-level debugging functions
[*]   Early printk
```


[4/26/2022 6:14 AM] nonasuomy
won't compile now with that enabled


[4/26/2022 6:14 AM] nonasuomy
just drops out after:
```
kernel/power/fbearlysuspend.c: In function ‘stop_drawing_early_suspend’:
kernel/power/fbearlysuspend.c:40:6: warning: variable ‘ret’ set but not used [-Wunused-but-set-variable]
  int ret;
      ^
  CC      kernel/time/tick-oneshot.o
  CC      kernel/time/tick-sched.o
  LD      kernel/irq/built-in.o
  LD      kernel/power/built-in.o
  LD      kernel/time/built-in.o
  LD      kernel/built-in.o
~/code/linux-2.6.35.2$
```


[4/26/2022 6:20 AM] nonasuomy
If I remove these
```
[*] Kernel low-level debugging functions
[*]   Early printk
``` 
it compiles again...


[4/26/2022 7:53 AM] szybet
Qemu is pain ;p


[4/26/2022 2:14 PM] tux_linux
...no


[4/26/2022 2:15 PM] szybet
It was for me with virt manager


[4/26/2022 2:16 PM] tux_linux
virt-manager is a pain


[4/26/2022 2:16 PM] tux_linux
`qemu-img create -f qcow2 hd.img 40G`
`qemu-system-x86_64 -cdrom linux-livecd.iso -hda hd.img -m 4G -enable-kvm -vga virtio`
As simple as that


[4/26/2022 2:17 PM] szybet
I dont have time in school for figuring out how to add a folder to the VM using cmd


[4/26/2022 2:17 PM] tux_linux
?


[4/26/2022 2:17 PM] szybet
A shared folder


[4/26/2022 2:17 PM] szybet
An example


[4/26/2022 2:18 PM] tux_linux
networking is more complicated
but it's feasible


[4/26/2022 2:22 PM] szybet
Well, time is a problem


[4/26/2022 2:30 PM] tux_linux
That's just a warning
The error is above somewhere


[4/26/2022 2:32 PM] nonasuomy
I know was just showing that it dies there. Seems silly to not dump your actual die error at the end. 😦


[4/26/2022 2:35 PM] szybet
"Ignore errors, it is fine, propably. Propably actually not"


[4/26/2022 2:38 PM] nonasuomy
My whole network revolves around qemu kvm virt-manager 😅


[4/26/2022 2:38 PM] nonasuomy
http://nonasuomy.github.io/Arch-Linux-Router-VM-Systemd-networkd/

{Embed}
http://nonasuomy.github.io/Arch-Linux-Router-VM-Systemd-networkd/
Arch Linux Infrastructure - Brouter Inception - Part 4a - Arch Linu...


[4/26/2022 2:50 PM] tux_linux
I don't recall if this changed in recent kernels, but keep in mind that this is 11 years old code...


[4/26/2022 3:18 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-91287.txt


[4/26/2022 3:20 PM] nonasuomy
Here's the full log with earlyprintk enabled again...


[4/26/2022 3:24 PM] nonasuomy
Ignore the first part didn't have the export set after reconnecting to the session export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/home/nonasuomy/code/kernel/toolchain/gcc-4.8/bin"


[4/26/2022 3:57 PM] nonasuomy
```
  AS      arch/arm/kernel/debug.o
In file included from arch/arm/plat-mxc/include/mach/debug-macro.S:52:0,
                 from arch/arm/kernel/debug.S:130:
arch/arm/plat-mxc/include/mach/mx5x.h:23:2: error: #error "Do not include directly."
 #error "Do not include directly."
  ^
make[1]: *** [scripts/Makefile.build:266: arch/arm/kernel/debug.o] Error 1
make[1]: *** Waiting for unfinished jobs....
```


[4/26/2022 4:00 PM] nonasuomy
https://www.spinics.net/lists/arm-kernel/msg69936.html

{Embed}
https://www.spinics.net/lists/arm-kernel/msg69936.html
[PATCH 07/24] mxc: remove do not include directly — ARM, OMAP, Xsca...
Linux ARM, OMAP, Xscale Kernel: [PATCH 07/24] mxc: remove do not include directly


[4/26/2022 4:02 PM] nonasuomy
```
//#ifndef __ASM_ARCH_MXC_HARDWARE_H__
//#error "Do not include directly."
//#endif
```


[4/26/2022 4:05 PM] nonasuomy
```
  CC      arch/arm/mach-mx5/cpu.o
arch/arm/kernel/debug.S: Assembler messages:
arch/arm/kernel/debug.S:167: Error: garbage following instruction -- `ldrne r3,=MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)'
arch/arm/kernel/debug.S:183: Error: garbage following instruction -- `ldrne r3,=MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)'
make[1]: *** [scripts/Makefile.build:266: arch/arm/kernel/debug.o] Error 1
make[1]: *** Waiting for unfinished jobs....
  CC      arch/arm/mach-mx5/mm.o
  CC      arch/arm/mm/init.o
  CC      arch/arm/mm/iomap.o
  CC      arch/arm/mach-mx5/devices.o
  CC      arch/arm/mach-mx5/serial.o
  CC      arch/arm/mach-mx5/dma.o
  CC      arch/arm/mach-mx5/lpmodes.o
make: *** [Makefile:884: arch/arm/kernel] Error 2
make: *** Waiting for unfinished jobs....
  CC      arch/arm/mach-mx5/pm.o
```


[4/26/2022 4:09 PM] nonasuomy
ASM file 😬


[4/26/2022 4:10 PM] nonasuomy
"Error: garbage following instruction
    Check your instruction syntax, comments, etc.
    Check that you have the .syntax unified declaration at the top of your module."


[4/26/2022 4:10 PM] szybet
yea, there is some playing arround with patches


[4/26/2022 4:10 PM] szybet
i hope you get it done


[4/26/2022 4:11 PM] nonasuomy
That worked for that file but alas not sure about this one.


[4/26/2022 4:15 PM] nonasuomy
http://r40eubuntu.blogspot.com/2011/09/ turn on translate and search "garbage"

{Embed}
http://r40eubuntu.blogspot.com/2011/09/
R40eUbuntu-Sempron26Debian
ubuntu 在 R40e 上 還有 Debian 在 Sempron 2600 上


[4/26/2022 4:15 PM] nonasuomy
this is a little above my head...


[4/26/2022 4:19 PM] nonasuomy
```
arch/arm/kernel/debug.S: Assembler messages:
arch/arm/kernel/debug.S:167: Error: garbage following instruction -- `ldrne r3,=MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)'
arch/arm/kernel/debug.S:183: Error: garbage following instruction -- `ldrne r3,=MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)'
make[1]: *** [arch/arm/kernel/debug.o] Error 1
make: *** [arch/arm/kernel] Error 2
make: *** Waiting for unfinished jobs....
 
trace debug.S: 167
        addruart r3, r1
addruart is defined in debug-macro.S:
        .macro    addruart, rx, tmp
        mrc    p15, 0, \rx, c1, c0
        tst    \rx, #1            @ MMU enabled?
        ldreq    \rx, =UART_PADDR    @ physical
        ldrne    \rx, =UART_VADDR    @ virtual
so is the definition of UART_VADDR: (debug-macro.S): MX51_AIPS1_IO_ADDRESS( ) is not expanded (defined). This is defined in mx51.h. Use git blame to find debug-macro.S, and found that it was include mx51.h. Later, after adding mx5x.h, it was changed to include mx51.h.. Change it back and build OK ... But. .After adding earlyprintk to boot argument, after , there is no message...
#include 
#define UART_PADDR    MX51_UART1_BASE_ADDR
#define UART_VADDR    MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)
```


[4/26/2022 4:20 PM] nonasuomy
Something may be lost in translation but seems that even after the fix nothing showed up on the console still.


[4/26/2022 5:10 PM] nonasuomy
```
//#ifndef __ASM_ARCH_MXC_HARDWARE_H__
//#error "Do not include directly."
//#endif

// Issue: arch/arm/kernel/debug.S:167/183: Error: garbage following instruction -- `ldrne  issue...
#define UART_PADDR    MX51_UART1_BASE_ADDR
#define UART_VADDR    MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)
```


[4/26/2022 5:10 PM] nonasuomy
Still failed


[4/26/2022 5:11 PM] nonasuomy
seems like this is already there in debug-macro.S
```
#include <mach/mx5x.h>
#define UART_PADDR    MX51_UART1_BASE_ADDR
#define UART_VADDR    MX51_AIPS1_IO_ADDRESS(MX51_UART1_BASE_ADDR)
#endif
```


[4/26/2022 5:16 PM] nonasuomy
Shakes fist at Ben...
```
/* arch/arm/mach-imx/include/mach/debug-macro.S
 *
 * Debugging macro include header
 *
 *  Copyright (C) 1994-1999 Russell King
 *  Moved from linux/arch/arm/kernel/debug.S by Ben Dooks
```


[4/26/2022 5:21 PM] nonasuomy
Does EarlyPrintK work with kobo kernel?


[4/26/2022 5:27 PM] nonasuomy
Assuming it will have the same issue with Ben... haha


[4/26/2022 5:52 PM] nonasuomy
Looks like Ben made that change in 2.6.27-rc3


[4/26/2022 5:54 PM] nonasuomy
Guess he just moved it used to be #include <asm/arch/debug-macro.S>


[4/26/2022 6:07 PM] nonasuomy
moved this under the #endif which got past it..
debug.S
```
#else
#include <mach/debug-macro.S>
#endif    /* CONFIG_DEBUG_ICEDCC */
#include <mach/debug-macro.S>
/*
 * Useful debugging routines
 */
```


[4/26/2022 6:08 PM] nonasuomy
Next up...
```
  CC      arch/arm/kernel/early_printk.o
In file included from arch/arm/kernel/debug.S:132:0:
arch/arm/plat-mxc/include/mach/debug-macro.S:51:2: error: #error "CONFIG_DEBUG_LL is incompatible with multiple archs"
 #error "CONFIG_DEBUG_LL is incompatible with multiple archs"
  ^
```


[4/26/2022 6:09 PM] nonasuomy
I'm guessing that someplace it's not defining which processor it is for these files to work properly


[4/26/2022 6:17 PM] nonasuomy
https://patchwork.ozlabs.org/project/linux-imx/patch/1313729819-30301-1-git-send-email-shawn.guo@linaro.org/#257981


[4/26/2022 6:31 PM] tux_linux
Never tried it...


[4/26/2022 6:32 PM] nonasuomy
do you know where you select the processor type in menuconfig?


[4/26/2022 6:32 PM] tux_linux
Somewhere in general setup?


[4/26/2022 6:32 PM] tux_linux
The kernel booted before we added the initrd, right?


[4/26/2022 6:33 PM] nonasuomy
Well it got to that one point


[4/26/2022 6:33 PM] nonasuomy
about the mem log


[4/26/2022 6:33 PM] tux_linux
Is there fatload in your U-Boot?


[4/26/2022 6:34 PM] nonasuomy
is there in kobo?


[4/26/2022 6:34 PM] tux_linux
I'm not sure


[4/26/2022 6:34 PM] tux_linux
In recent U-Boots, yes


[4/26/2022 6:34 PM] nonasuomy
which version is kobo u-boot?


[4/26/2022 6:34 PM] nonasuomy
on the touch a/b


[4/26/2022 6:35 PM] tux_linux
2009.08


[4/26/2022 6:35 PM] tux_linux
Just try fatload cmd


[4/26/2022 6:35 PM] nonasuomy
ok so same as the sony prst1


[4/26/2022 6:36 PM] tux_linux
Might not be the same config


[4/26/2022 6:36 PM] nonasuomy
So glad I just keep dumping everything here...


[4/26/2022 6:36 PM] nonasuomy
fatload - load binary file from a dos filesystem


[4/26/2022 6:38 PM] tux_linux
Nice
The goal would be to put the kernel in a fat partition and load it from there


[4/26/2022 7:12 PM] tux_linux
Nice
The goal would be to put the kernel in a fat partition and load it from there


[4/26/2022 7:13 PM] nonasuomy
Is that how you got it working on the kobo?


[4/26/2022 7:30 PM] tux_linux
No but success rate is quite higher that way


[4/27/2022 7:04 AM] nonasuomy
I found this python file under bootfs called undocker.py and these options in bootfs make stage2 make stage3 PRSTUX which produced final_root.tar not sure what to do with it though... thinking there would maybe a step after that, that produced the prstux.img


[4/27/2022 7:06 AM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/undocker.py

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/undocker.py
rootfs/undocker.py · master · Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[4/27/2022 7:06 AM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/Makefile

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/Makefile
rootfs/Makefile · master · Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[4/27/2022 7:07 AM] nonasuomy
```
stage1:
    ./make-base.sh
    
stage2: stage1
    docker build -t prstux .
    
stage3: final_root.tar

final_root.tar: stage2 koreader
    ./make-rootfs.sh    
```


[4/27/2022 7:07 AM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/make-rootfs.sh

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/rootfs/make-rootfs.sh
rootfs/make-rootfs.sh · master · Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[4/27/2022 7:08 AM] nonasuomy
the tar it produces has a dot folder in it with all the os directories.


[4/27/2022 7:08 AM] nonasuomy
not sure why they are in a . folder though seems strange...


[4/27/2022 7:11 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-DBA64.png


[4/27/2022 7:11 AM] nonasuomy
Not sure if the kernel is in there some place...


[4/27/2022 7:12 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-85B18.png


[4/27/2022 9:48 PM] nonasuomy
I think Sony classified the device as "mx50_arm2" which is why the debug code is not engaging properly


[4/27/2022 9:50 PM] nonasuomy
In file included from arch/arm/kernel/debug.S:132:0:
arch/arm/plat-mxc/include/mach/debug-macro.S:51:2: error: #error "CONFIG_DEBUG_LL is incompatible with multiple archs"
 #error "CONFIG_DEBUG_LL is incompatible with multiple archs"


[4/28/2022 4:23 PM] nonasuomy
I contacted the Matias Nitsche from PRSTUX but he said he doesn't have any of the files and doesn't remember much about it and that he can't help 😦

{Reactions}
👍 

[4/28/2022 4:24 PM] nonasuomy
Final_root.tar that his build spits out.

{Attachments}
/mnt/data/projects/git/conversations/media/treedirectory-0066D.txt


[4/28/2022 6:30 PM] nonasuomy
What is this processor considered to the kernel MX51?


[4/28/2022 8:36 PM] tux_linux
I'm surprised you got a reply

{Reactions}
😅 

[4/28/2022 8:37 PM] tux_linux
Seems legit


[4/28/2022 8:43 PM] nonasuomy
what else would be required for it to boot do you think?


[4/28/2022 8:43 PM] tux_linux
A working kernel

{Reactions}
😬 

[4/28/2022 8:44 PM] tux_linux
What do you want, it's like you want to eat a hamburger without the meatball


[4/28/2022 8:44 PM] nonasuomy
Any chance when you have a moment can enable earlyprintk and see what would be needed to get it to process?


[4/28/2022 8:44 PM] nonasuomy
for the kobo etc


[4/28/2022 8:45 PM] tux_linux
I suspect it's not loading properly
Look into fatload or extload in U-Boot and load the uImage from a partition


[4/28/2022 8:45 PM] nonasuomy
there's like a million and one patches but not sure what any of them are talking about


[4/28/2022 8:45 PM] nonasuomy
https://www.google.com/search?q=plat-mxc+config_debug_ll+is+incompatible+with+multiple+archs&rlz=1C1CHBF_enCA906CA906&oq=plat-mxc+config_debug_ll+is+incompatible+with+multiple+archs&aqs=chrome..69i57.116704j0j7&sourceid=chrome&ie=UTF-8


[4/28/2022 8:49 PM] szybet
what is the main problem once more?


[4/28/2022 8:50 PM] tux_linux
Usually I don't have much hope with 12+ years old code


[4/28/2022 8:50 PM] tux_linux
This problem happened before on my Kobos, and more often than not it was related to the load size


[4/28/2022 8:50 PM] tux_linux
(kernel not booting)


[4/28/2022 8:51 PM] nonasuomy
I feel like this one would be not too bad to get past I just lack any low level understanding.


[4/28/2022 8:52 PM] nonasuomy
I think that is just telling it where to dump the extra data to. Just that stuff was moved around so it doesn't know which arch it's actually trying to apply it to.


[4/28/2022 8:54 PM] nonasuomy
You will probably be able to solve it right away soon as you enable it and see what it's doing haha.


[4/28/2022 8:56 PM] tux_linux
That would be my best bet


[4/28/2022 8:57 PM] nonasuomy
I'm not sure why you would take a different route than what you already did with the kobo's feels like then I'm just tossing myself into uncharted waters where I won't get anything functioning.


[4/28/2022 8:58 PM] szybet
?


[4/28/2022 8:58 PM] nonasuomy
We already had the kernel compiling what went wrong after that?


[4/28/2022 8:59 PM] nonasuomy
Why did we need to compile busybox into the kernel did you do this for the Kobo?


[4/28/2022 8:59 PM] szybet
yes, it is like that


[4/28/2022 9:00 PM] nonasuomy
Then why does the kobo not need fatload or extload in U-Boot


[4/28/2022 9:01 PM] nonasuomy
They are basically the same hardware just with some sony flair.


[4/28/2022 9:12 PM] tux_linux
Because kernel loading is handled differently, directly in the C code, not with a command in U-Boot env


[4/28/2022 9:29 PM] nonasuomy
Is that something kobo changed in the kernel source?


[4/28/2022 9:42 PM] nonasuomy
What needs to be done to do that?


[4/28/2022 10:42 PM] tux_linux
Maybe... It could be possible to use the Kobo U-Boot
But I would really try to load the kernel from a partition
Or via serial transfer (loady cmd in U-Boot)


[4/28/2022 10:43 PM] szybet
i dont think this is a good idea


[4/28/2022 10:44 PM] tux_linux
Which one?


[4/28/2022 10:44 PM] szybet
this is a terrible idea?
u-boot has preconfigured usb ports, serial etc. its the same cpu, but there are many usb ports for those cpus. it could not work at all after this


[4/28/2022 10:44 PM] szybet
u-boot


[4/28/2022 10:44 PM] tux_linux
It's the same soc
U-Boot shouldn't touch the epdc


[4/28/2022 10:44 PM] tux_linux
I would try serial loading before


[4/28/2022 10:45 PM] szybet
im talking about other things. maybe low-level things at boot are configured by u-boot, like voltage regulators


[4/28/2022 10:45 PM] szybet
to boot u-boot?


[4/28/2022 10:45 PM] szybet
is it possible?


[4/28/2022 10:47 PM] tux_linux
No, to boot the kernel


[4/28/2022 10:48 PM] szybet
why not? i dont even know whats the problem for now, i got lost in this thread


[4/28/2022 11:00 PM] nonasuomy
How does serial booting work?


[4/29/2022 2:34 AM] nonasuomy
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15

{Embed}
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15
MobileRead Forums - View Single Post -  USB OTG on Sony PRS-T1? scam?
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[4/29/2022 2:42 AM] nonasuomy
Talks about kernel building and drawing to the screen.


[4/29/2022 2:42 AM] nonasuomy
Guy never makes his own post though and it just dies there 😦


[4/29/2022 3:46 AM] nonasuomy
@tux-linux what would happen once the busybox kernel booted? Would it then be a login console prompt of some kind?


[4/29/2022 3:58 AM] tux_linux
If we get that done, it's probably half the way of the InkBox port, as @Szybet once said


[4/29/2022 3:58 AM] nonasuomy
Oh sorry I mean like what would I see on the console if it worked...


[4/29/2022 3:58 AM] tux_linux
A shell prompt


[4/29/2022 3:59 AM] tux_linux
And kernel messages


[4/29/2022 3:59 AM] tux_linux
Try loady + minicom


[4/29/2022 3:59 AM] tux_linux
Have you got it nearby?


[4/29/2022 3:59 AM] nonasuomy
yeah I'm just compiling now

{Reactions}
👍 

[4/29/2022 4:03 AM] tux_linux
After loady just type `bootm` and it should boot


[4/29/2022 4:04 AM] nonasuomy
how do you select what its loady'n?


[4/29/2022 4:04 AM] tux_linux
Ctrl A
Ctrl S


[4/29/2022 4:04 AM] tux_linux
More like ctrl a+s


[4/29/2022 4:04 AM] tux_linux
But a first, then s


[4/29/2022 4:05 AM] tux_linux
Idk
Something like that should open a menu


[4/29/2022 4:08 AM] nonasuomy
Am I still writing the too large kernel to the sdcard first?


[4/29/2022 4:08 AM] nonasuomy
then booting from that


[4/29/2022 4:08 AM] tux_linux
No


[4/29/2022 4:08 AM] nonasuomy
then trying loading from u-boot?


[4/29/2022 4:08 AM] nonasuomy
loady


[4/29/2022 4:08 AM] tux_linux
You boot from mem


[4/29/2022 4:08 AM] tux_linux
Yes


[4/29/2022 4:09 AM] nonasuomy
So just stock kernel and try to trigger uboot then run loady.


[4/29/2022 4:15 AM] tux_linux
yes


[4/29/2022 4:15 AM] tux_linux
u-boot is the bootloader
so it won't try to run the kernel


[4/29/2022 4:25 AM] nonasuomy
Can't seem to get minicom to take input


[4/29/2022 4:26 AM] tux_linux
Really?


[4/29/2022 4:26 AM] nonasuomy
Ah had to set hardware flow control to off


[4/29/2022 4:30 AM] nonasuomy
zmodem ?


[4/29/2022 4:30 AM] tux_linux
Ymodem


[4/29/2022 4:38 AM] nonasuomy
hmm not sure what zmodem did when I selected that first but the ttyUSB0 no longer functions 😦


[4/29/2022 4:38 AM] nonasuomy
Tried restarting still shows up under /dev


[4/29/2022 4:39 AM] tux_linux
strange


[4/29/2022 4:39 AM] nonasuomy
nm me being dumb


[4/29/2022 4:39 AM] nonasuomy
forgot to put /dev/ in the mincom line


[4/29/2022 4:47 AM] nonasuomy
Transfer incomplete


[4/29/2022 4:47 AM] nonasuomy
retry count exceeded


[4/29/2022 4:48 AM] tux_linux
reset the board and try again


[4/29/2022 4:48 AM] tux_linux
don't touch the wires at all


[4/29/2022 4:48 AM] nonasuomy
I think this boot process auto times out and restarts


[4/29/2022 4:48 AM] nonasuomy
some watchdog or something


[4/29/2022 4:48 AM] tux_linux
run `i2c probe`


[4/29/2022 4:48 AM] tux_linux
maybe it can help


[4/29/2022 4:48 AM] tux_linux
for some reason


[4/29/2022 4:51 AM] nonasuomy
valid chip addresses: 0048


[4/29/2022 4:51 AM] tux_linux
yeah, i don't need the output


[4/29/2022 4:52 AM] tux_linux
on kobos it prevents serial console watchdog


[4/29/2022 4:52 AM] tux_linux
for some reason


[4/29/2022 4:52 AM] nonasuomy
it keeps trying to boot and I have to type keys again


[4/29/2022 4:52 AM] tux_linux
there is extload in there right?


[4/29/2022 4:52 AM] tux_linux
or ext2load


[4/29/2022 4:53 AM] nonasuomy
yes


[4/29/2022 4:54 AM] tux_linux
is there an ext2 partition where you could put the uImage?


[4/29/2022 4:54 AM] tux_linux
or a fat partition, with fatload


[4/29/2022 4:55 AM] tux_linux
Do it like this
```
kobo => ext4load mmc 0:1 0x70800000 uImage-root
Loading file "uImage-root" from mmc device 0:1 (xxa1)
9254016 bytes read
kobo =>
```


[4/29/2022 4:56 AM] nonasuomy
```
cat /sys/module/rawdatatable/parameters/rawdata_table
MBR                             :0x00000000:0x00000400
uBoot                           :0x00000400:0x000bfc00
Boot Env                        :0x000c0000:0x00020000
Reserved1                       :0x000e0000:0x00020000
Normal Kernel                   :0x00100000:0x00400000
Normal Rootfs                   :0x00500000:0x00100000
Recovery Kernel                 :0x00600000:0x00400000
Reserved2                       :0x00a00000:0x00500000
Normal Boot Env                 :0x00f00000:0x00020000
Recovery Boot Env               :0x00f20000:0x00020000
Raw Data Table                  :0x00f40000:0x00020000
Info                            :0x00f60000:0x00020000
Id                              :0x00f80000:0x00020000
Reserved3                       :0x00fa0000:0x00060000
Boot Image                      :0x01000000:0x00100000
Waveform                        :0x01100000:0x00200000
LOG                             :0x01300000:0x00500000
```


[4/29/2022 4:57 AM] nonasuomy
```
Partitions
Disk /dev/mmcblk2: 1958 MB, 1958739968 bytes
4 heads, 16 sectors/track, 59776 cylinders
Units = cylinders of 64 * 512 = 32768 bytes

        Device Boot      Start         End      Blocks  Id System
/dev/mmcblk2p1             801        1120       10240  83 Linux
/dev/mmcblk2p2            1121        1440       10240  83 Linux
/dev/mmcblk2p3            1441       27008      818176   5 Extended
Partition 3 does not end on cylinder boundary
/dev/mmcblk2p4           27009       59776     1048576   b Win95 FAT32
Partition 4 does not end on cylinder boundary
/dev/mmcblk2p5            1441        2721       40984  83 Linux
/dev/mmcblk2p6            2722        7074      139288  83 Linux
/dev/mmcblk2p7            7075        7395       10264  83 Linux
/dev/mmcblk2p8            7396        9188       57368  83 Linux
/dev/mmcblk2p9            9189       22399      422743  82 Linux swap
/dev/mmcblk2p10          22400       27008      147480  82 Linux swap
```


[4/29/2022 4:57 AM] nonasuomy
```
correspond to:

P1: recovery initrd. seems to test for update image on SD card and chroots into actual recovery root otherwise
P2: recovery root filesystem or "diagnostic" system
P3: extended partition
P4: user-data partition ("READER")
P5: font partition
P6: dictionary partition
P7: "setup" partition (contains Sony applications for Windows)
P8: "preload" partition (free ebooks and example content)
P9: Android data partition
P10: Android system partition
```


[4/29/2022 4:57 AM] tux_linux
that's useful


[4/29/2022 4:57 AM] tux_linux
awesome


[4/29/2022 4:57 AM] nonasuomy
```
Unmapped offsets

Bootsplash image: 0x01000000, 800x600 = 480000 bytes.
```


[4/29/2022 4:58 AM] tux_linux
so put it in p4


[4/29/2022 4:58 AM] nonasuomy
ok


[4/29/2022 4:58 AM] tux_linux
`fatload mmc 2:4 0x70800000 uImage; bootm`


[4/29/2022 5:05 AM] nonasuomy
Said wrong image format for bootm


[4/29/2022 5:06 AM] tux_linux
ok, well, good that it loaded at least


[4/29/2022 5:06 AM] tux_linux
Pinned a message.


[4/29/2022 5:07 AM] tux_linux
`bootm 0x708000000`?


[4/29/2022 5:13 AM] nonasuomy
nop


[4/29/2022 5:14 AM] tux_linux
and if you try with the smaller uImage of a few days ago?


[4/29/2022 5:16 AM] nonasuomy
the full message was
```
** Unable to read "uImage" from mmc 2:4 **
Wrong Image Format for bootm command
ERROR: can't get kernel image!
```


[4/29/2022 5:17 AM] tux_linux
is there an uImage file in p4?


[4/29/2022 5:17 AM] tux_linux
what's the command?


[4/29/2022 5:18 AM] nonasuomy
yes


[4/29/2022 5:18 AM] nonasuomy
the first one you said


[4/29/2022 5:19 AM] tux_linux
what's mmcinfo?


[4/29/2022 5:26 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1415-15206.jpg


[4/29/2022 5:28 AM] nonasuomy
Sorry for the delay it’s hard to keep that watchdog happy then it starts booting and it doesn’t seem to like to reset until I unplug the usb cable. Takes a bit to get it going again.


[4/29/2022 5:30 AM] nonasuomy
4GB SDCard


[4/29/2022 5:31 AM] nonasuomy
so it checks out with the capacity there


[4/29/2022 5:31 AM] nonasuomy
Internal is only 2GB


[4/29/2022 5:39 AM] tux_linux
did you try that?


[4/29/2022 5:39 AM] tux_linux
what's `fatls mmc 0:2`?


[4/29/2022 5:40 AM] nonasuomy
Not yet it doesn't seem like it found the file to begin with. Will try


[4/29/2022 5:40 AM] nonasuomy
...fatls


[4/29/2022 5:46 AM] nonasuomy
how do you look in a folder


[4/29/2022 5:46 AM] nonasuomy
I think 2:4 was correct


[4/29/2022 5:47 AM] tux_linux
`fatls mmc 2:4 folder/`?


[4/29/2022 5:48 AM] nonasuomy
```
MX50_ARM2 U-Boot > fatls mmc 2:4                  
   521090   e2fsck 
            sony_reader/
            books/
            dcim/
   214586   badblocks 

2 file(s), 3 dir(s)
```


[4/29/2022 5:48 AM] nonasuomy
missed the watchdog think its in that sony_reader/ folder


[4/29/2022 5:48 AM] nonasuomy
will be a min


[4/29/2022 5:50 AM] nonasuomy
didnt like that


[4/29/2022 5:50 AM] nonasuomy
just times out then tries to boot


[4/29/2022 5:51 AM] tux_linux
well at least we can see that the uImage isn't there


[4/29/2022 5:51 AM] tux_linux
where could it be then?...


[4/29/2022 5:52 AM] nonasuomy
It's in that sony_reader folder for sure.


[4/29/2022 5:52 AM] nonasuomy
I would like to verify that through uboot though


[4/29/2022 5:54 AM] tux_linux
then `fatload mmc 2:4 0x70800000 sony_reader/uImage`


[4/29/2022 5:57 AM] nonasuomy
MX50_ARM2 U-Boot > fatload mmc 2:4 0x70800000 sony_reader/uImage
reading sony_reader/uImage


[4/29/2022 5:57 AM] tux_linux
paste that in batch
```
fatload mmc 2:4 0x70800000 sony_reader/uImage; bootm
```


[4/29/2022 5:59 AM] nonasuomy
watchdog kills it every time


[4/29/2022 5:59 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-E4AE0.txt


[4/29/2022 6:00 AM] nonasuomy
(Linux version 2.6.35.3 (hudson@devuntu5)


[4/29/2022 6:00 AM] nonasuomy
should say nonasuomy


[4/29/2022 6:01 AM] tux_linux
yes


[4/29/2022 6:02 AM] tux_linux
i hate this u-boot

{Reactions}
😂 

[4/29/2022 6:35 AM] szybet
It sends the file? You need to wait, there should be a progress bar


[4/29/2022 6:36 AM] szybet
Sound like a problem with the connection, maybe gry to solder :D


[4/29/2022 6:36 AM] nonasuomy
Nah it doesn't uboot watchdog kills it after about 7 secs


[4/29/2022 6:37 AM] szybet
Bad connection it is


[4/29/2022 6:37 AM] nonasuomy
no it is not.

{Reactions}
😆 

[4/29/2022 6:37 AM] nonasuomy
it's a feature of u-boot


[4/29/2022 6:38 AM] szybet
Also i couldn't figure out how to boot from zmodem too, i have no idea


[4/29/2022 6:38 AM] nonasuomy
"Method 2:a. Boot into U-boot and enter this command:mw fffffd44 00008000[Enter]*You may not be quick enough to enter this command by hand. To be quick enough, you should copy the above command and then when U-boot gives its prompt you just do a paste and press the [Enter] key.This command will prevent the box from rebooting.b. setenv wdt_dis mw.l fffffd44 00008000[Enter]*Note: letter l (el) not number 1. c. save[Enter]d. save[Enter]Now, you can do whatever within U-boot and it will not reset. Once you're done with U-boot, you can issue the command: reset[Enter] and the unit will reboot and re-enable the WDT.For future flash updates after having done the above Method 2, you can just go into U-Boot and issue the command and then do your update:run wdt_dis[Enter]Once done, reset the unit and the WDT will automatically re-enable."


[4/29/2022 6:38 AM] nonasuomy
this is for a different processor


[4/29/2022 6:38 AM] szybet
And i have tryied for some time on the nia


[4/29/2022 6:38 AM] nonasuomy
maybe we can do this to disable the WDT


[4/29/2022 6:38 AM] nonasuomy
Just not sure if that memory location is correct for the MXC


[4/29/2022 6:39 AM] szybet
Maybe try fastboot boot?


[4/29/2022 6:39 AM] szybet
Its not like it will work, but *maybe*


[4/29/2022 6:41 AM] szybet
But i think booting from a partition would be the best for testing, less headache to make it work


[4/29/2022 6:41 AM] nonasuomy
We tried that above but still not fast enough


[4/29/2022 6:41 AM] tux_linux
that's not a joke, U-Boot's really programmed like that


[4/29/2022 6:41 AM] nonasuomy
wdt kills everything with in 7 seconds


[4/29/2022 6:42 AM] szybet
WTF, why


[4/29/2022 6:42 AM] tux_linux
2009.08 u-boots I encountered often have broken fastboot/not working at all fastboot


[4/29/2022 6:42 AM] tux_linux
*because*


[4/29/2022 6:43 AM] nonasuomy
any chance you would know where the memory location would be on these?


[4/29/2022 6:43 AM] szybet
Maybe Sony wanted fastboot


[4/29/2022 6:43 AM] tux_linux
memory location of what?


[4/29/2022 6:43 AM] nonasuomy
I tested setenv wdt_dis mw.l fffffd44 00008000


[4/29/2022 6:43 AM] tux_linux
since it's using Android, maybe there are more chances it will work


[4/29/2022 6:43 AM] nonasuomy
mw fffffd44 00008000


[4/29/2022 6:44 AM] nonasuomy
nothing happened with setenv so prob wrong memory location


[4/29/2022 6:44 AM] tux_linux
on the nia it's more difficult
on old devices, I sometimes load the kernel to RAM via loady and ymodem and then boot it


[4/29/2022 6:44 AM] tux_linux
you're trying to disable the watchdog?


[4/29/2022 6:44 AM] nonasuomy
yes


[4/29/2022 6:44 AM] tux_linux
maybe you can just recompile u-boot


[4/29/2022 6:44 AM] tux_linux
or maybe the watchdog is an soc feature


[4/29/2022 6:45 AM] nonasuomy
could be


[4/29/2022 6:45 AM] tux_linux
which is why it needs that memory write thing


[4/29/2022 6:45 AM] tux_linux
sony must do it at some point


[4/29/2022 6:45 AM] tux_linux
maybe booted in linux


[4/29/2022 6:45 AM] tux_linux
OH!


[4/29/2022 6:45 AM] tux_linux
I know why the kernel did not boot


[4/29/2022 6:47 AM] tux_linux
I just remembered something from a year ago
Linux kernel, somehow, on imx507/imx508s boards, disables the watchdog. But it isn't disabled until the kernel is started. So, usually bigger kernels load slower, that's why the kernel we compiled didn't boot because it is always interrupted in the middle of the load and never started.
So yeah, we need to find a way to disable this watchdog. Or load a really small kernel which would load a bigger one afterwards (if kexec works there, that is).
On Kobos, I added `i2c probe` at the beginning of the bootcmd to disable the watchdog and didn't have problems after that.


[4/29/2022 6:54 AM] tux_linux
Is there an msp430 controller on your board?


[4/29/2022 7:02 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/D2763880-19B4-4B13-8480-03EA9338EDE4-603FB.jpg


[4/29/2022 7:02 AM] nonasuomy
Maybe that’s a 450


[4/29/2022 7:03 AM] nonasuomy
Nope 430


[4/29/2022 7:03 AM] nonasuomy
M430


[4/29/2022 7:05 AM] tux_linux
do that
https://github.com/twhitehead/notes-kobohacking#watchdog

{Embed}
https://github.com/twhitehead/notes-kobohacking
GitHub - twhitehead/notes-kobohacking
Contribute to twhitehead/notes-kobohacking development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/notes-kobohacking-87B25


[4/29/2022 7:08 AM] nonasuomy
So i2c probe shows me 00 48  should I use that instead of 43?


[4/29/2022 7:13 AM] nonasuomy
MX50_ARM2 U-Boot > i2c md 0x43 0x0.1 0x2            
i2c_addr:chip address cycle fail(a1)
i2c_addr failed
Error reading the chip.
MX50_ARM2 U-Boot > i2c md 0x48 0x0.1 0x2
0000: 1c 1f    ..


[4/29/2022 7:16 AM] szybet
CPU datasheet


[4/29/2022 7:19 AM] nonasuomy
MX50_ARM2 U-Boot > i2c mm 0x48 0x16.1                
00000016: 00 ?


[4/29/2022 7:20 AM] tux_linux
i don't know


[4/29/2022 4:54 PM] tux_linux
try to run i2cdetect on the sony in linux


[4/29/2022 5:31 PM] nonasuomy
You want to see if linux sees more devices than u-boot?


[4/29/2022 5:33 PM] nonasuomy
Why don't we take a step back and analyze what prstux did?
I don't have a total understanding what I'm looking at but with your help we can probably map it out.


[4/29/2022 5:33 PM] nonasuomy
It's not totally complete but maybe we can fill in the gaps with the kernel we compiled


[4/29/2022 5:35 PM] nonasuomy
```
PRSTUX
Installation

Flashing
WARNING install PRSTUX at your own risk. If you make a mistake or there's a problem during flashing, you risk bricking your device.
In order to install PRSTUX, you first need to clone/download the repository. Once you have booted into recovery mode (on PRS-T2 you need to hold Home and Menu keys while booting until you see the progress bar moving), plug the device into your computer using the USB cable. You should take note of the mass storage device name which is detected in your computer. You can retrieve this information running dmesg or having udiskctl monitor running before plugging in and noting the output. This guide will assume your device is named /dev/sdb.
Once plugged in, enter prstux directory and run

$ make flash DEVICE=/dev/sdb


replacing your device name as appropriate.
This will build the boot configuration or environment and also a custom boot splash image with the PRSTUX logo and then flash it to the reader. Before flashing, it will take a backup of the sections to be modified, just in case something goes wrong.
```


[4/29/2022 5:36 PM] nonasuomy
```
Install PRSTUX into SD card
The next step is to write the PRSTUX image into an SD card. You should have a SD card with at least 4GB. To burn the image you should insert your SD card into a reader and do:

$ ddrescue --force --synchronous prstux.img <sd card device>


Note that you should use the entire device (such as /dev/sdc) and not of any existing partition in it (such as /dev/sdc1). Note that this creates an image with the root partition and a separate data partition. If your SD card is bigger than 4GB you can use gparted to increase the size of the data partition if you like.
After this step, poweroff your reader, insert the SD card and power on again. You should see the PRSTUX logo during boot.
```


[4/29/2022 5:36 PM] nonasuomy
```
Usage
There are no specific instructions on how to use PRSTUX. Upon booting Koreader will open. Wifi works as expected. Pressing the power button will make the reader go to suspend mode (disabling devices including WiFi).
You can access the reader via SSH. If connected via USB, it will create a USB-based network. The device is set with IP 192.168.101.1 (so you can set yourself .2, for example). Otherwise, you can access via WiFi.
To add books, you should use calibre wireless connection (see Koreader wiki). At the moment, loading via USB is not possible.
KOreader settings are stored in /mnt/data/koreader. You should load data directly into /mnt/data.
```


[4/29/2022 5:44 PM] nonasuomy
For this part I believe is modifying the eMMC to tell it to boot from SD which maybe you can confirm.

PRSTUX Makefile
~/code/prstux/Makefile
```
all: boot splash rootfs

.PHONY: boot splash rootfs docker-build

boot:
    $(MAKE) -C boot

splash:
    $(MAKE) -C splash

rootfs: docker-build
    $(MAKE) -C rootfs

docker-build:
    $(MAKE) -C docker-build 14.04

flash: boot
    $(MAKE) -C boot flash
    $(MAKE) -C splash flash

clean:
    $(MAKE) -C boot clean
    $(MAKE) -C splash clean
    $(MAKE) -C rootfs clean
```

flash: boot
    $(MAKE) -C boot flash
    $(MAKE) -C splash flash

~/code/prstux/boot/Makefile
```
.PHONY: clean flash

DEVICE ?=

all: bootenv

mkubootenv/mkubootenv:
    $(MAKE) -C mkubootenv

# boot environment creation
bootenv: boot-env.txt mkubootenv/mkubootenv
    mkubootenv/mkubootenv -s 131072 boot-env.txt bootenv

# backup of boot environment
bootenv.bak: 
ifeq ($(DEVICE),)
    @echo Please specify target device with the DEVICE variable
else
    @echo Backing up current bootenv
    ../scripts/extract_normal_bootenv.sh $(DEVICE) > bootenv.bak
endif

# boot environment and splash image flashing
flash: bootenv bootenv.bak
ifeq ($(DEVICE),)
    @echo Please specify target device with the DEVICE variable
else
    @echo Flashing...
    ../scripts/flash_normal_bootenv.sh $(DEVICE)
    @echo Done.
endif

clean:
    rm -f bootenv
```


[4/29/2022 5:45 PM] nonasuomy
~/code/prstux/boot/boot-env.txt
```
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootcmd=mmc read 2 ${loadaddr} 0x800 0x1400;bootm ${loadaddr}
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/sbin/init bootdev=2 rawtable=0xF40000 
```


[4/29/2022 5:49 PM] nonasuomy
~/code/prstux/scripts/extract_normal_bootenv.sh
```
#!/bin/bash
set -x
if [ "$1" != "" ]; then
  sudo dd if=$1 bs=512 skip=$((0x00f00000/512)) count=$((0x00020000/512))
else
  echo "usage: $(basename $0) <flash device>"
  exit 1
fi
```


[4/29/2022 5:49 PM] nonasuomy
~/code/prstux/scripts/extract_bootsplash.sh
```
#!/bin/bash
if [ "$1" != "" ]; then
  dd if=$1 bs=1 skip=$((0x01000000)) count=$((800*600))
else
  echo "usage: $(basename $0): <device>"
  exit 1
fi
```


[4/29/2022 5:51 PM] nonasuomy
~/code/prstux/scripts/flash_normal_bootenv.sh
```
#!/bin/bash
if [ "$1" != "" ]; then
  echo "Will flash into device: $1"
  echo -n "Continue? Type 'yes': "
  read answer
  if [ "$answer" = "yes" ]; then
    set -x
    echo "Zeroing normal env area"
    sudo dd if=/dev/zero of=$1 bs=512 seek=$((0x00f00000/512)) count=$((0x00020000/512))
    echo "Flashing env"
    sudo dd if=bootenv of=$1 bs=512 seek=$((0x00f00000/512)) count=$((0x00020000/512))
    sudo dd if=bootenv of=$1 bs=512 seek=$((0x000c0000/512)) count=$((0x00020000/512))
    echo "Synching"
    sync; sync; sync
  else
    echo "Aborted"
  fi
else
  echo "usage: $(basename $0): <flash device>"
  exit 1
fi
```


[4/29/2022 5:53 PM] nonasuomy
~/code/prstux/scripts/flash_bootsplash.sh
```
#!/bin/bash
if [ "$1" != "" ]; then
  echo "Flashing bootsplash"
  dd if=bootsplash.bin of=$1 bs=1 seek=$((0x01000000)) count=$((800*600))
  echo "Synching"
  sync; sync; sync
else
  echo "usage $(basename $0): <device>"
  exit 1
fi
```


[4/29/2022 5:54 PM] nonasuomy
~/code/prstux/scripts/flash_normal_kernel.sh
```
#!/bin/bash
echo "Zeroing normal kernel area"
dd if=/dev/zero of=/dev/mmcblk2 bs=512 seek=$((0x00100000/512)) count=$((0x00400000/512))
echo "Flashing kernel"
dd if=uImage of=/dev/mmcblk2 bs=512 seek=$((0x00100000/512))
echo "Synching"
sync; sync; sync
```


[4/29/2022 5:54 PM] nonasuomy
~/code/prstux/scripts/flash_normal_ramdisk.sh
```
#!/bin/bash
echo "Zeroing normal rootfs area"
dd if=/dev/zero of=/dev/mmcblk2 bs=512 seek=$((0x00500000/512)) count=$((0x00100000/512))
echo "Flashing kernel"
dd if=root.img of=/dev/mmcblk2 bs=512 seek=$((0x00500000/512))
echo "Synching"
sync; sync; sync
```


[4/29/2022 5:58 PM] nonasuomy
~/code/prstux/splash/Makefile
```
.PHONY: flash clean

DEVICE ?=

bootsplash.bin: splash.png
    convert splash.png -size 800x600 -depth 8 gray:bootsplash.bin

bootsplash.bin.bak: 
ifeq ($(DEVICE),)
    @echo Please specify target device with the DEVICE variable
else
        @echo Backing up current bootplash image
        ../../scripts/extract_bootsplash.sh $(DEVICE) > bootsplash.bin.bak
endif

flash: bootsplash.bin bootsplash.bin.bak
ifeq ($(DEVICE),)
    @echo Please specify target device with the DEVICE variable
else
    @echo Flashing...
    ../../scripts/flash_bootsplash.sh $(DEVICE)
    @echo Done.
endif

clean:
    rm -f bootsplash.bin

all: bootsplash.bin
```


[4/29/2022 6:06 PM] nonasuomy
~/code/prstux/rootfs/configs/etc/fstab
```
# /etc/fstab: static file system information.
#
# file system   mount       type    options           dump    pass
/dev/mmcblk0p2  /mnt/data   ext4    defaults          0       0
/dev/mmcblk2p10 /system     ext4    defaults,ro       0       0 
proc            /proc       proc    defaults          0       0
devpts          /dev/pts    devpts  gid=5,mode=620    0       0
sysfs           /sys        sysfs   defaults          0       0
```


[4/29/2022 6:28 PM] tux_linux
I think prstux didn't even care about fixing the watchdog because the kernel already did and prstux probably has a small kernel, as small as Sony's


[4/29/2022 7:09 PM] szybet
propably going with kexec is the easiest and fastest solution?


[4/29/2022 7:10 PM] tux_linux
if it works


[4/29/2022 7:10 PM] szybet
whats the kernel version?


[4/29/2022 7:10 PM] tux_linux
2.6.35.3


[4/29/2022 7:11 PM] szybet
well, maybe


[4/29/2022 7:18 PM] nonasuomy
Do you need busybox built into the kernel for inkbox to load?


[4/29/2022 7:19 PM] szybet
its designed this way


[4/29/2022 7:19 PM] szybet
but it could be loaded after booting


[4/29/2022 7:19 PM] nonasuomy
Like sony normally just has the busybox tools in a folder to use on the drive I used them to fix some badblocks on the eMMC one time.


[4/29/2022 7:20 PM] nonasuomy
With the stock os.


[4/29/2022 7:20 PM] tux_linux
inkbox kernel/initrd needs busybox


[4/29/2022 7:20 PM] szybet
couldn't it be loaded a second after?


[4/29/2022 7:22 PM] tux_linux
what do you mean?


[4/29/2022 7:22 PM] nonasuomy
do all the tools get stored in the kernel with it? is there a way to slimline busybox to only use the parts you need to load?


[4/29/2022 7:22 PM] szybet
load busybox from a partition


[4/29/2022 7:22 PM] tux_linux
no, all the tools need to be in the initrd/kernel


[4/29/2022 7:22 PM] nonasuomy
why?


[4/29/2022 7:22 PM] tux_linux
maybe, but it would not be practical
and it would be subject to partition corruption


[4/29/2022 7:23 PM] szybet
it would be practical, this would solve kernel size issues


[4/29/2022 7:23 PM] tux_linux
handle boot switching between diagnostics/main, usb debug mode, print error splashes, verify digital signatures, etc.


[4/29/2022 7:24 PM] tux_linux
it would also make the system less secure


[4/29/2022 7:24 PM] szybet
🙄


[4/29/2022 7:26 PM] szybet
if someone can hack into busybox then they can compile the kernel from kobo etc


[4/29/2022 7:26 PM] tux_linux
not necessarily


[4/29/2022 7:26 PM] szybet
just... dont


[4/29/2022 7:27 PM] tux_linux
don't do what?


[4/29/2022 7:27 PM] szybet
"inkbox cannot support this device becouse of security" sound ridicoulus


[4/29/2022 7:29 PM] tux_linux
Think what you want, I stand on my position.


[4/29/2022 7:29 PM] tux_linux
The best solution would be to have kexec working
Or maybe disable the watchdog


[4/29/2022 7:30 PM] tux_linux
somehow


[4/29/2022 7:58 PM] nonasuomy
How does the watchdog work for Kobo what is the process?


[4/29/2022 7:59 PM] nonasuomy
How large is kobo kernel + busybox?


[4/29/2022 8:02 PM] tux_linux
~8M


[4/29/2022 8:04 PM] szybet
for nia its 10.5


[4/29/2022 8:08 PM] nonasuomy
So the source is there for uboot as well is there a way to see if it’s enabling a watchdog or where?


[4/29/2022 8:30 PM] nonasuomy
uboot-110901.tgz


[4/29/2022 8:30 PM] nonasuomy
https://oss.sony.net/Products/Linux/Audio/PRS-T1JP_20140702.html

{Embed}
https://oss.sony.net/Products/Linux/Audio/PRS-T1JP_20140702.html
Sony Global - Source Code Distribution Service
Source code download


[4/29/2022 9:41 PM] nonasuomy
#define WDOG1_BASE_ADDR        (AIPS1_BASE_ADDR + 0x00098000)


[4/29/2022 9:47 PM] nonasuomy
MX50_PIN_WDOG = _MXC_BUILD_GPIO_PIN(5, 28, 1, 0x68, 0x314),


[4/29/2022 10:00 PM] nonasuomy
```
WDOG memory map
Absolute
address
(hex)
Register name Width
(in bits) Access Reset value Section/
page
53F9_8000 Watchdog Control Register (WDOG_WCR) 16 R/W 0030h 57.6.1/3418
53F9_8002 Watchdog Service Register (WDOG_WSR) 16 R/W 0000h 57.6.2/3420
53F9_8004 Watchdog Reset Status Register (WDOG_WRSR) 16 R 0000h 57.6.3/3421
53F9_8006 Watchdog Interrupt Control Register (WDOG_WICR) 16 R/W 0004h 57.6.4/3422
53F9_8008 Watchdog Miscellaneous Control Register (WDOG_WMCR) 16 R/W 0001h 57.6.5/3423
```


[4/30/2022 3:51 AM] nonasuomy
Hardware
```
PCB PRS-T1/G1 M5047 1-884-610-12 BW1118073202953 Cast 2012/05/05A
MCIMX508CVK8B NXP i.MX50 32-bit MPU, ARM Cortex-A8 core, 800MHz, MAPBGA 416.
K4X2G323PC-8GD8 Samsung DRAM Chip Mobile LPDDR SDRAM 256Mbit 64Mx32 90-Pin FBGA
SDIN5D1-2G SanDisk e.MMC 2GB 4.41 BGA
F0513A Renesas MCU 8-bit 78K0 SISC 32KB Flash 5V 44-Pin LQFP (SDCard Controller?)
WM8321G Wolfson Processor Power Management Subsystem (PMIC)
CS42L52-CNZ Cirrus Logic Low-power, Stereo CODEC w/ Headphone & Speaker Amps
3611 WC120 Atheros 6k (6002?)
TPS65180 Texas Instruments PMIC for E Ink® Vizplex™-Enabled Electronic Paper Display
6 inch E-ink LCD (PRS-T1/NOOK Simple/ KOBO N905A/B/C) ED060SCE (LF)C1 RET60C4026(C118) E4K0C6B82M4VS5374AY -2.46
VM15AB LMV65 National Semiconductor  LMV65x 12-MHz, Low Voltage (5V?), Low Power Amplifiers
2 x HC4067B 16-channel analog multiplexer/demultiplexer
LIS1476MHPPC(SY6) 1-853-104-11 Sony 01 W US304362 3.7V 3.6Wh 1500mA Max Charge 4.30V
```


[4/30/2022 4:02 AM] nonasuomy
do you have a version of i2cdetect that works on these units?


[4/30/2022 4:05 AM] nonasuomy
Guess it's already included


[4/30/2022 4:05 AM] nonasuomy
Not sure how I would get access though


[4/30/2022 4:06 AM] nonasuomy
This latest firmware has no rooting information about it.


[4/30/2022 4:06 AM] nonasuomy
ADB is running though


[4/30/2022 4:23 AM] tux_linux
busybox i2cdetect


[4/30/2022 4:24 AM] tux_linux
Transplanting the binary in _install/bin/busybox should work


[4/30/2022 4:34 AM] nonasuomy
Tried it in the adb shell
```
# busybox i2cdetect
i2cdetect: applet not found
```


[4/30/2022 4:36 AM] nonasuomy
```
# busybox --help
BusyBox v1.17.4 (2010-12-13 13:27:50 JST) multi-call binary.
Copyright (C) 1998-2009 Erik Andersen, Rob Landley, Denys Vlasenko
and others. Licensed under GPLv2.
See source distribution for full notice.

Usage: busybox [function] [arguments]...
   or: function [arguments]...

        BusyBox is a multi-call binary that combines many common Unix
        utilities into a single executable.  Most people will create a
        link to busybox for each function they wish to use and BusyBox
        will act like whatever it was invoked as.

Currently defined functions:
        [, [[, acpid, addgroup, adduser, adjtimex, arp, arping, ash, awk,
        basename, beep, blkid, bootchartd, brctl, bunzip2, bzcat, bzip2, cal,
        cat, catv, chat, chattr, chgrp, chmod, chown, chpasswd, chpst, chroot,
        chrt, chvt, cksum, clear, cmp, comm, cp, cpio, crond, crontab, cryptpw,
        cttyhack, cut, date, dc, dd, deallocvt, delgroup, deluser, depmod,
        devmem, df, dhcprelay, diff, dirname, dmesg, dnsd, dnsdomainname,
        dos2unix, du, dumpkmap, dumpleases, echo, ed, egrep, eject, env,
        envdir, envuidgid, ether-wake, expand, expr, fakeidentd, false, fbset,
        fbsplash, fdflush, fdformat, fdisk, fgconsole, fgrep, find, findfs,
        flock, fold, free, freeramdisk, fsck, fsck.minix, fsync, ftpd, ftpget,
        ftpput, fuser, getopt, getty, grep, gunzip, gzip, halt, hd, hdparm,
        head, hexdump, hostid, hostname, httpd, hush, hwclock, id, ifconfig,
        ifdown, ifenslave, ifplugd, ifup, inetd, init, insmod, install, ionice,
        ip, ipaddr, ipcalc, ipcrm, ipcs, iplink, iproute, iprule, iptunnel,
        kbd_mode, kill, killall, killall5, klogd, last, length, less, linux32,
        linux64, linuxrc, ln, loadfont, loadkmap, logger, login, logname,
        logread, losetup, lpd, lpq, lpr, ls, lsattr, lsmod, lspci, lsusb,
        lzcat, lzma, lzop, lzopcat, makedevs, makemime, man, md5sum, mdev,
```


[4/30/2022 4:36 AM] nonasuomy
```
        mesg, microcom, mkdir, mkdosfs, mke2fs, mkfifo, mkfs.ext2, mkfs.minix,
        mkfs.vfat, mknod, mkpasswd, mkswap, mktemp, modinfo, modprobe, more,
        mount, mountpoint, mt, mv, nameif, nc, netstat, nice, nmeter, nohup,
        nslookup, ntpd, od, openvt, passwd, patch, pgrep, pidof, ping, ping6,
        pipe_progress, pivot_root, pkill, popmaildir, poweroff, printenv,
        printf, ps, pscan, pwd, raidautorun, rdate, rdev, readahead, readlink,
        readprofile, realpath, reboot, reformime, renice, reset, resize, rev,
        rm, rmdir, rmmod, route, rpm, rpm2cpio, rtcwake, run-parts, runlevel,
        runsv, runsvdir, rx, script, scriptreplay, sed, sendmail, seq, setarch,
        setconsole, setfont, setkeycodes, setlogcons, setsid, setuidgid, sh,
        sha1sum, sha256sum, sha512sum, showkey, slattach, sleep, smemcap,
        softlimit, sort, split, start-stop-daemon, stat, strings, stty, su,
        sulogin, sum, sv, svlogd, swapoff, swapon, switch_root, sync, sysctl,
        syslogd, tac, tail, tar, tcpsvd, tee, telnet, telnetd, test, tftp,
        tftpd, time, timeout, top, touch, tr, traceroute, traceroute6, true,
        tty, ttysize, tunctl, udhcpc, udhcpd, udpsvd, umount, uname, unexpand,
        uniq, unix2dos, unlzma, unlzop, unxz, unzip, uptime, usleep, uudecode,
        uuencode, vconfig, vi, vlock, volname, wall, watch, watchdog, wc, wget,
        which, who, whoami, xargs, xz, xzcat, yes, zcat, zcip
```


[4/30/2022 4:36 AM] nonasuomy
Checks out... busybox-1.17.4.tgz


[4/30/2022 4:37 AM] nonasuomy
seems they have the i2c-tools-3.0.2.tar.bz2 package maybe it's hiding.


[4/30/2022 4:43 AM] nonasuomy
how do you cross compile these apps sources from sony?


[4/30/2022 4:43 AM] nonasuomy
https://prodgpl.blob.core.windows.net/download/Audio/common/tUY0WsGdtWcZ3qa4GZ8R4A/i2c-tools-3.0.2.tar.bz2


[4/30/2022 4:50 AM] nonasuomy
I guess just like this 
```
~/code/i2c/i2c-tools-3.0.2/tools$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8
```


[4/30/2022 4:50 AM] nonasuomy
Now can I upload this through adb


[4/30/2022 4:56 AM] tux_linux
maybe
but just use the busybox you compiled for the initrd


[4/30/2022 4:56 AM] tux_linux
`_install/bin/busybox`


[4/30/2022 4:56 AM] tux_linux
it has i2c tools iirc


[4/30/2022 4:58 AM] nonasuomy
ok I'll give that a go as it said permission denied for these  things I uploaded over adb


[4/30/2022 4:58 AM] nonasuomy
tried to chmod +x them and it said bad mode


[4/30/2022 4:58 AM] tux_linux
hmm strange


[4/30/2022 4:59 AM] nonasuomy
https://stackoverflow.com/questions/9285903/adb-shell-giving-bad-mode-when-executing-chmod-under-su

{Embed}
https://stackoverflow.com/questions/9285903/adb-shell-giving-bad-mode-when-executing-chmod-under-su
ADB Shell giving bad mode when executing chmod (under su)
I'm having an issue related to the Android ADB Shell. When I try to execute the command chmod he gives me a "Bad Mode". I don't get it why. I'm sure I'm executing under "su", as represented by the ...
/mnt/data/projects/git/conversations/media/apple-touch-icon%402-C50E4.png


[4/30/2022 4:59 AM] nonasuomy
Apparently it doesn't understand +x need to use numbers


[4/30/2022 5:04 AM] nonasuomy
maybe because this is not an android app


[4/30/2022 5:10 AM] nonasuomy
do you upload just the busybox binary or all the folders in there as well?


[4/30/2022 5:11 AM] nonasuomy
guess it's just all symbolic links


[4/30/2022 5:13 AM] nonasuomy
```
# ./busybox
./busybox: permission denied
# ls
database
i2cdetect
i2cdump
i2cget
i2cset
busybox
``` Note: These work fine if ran without ./ from rupor’s rescue image.


[4/30/2022 5:13 AM] tux_linux
just the binary


[4/30/2022 5:15 AM] nonasuomy
```
platform-tools>adb root shell
adbd is already running as root
```


[4/30/2022 5:17 AM] nonasuomy
I think you have to root the device but no idea how one accomplishes that.


[4/30/2022 5:19 AM] nonasuomy
besides all these sketch tools do you happen to know how to root android 2.2.1 manually?


[4/30/2022 5:20 AM] nonasuomy
What do all these sketchy tools do to root devices


[4/30/2022 6:37 AM] tux_linux
nope, sorry


[4/30/2022 6:54 AM] nonasuomy
```
[root (ttyGS0)]# ./busybox i2cdetect -l
i2c-0   i2c             imx-i2c                                 I2C adapter
i2c-1   i2c             imx-i2c                                 I2C adapter
i2c-2   i2c             imx-i2c                                 I2C adapter
```


[4/30/2022 7:06 AM] nonasuomy
I was expecting to see hex values there...


[4/30/2022 7:08 AM] nonasuomy
```
[root (ttyGS0)]# i2cdetect -y 0
     0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f
00:          -- -- -- -- -- -- -- -- -- -- -- -- --
10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
30: -- -- -- -- UU -- -- -- -- -- -- -- -- -- -- --
40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
70: -- -- -- -- -- -- -- --
```


[4/30/2022 7:19 AM] nonasuomy
I think this means this device is on i2c 
34 wm831x 0-0034: WM8321 revision C
48 tps65180 1-0048: PMIC TPS6518x for eInk display


[4/30/2022 7:19 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-1B4A4.txt


[4/30/2022 7:20 AM] tux_linux
probably, this controller is there on kobos too


[4/30/2022 7:22 AM] nonasuomy
```
MXC WatchDog Driver 2.0
MXC Watchdog # 0 Timer: initial timeout 60 sec
```


[4/30/2022 7:23 AM] nonasuomy
was there something else you wanted me to try with the busybox ?


[4/30/2022 7:23 AM] tux_linux
no, it was to help you find the memory addresses for the watchdog


[4/30/2022 7:25 AM] nonasuomy
I'm wondering if they actually have different pmic chips and that's why the i2c values don't work


[4/30/2022 7:25 AM] tux_linux
maybe


[4/30/2022 7:26 AM] nonasuomy
do you see that WM8321 revision C in the kobo log?


[4/30/2022 7:26 AM] nonasuomy
can I kexec our kernel from here?


[4/30/2022 7:31 AM] nonasuomy
Someone said the touch doesn't have kexec


[4/30/2022 7:31 AM] nonasuomy
https://mobileread.com/forums/showthread.php?t=326168

{Embed}
https://mobileread.com/forums/showthread.php?t=326168
Touch About compiling the kernel (actually `g_ether' for now) - Mob...
Touch About compiling the kernel (actually `g_ether' for now) Kobo Developer's Corner


[4/30/2022 7:32 AM] tux_linux
the stock kernel doesn't, but you can enable `CONFIG_KEXEC` in kernel config


[4/30/2022 7:33 AM] nonasuomy
Yes but if we can't run a custom kernel yet how would we accomplish that?


[4/30/2022 7:33 AM] tux_linux
i dont know


[4/30/2022 7:34 AM] tux_linux
i'm facing a similar problem on my kindle pw3


[4/30/2022 7:36 AM] nonasuomy
What's it doing?


[4/30/2022 7:39 AM] tux_linux
can't boot the initramfs


[4/30/2022 7:39 AM] tux_linux
https://www.mobileread.com/forums/showthread.php?t=343310
i'm reading through this...

{Embed}
https://www.mobileread.com/forums/showthread.php?t=343310
Tutorial How-to: Building a custom initramfs for fun and profit - M...
Tutorial How-to: Building a custom initramfs for fun and profit Kindle Developer's Corner


[4/30/2022 7:39 AM] tux_linux
(I'm trying to port InkBox to it)


[4/30/2022 7:45 AM] nonasuomy
Please post your antics some place while doing so!


[4/30/2022 7:45 AM] nonasuomy
So I can read for something to do while spinning my tires.


[4/30/2022 7:46 AM] tux_linux
what do you mean?


[4/30/2022 7:46 AM] nonasuomy
Basically like how I spam everything I'm doing here do the same for that device 😄

{Reactions}
👍 

[4/30/2022 8:09 AM] tux_linux
ok, apparently I succeeded

{Reactions}
🥳 (2) 

[4/30/2022 8:10 AM] nonasuomy
Great work!


[4/30/2022 8:10 AM] tux_linux
that was the last thing I expected

{Reactions}
😂 

[4/30/2022 8:11 AM] tux_linux
join the kpw3 thread if you want


[4/30/2022 8:15 AM] nonasuomy
I find it weird that everyone does so much with all these different devices but nothing with sony 😦


[4/30/2022 8:16 AM] nonasuomy
all the posts are just changing official firmware versions and that's basically it.


[4/30/2022 8:16 AM] nonasuomy
https://www.mobileread.com/forums/forumdisplay.php?f=141

{Embed}
https://www.mobileread.com/forums/forumdisplay.php?f=141
Sony Reader Dev Corner - MobileRead Forums
Linux, hacking and development of software and hardware


[5/1/2022 1:52 AM] tux_linux
so... nothing new here?


[5/1/2022 1:53 AM] nonasuomy
Do you have any new ideas>


[5/1/2022 1:53 AM] tux_linux
well, if we really can't get this watchdog to shut up...


[5/1/2022 1:53 AM] nonasuomy
haha


[5/1/2022 1:53 AM] tux_linux
i was thinking of kexec with a spl kernel


[5/1/2022 1:53 AM] nonasuomy
how does that work?


[5/1/2022 1:53 AM] tux_linux
but I have to know if kexec works


[5/1/2022 1:54 AM] tux_linux
please compile a kernel that works with the stock firmware
enable kexec
Boot options -> Kexec system call


[5/1/2022 1:54 AM] nonasuomy
Well I guess we can just look at the source and see if it's enabled or not


[5/1/2022 1:54 AM] tux_linux
probably not


[5/1/2022 1:56 AM] nonasuomy
When we compiled the kernel to begin with do we have to do something differently to make it "stock" ?


[5/1/2022 1:57 AM] tux_linux
oh-
you never had a kernel that worked with the stock system


[5/1/2022 1:57 AM] tux_linux
right?


[5/1/2022 1:57 AM] nonasuomy
Like an android kernel or something


[5/1/2022 1:57 AM] nonasuomy
correct


[5/1/2022 1:57 AM] nonasuomy
It froze up at the log starting part


[5/1/2022 1:59 AM] nonasuomy
This is what it did...


[5/1/2022 2:03 AM] tux_linux
Ok, you have your busybox source?


[5/1/2022 2:03 AM] nonasuomy
yup


[5/1/2022 2:03 AM] nonasuomy
We tried to compile that in and then made the uImage too large


[5/1/2022 2:04 AM] tux_linux
let me make a very stripped down version


[5/1/2022 2:04 AM] tux_linux
install upx


[5/1/2022 2:04 AM] nonasuomy
ok


[5/1/2022 2:05 AM] nonasuomy
installed


[5/1/2022 2:07 AM] nonasuomy
Make it super bare metal just to see if we can even get a console at all maybe.


[5/1/2022 2:08 AM] tux_linux
yes


[5/1/2022 2:08 AM] nonasuomy
I was reading some place that busybox adds padding as well but it may be off by default now


[5/1/2022 2:08 AM] nonasuomy
might have been in earlier editions


[5/1/2022 2:14 AM] nonasuomy
They were saying no matter what they changed in busybox the uImage always stayed the same size and that was the reason why.


[5/1/2022 2:18 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/config-FB10F


[5/1/2022 2:18 AM] tux_linux
please put this file as .config in your busybox source


[5/1/2022 2:18 AM] tux_linux
then
`make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- install`


[5/1/2022 2:20 AM] tux_linux
then
`upx --ultra-brute _install/bin/busybox`


[5/1/2022 2:20 AM] tux_linux
I got a 524K binary

{Reactions}
😂 

[5/1/2022 2:20 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/busybox-A8064


[5/1/2022 2:23 AM] tux_linux
Very limited
```
kobo:/tmp# ./busybox 
BusyBox v1.34.1 (2022-04-30 20:19:26 EDT) multi-call binary.
BusyBox is copyrighted by many authors between 1998-2015.
Licensed under GPLv2. See source distribution for detailed
copyright notices.

Usage: busybox [function [arguments]...]
   or: busybox --list[-full]
   or: busybox --install [-s] [DIR]
   or: function [arguments]...

    BusyBox is a multi-call binary that combines many common Unix
    utilities into a single executable.  Most people will create a
    link to busybox for each function they wish to use and BusyBox
    will act like whatever it was invoked as.

Currently defined functions:
    [, [[, ash, awk, base64, cat, chattr, chgrp, chmod, chown, chroot, cp, cttyhack, cut, date, dd, devmem, dmesg, echo, env, false, fbset, fdformat, fold, free, fsck, fuser, getty, grep,
    halt, i2cdetect, i2cdump, i2cget, i2cset, i2ctransfer, ifconfig, ifdown, ifenslave, ifplugd, ifup, init, insmod, kill, killall, linuxrc, ln, login, losetup, ls, lsattr, lsmod, lsof, mkdir,
    mkfifo, mknod, mount, mv, nc, nohup, nproc, pidof, ping, poweroff, printf, ps, pwd, reboot, reset, rm, rmmod, route, run-init, rx, sed, sh, sha256sum, sleep, sort, split, stat, sync, test,
    timeout, touch, tr, true, umount, uname, unlink, vi, watchdog, xxd, yes
kobo:/tmp# 
```


[5/1/2022 2:23 AM] nonasuomy
-rwxr-xr-x 1 nonasuomy nonasuomy 894K Apr 30 20:22 busybox


[5/1/2022 2:24 AM] tux_linux
even with upx?


[5/1/2022 2:24 AM] nonasuomy
does the config just go in the root dir of busybox?


[5/1/2022 2:24 AM] tux_linux
.config


[5/1/2022 2:25 AM] nonasuomy
That was the ticket


[5/1/2022 2:25 AM] tux_linux
or just use my binary otherwise
`cp ~/Downloads/busybox ~/code/busybox/_install/bin/busybox`


[5/1/2022 2:25 AM] nonasuomy
it said using .config now when it started.


[5/1/2022 2:25 AM] tux_linux
ok


[5/1/2022 2:26 AM] nonasuomy
-rwxr-xr-x 1 nonasuomy nonasuomy 548K Apr 30 20:25 busybox


[5/1/2022 2:26 AM] tux_linux
ok


[5/1/2022 2:26 AM] tux_linux
now recompile your kernel


[5/1/2022 2:26 AM] tux_linux
post its size here
and try to boot it


[5/1/2022 2:34 AM] nonasuomy
```
Image Name:   Linux-2.6.35.3
Created:      Sat Apr 30 20:33:57 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2817996 Bytes = 2751.95 KiB = 2.69 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```
Let me just verify that the _install directory was in place though.


[5/1/2022 2:35 AM] nonasuomy
Looks good  (/home/nonasuomy/code/busybox/_install) Initramfs source file(s)


[5/1/2022 3:21 AM] nonasuomy
Hmm can't seem to get it to see our newly compiled kernel... keeps just showing the old one may need to reflash this sdcard


[5/1/2022 3:21 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-DEC3D.txt


[5/1/2022 3:26 AM] nonasuomy
hmm we may have corrupted the sdcard 😦


[5/1/2022 3:26 AM] nonasuomy
died at 38%


[5/1/2022 3:35 AM] nonasuomy
Just noticed it said permission denied think it ran out of space...


[5/1/2022 3:37 AM] nonasuomy
looks good now still going


[5/1/2022 3:44 AM] nonasuomy
I think it may have lost its direction and is no longer pointing to the SDCard


[5/1/2022 3:50 AM] nonasuomy
Yup that was the culprit.


[5/1/2022 3:52 AM] nonasuomy
Well at the least I found out that SDCard change gets factory reset easy.


[5/1/2022 4:11 AM] nonasuomy
Can no longer get it running from SDCard not sure what happened.


[5/1/2022 4:12 AM] tux_linux
Does eMMC work?


[5/1/2022 4:13 AM] nonasuomy
Yes


[5/1/2022 4:13 AM] nonasuomy
still boots the broke 07 firmware with no usb/wifi support


[5/1/2022 4:13 AM] nonasuomy
Just to note look at this comment..


[5/1/2022 4:13 AM] tux_linux
Can you try another SD card?


[5/1/2022 4:13 AM] nonasuomy
https://www.mobileread.com/forums/showpost.php?p=3981129&postcount=1

{Embed}
https://www.mobileread.com/forums/showpost.php?p=3981129&postcount=1
MobileRead Forums - View Single Post - PRS-T1 PRS-T1 run from SD ca...
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[5/1/2022 4:15 AM] nonasuomy
Writing to eMMC is easiest, but if your eMMC was totally broken (not just bad sectors), you'd have to modify the uboot image in NAND so that it would load its configuration from mmc0 instead of mmc2.

To get recovery environment to boot, put rupor-rescue on the SD card partition 4 and then use this Python script to temporarily point uboot to load the rescue partition from SD card:

Code:
```
import serial, time, sys
s = serial.Serial("/dev/ttyUSB0", 115200, timeout = 0.1)

def slowsend(x):
    for b in x:
        s.write(b)
        time.sleep(0.001)

while True:
    d = s.read(32)
    sys.stdout.write(d)
    s.write(' ' * 32)  # "Any key" for uboot
    if 'Hit' in d:
        slowsend("\r\nprintenv\r\n")
        time.sleep(1.5)

# To boot recovery from SD card
        slowsend("setenv bootargs 'root=/dev/mmcblk0p1 rootfstype=ext4 rw "
                + "rootwait init=/linuxrc console=ttymxc4,115200 bootdev=2 rawtable=0xF40000'\r\n")

# To boot normal system from SD card
#        slowsend("setenv bootargs 'console=ttymxc4,115200 init=/init bootdev=0 rawtable=0xF40000'\r\n")

        time.sleep(1.0)
        slowsend("boot\r\n")
        break

while True:
    d = s.read(64)
    sys.stdout.write(d)
```
You can also just copy-paste the commands to serial terminal, but that is a bit annoying as the watchdog will reboot the device if it is stuck in uboot for more than 10 seconds or so.


[5/1/2022 4:17 AM] nonasuomy
Can we do the same but point it to our uImage instead


[5/1/2022 4:19 AM] nonasuomy
I don't believe it's even looking at the card slot


[5/1/2022 4:19 AM] nonasuomy
just boots direct to the eMMC every time it starts now. Before it would just die if there was no SDCard in the slot.


[5/1/2022 4:23 AM] nonasuomy
Maybe something got messed up on the eMMC and now it's using the nand instead for booting.


[5/1/2022 4:27 AM] nonasuomy
I don't remember it saying "legacy" in the kernel boot


[5/1/2022 4:28 AM] nonasuomy
```
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    214270 Bytes = 209.2 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
```


[5/1/2022 4:29 AM] nonasuomy
N/m it did say it...


[5/1/2022 4:30 AM] nonasuomy
https://gist.github.com/nrdmn/c75f8c8011ca82def7f28e4e23d05ed8

{Embed}
https://gist.github.com/nrdmn/c75f8c8011ca82def7f28e4e23d05ed8
Sony PRS-T1
Sony PRS-T1. GitHub Gist: instantly share code, notes, and snippets.
/mnt/data/projects/git/conversations/media/gist-og-image-17482.png


[5/1/2022 4:47 AM] nonasuomy
So I flashed over the backup uboot_old then uboot_new again and it's working again.


[5/1/2022 4:47 AM] nonasuomy
so something went screwy there...


[5/1/2022 4:48 AM] nonasuomy
but alas
```
MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2817996 Bytes =  2.7 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... Bad Data CRC
ERROR: can't get kernel image!
```


[5/1/2022 4:48 AM] nonasuomy
Size checks out 2.7 MB


[5/1/2022 4:49 AM] nonasuomy
Stock kernel 2.2 MB


[5/1/2022 4:49 AM] tux_linux
Can you set kernel compression mode to LZMA?


[5/1/2022 4:49 AM] tux_linux
In general setup
Should really improve things


[5/1/2022 4:49 AM] nonasuomy
Think we did that


[5/1/2022 4:50 AM] tux_linux
Yes, for the initrd


[5/1/2022 4:50 AM] tux_linux
But there's also an option for the kernel


[5/1/2022 4:50 AM] nonasuomy
Ok how do we do that?


[5/1/2022 4:50 AM] tux_linux
Go in kernel menuconfig


[5/1/2022 4:50 AM] tux_linux
General setup


[5/1/2022 4:50 AM] tux_linux
Kernel compression mode or something like that


[5/1/2022 4:51 AM] nonasuomy
Ok found it


[5/1/2022 4:51 AM] nonasuomy
Was on GZip


[5/1/2022 4:51 AM] nonasuomy
Now on... Kernel compression mode (LZMA)  --->


[5/1/2022 4:51 AM] tux_linux
Yes


[5/1/2022 4:53 AM] nonasuomy
Compiling...

{Reactions}
👍 

[5/1/2022 4:55 AM] nonasuomy
Ideally were not going make it to 2.2MB do we need it to be exact?


[5/1/2022 4:57 AM] nonasuomy
Nice it did make a difference


[5/1/2022 4:57 AM] nonasuomy
2.12MB


[5/1/2022 4:58 AM] tux_linux
2.12mb is ok


[5/1/2022 4:58 AM] tux_linux
try it


[5/1/2022 5:08 AM] nonasuomy
```
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK

MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2226868 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    286848 Bytes = 280.1 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK

Starting kernel ...

Linux version 2.6.35.3 (nonasuomy@Marceline) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) ) #4 PREEMPT Sat Apr 30 22:57:06 EDT 2022
CPU: ARMv7 Processor [412fc085] revision 5 (ARMv7), cr=10c53c7f
CPU: VIPT nonaliasing data cache, VIPT nonaliasing instruction cache
Machine: Freescale MX50 ARM2 Board
Ignoring unrecognised tag 0x54410009
Ignoring unrecognised tag 0x54410008
Memory policy: ECC disabled, Data cache writeback
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 63754
Kernel command line: console=ttymxc2,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
PID hash table entries: 1024 (order: 0, 4096 bytes)
Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
Memory: 251MB = 251MB total
Memory: 248600k/248600k available, 8424k reserved, 0K highmem
```


[5/1/2022 5:08 AM] nonasuomy
```
Virtual kernel memory layout:
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    DMA     : 0xf9e00000 - 0xffe00000   (  96 MB)
    vmalloc : 0x90000000 - 0xf4000000   (1600 MB)
    lowmem  : 0x80000000 - 0x8fb00000   ( 251 MB)
    pkmap   : 0x7fe00000 - 0x80000000   (   2 MB)
    modules : 0x7f000000 - 0x7fe00000   (  14 MB)
      .init : 0x80008000 - 0x800be000   ( 728 kB)
      .text : 0x800be000 - 0x804ad000   (4028 kB)
      .data : 0x804ca000 - 0x80544760   ( 490 kB)
SLUB: Genslabs=9, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Hierarchical RCU implementation.
        RCU-based detection of stalled CPUs is disabled.
        Verbose stalled-CPUs detection is disabled.
NR_IRQS:396
MXC GPIO hardware
MXC IRQ initialized
You should not call the gpmi_set_parent
MXC_Early serial console at MMIO 0x63f90000 (options '115200')
bootconsole [ttymxc2] enabled
Console: colour dummy device 80x30
Mix log static memory : 7fe00000 - 7fffffff
              address : 90400000
  There is not the last log.
Initialize a static memory for mix_logger.
```


[5/1/2022 5:08 AM] nonasuomy
stopped at mix_logger. again.


[5/1/2022 5:11 AM] tux_linux
What is this mess

{Reactions}
😂 

[5/1/2022 5:12 AM] tux_linux
Go into kernel source top level
`grep -r "There is not the last log" .`


[5/1/2022 5:12 AM] nonasuomy
That's only a sony thing as that is how I found that gist above.


[5/1/2022 5:13 AM] nonasuomy
engrish


[5/1/2022 5:14 AM] nonasuomy
./drivers/staging/android/logger.c:             printk(KERN_INFO "  There is not the last log.\n");


[5/1/2022 5:18 AM] nonasuomy
after that in the stock boot gist above comes

```
##### LOG START #####
Calibrating delay loop... 799.53 BogoMIPS (lpj=3997696)
```


[5/1/2022 5:18 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/logger-3DB9D.c


[5/1/2022 5:19 AM] nonasuomy
which you can also find in there.


[5/1/2022 5:19 AM] nonasuomy
not sure what happens between there.


[5/1/2022 5:22 AM] tux_linux
Please count the time spent between when you press the power button and when you get the last message on serial


[5/1/2022 5:22 AM] tux_linux
How many seconds?


[5/1/2022 5:23 AM] nonasuomy
Oh you think its the watchdog killing it


[5/1/2022 5:23 AM] nonasuomy
ok


[5/1/2022 5:23 AM] tux_linux
I hope it's not


[5/1/2022 5:23 AM] tux_linux
But I can hardly see how a logger could hang the whole system


[5/1/2022 5:24 AM] nonasuomy
I would say about 15 seconds


[5/1/2022 5:25 AM] nonasuomy
used a stopwatch but give or take for not knowing when it's actually starting at.


[5/1/2022 5:26 AM] tux_linux
ok so no watchdog in the field


[5/1/2022 5:26 AM] tux_linux
good


[5/1/2022 5:26 AM] tux_linux
but also not good


[5/1/2022 5:28 AM] nonasuomy
It very well may be as it just keeps rebooting nonstop at that same point every time.


[5/1/2022 5:29 AM] nonasuomy
I think I read the default watchdog was 16 seconds


[5/1/2022 5:30 AM] tux_linux
oh


[5/1/2022 5:30 AM] tux_linux
then, in ultimate despair, a ping for @andi because I absolutely don't know what needs to be done to disable this @!@#$# watchdog

{Reactions}
😂 

[5/1/2022 5:32 AM] tux_linux
andi1 is like a magician for low-level hardware things


[5/1/2022 5:32 AM] tux_linux
he has ported mainline Linux 5.16 kernel to Clara HD and has ongoing ports for the Libra and Aura 2/SE


[5/1/2022 5:38 AM] nonasuomy
Do you have a boot log of the Touch A/B can you see if it has that same WM8 chip for it's pmic


[5/1/2022 5:38 AM] nonasuomy
(Power Management)


[5/1/2022 5:44 AM] nonasuomy
Wonder what the stock Sony kernel sends to the mysterious watchdog to keep it happy


[5/1/2022 5:45 AM] nonasuomy
Maybe this is missing in our custom version.


[5/1/2022 5:46 AM] nonasuomy
Do you think it matters that the stock kernel was built with GCC 4.4 and ours is 4.8?


[5/1/2022 5:53 AM] tux_linux
No


[5/1/2022 5:53 AM] tux_linux
I'll try to get one


[5/1/2022 6:32 AM] tux_linux
Touch B kernel ring buffer

{Attachments}
/mnt/data/projects/git/conversations/media/message-91B58.txt


[5/1/2022 6:36 AM] nonasuomy
Defo different mc13892 & MSP430


[5/2/2022 2:55 AM] tux_linux
What if you try Sony kernel with Sony system but without the initrd and with LZMA compression? This should make it really small


[5/2/2022 2:56 AM] nonasuomy
I'm game for anything just tell me what to do.


[5/2/2022 2:56 AM] tux_linux
Disable initrd support


[5/2/2022 2:57 AM] tux_linux
simpler: save .config somewhere, then make with the default sony config, don't remember its name
then go into menuconfig and change kernel compression mode to LZMA


[5/2/2022 2:58 AM] nonasuomy
I don't think we had any issues with size after the default compile but it still rebooted in the same spot after 15~16 seconds


[5/2/2022 2:59 AM] tux_linux
the default kernel is compressed with gzip


[5/2/2022 3:00 AM] tux_linux
so i'd try lzma as a last effort


[5/2/2022 3:00 AM] nonasuomy
what do you expect to happen changing the compression?


[5/2/2022 3:01 AM] tux_linux
the kernel size will be smaller


[5/2/2022 3:01 AM] tux_linux
like, 1.x mb


[5/2/2022 3:01 AM] nonasuomy
won't it take the same time to boot and then reset?


[5/2/2022 3:01 AM] tux_linux
maybe
but maybe not


[5/2/2022 3:01 AM] tux_linux
last thing I would try


[5/2/2022 3:02 AM] nonasuomy
I'll try it but I think there's something missing like you have to send a flag to the PMIC to stop it from power resetting.


[5/2/2022 3:02 AM] tux_linux
sure, but i don't know what


[5/2/2022 3:03 AM] nonasuomy
I was looking all through the code today but found nothing 😄


[5/2/2022 3:03 AM] tux_linux
did you grep -r "watchdog" . or something?


[5/2/2022 3:03 AM] nonasuomy
(not really sure what I'm looking for or where it would do that)


[5/2/2022 3:04 AM] nonasuomy
found all these things related to watchdog 3 letter abbrivations in the mx.i documentation and the wm8321


[5/2/2022 3:05 AM] nonasuomy
Just not sure where something would send the signal also noted that you can run the wm8321 over spi so maybe that's why there's no i2c connection for it.


[5/2/2022 3:05 AM] nonasuomy
also in busybox is a watchdog systemlink


[5/2/2022 3:07 AM] nonasuomy
some of the acros are wdt wdi https://www.nxp.com/docs/en/data-sheet/MC13892.pdf


[5/2/2022 3:08 AM] nonasuomy
Interesting block diagram here

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-211AF.png


[5/2/2022 3:09 AM] tux_linux
so it is some gpio pin


[5/2/2022 3:09 AM] nonasuomy
28 I believe in the source.


[5/2/2022 3:10 AM] nonasuomy
this one


[5/2/2022 3:11 AM] nonasuomy
Though that is on the CPU it could just be power resetting on the WM8321 and not sending anything to the CPU


[5/2/2022 3:12 AM] tux_linux
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15

{Embed}
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15
MobileRead Forums - View Single Post -  USB OTG on Sony PRS-T1? scam?
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[5/2/2022 3:12 AM] tux_linux
maybe... some help


[5/2/2022 3:12 AM] nonasuomy
maybe the CPU sends the PMIC something to say don't reset the power.


[5/2/2022 3:13 AM] nonasuomy
Someone said to look in one of the linux folders under sys will show if it's enabled in the kernel.


[5/2/2022 3:17 AM] nonasuomy
Do we need these? make modules_install


[5/2/2022 3:18 AM] tux_linux
no


[5/2/2022 3:18 AM] tux_linux
oh; look in kernel menuconfig, search with `/` for `WATCHDOG`


[5/2/2022 3:18 AM] tux_linux
maybe there is an option related to it


[5/2/2022 3:27 AM] nonasuomy
```
--- Watchdog Timer Support                  
[*]   Disable watchdog shutdown on close                                                                                     
      *** Watchdog Device Drivers ***
< >   Software watchdog                                                                                                      
< >   WM831x watchdog                                                                                                        
<*>   MXC watchdog                                                                                                           
< >   Max63xx watchdog                                                                                                       
< >   IMX2+ Watchdog                                                                                                         
      *** USB-based Watchdog Cards ***
< >   Berkshire Products USB-PC Watchdog
```


[5/2/2022 3:27 AM] tux_linux
what's "help" of the first option?


[5/2/2022 3:28 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-FDB7A.png


[5/2/2022 3:29 AM] tux_linux
interesting


[5/2/2022 3:29 AM] tux_linux
try disabling that


[5/2/2022 3:29 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-056AD.png


[5/2/2022 3:30 AM] tux_linux
disable that too


[5/2/2022 3:30 AM] tux_linux
why in the world were those options enabled


[5/2/2022 3:30 AM] tux_linux
it must be something I missed


[5/2/2022 3:31 AM] nonasuomy
Probably if the ereader hangs on anything it reboots


[5/2/2022 3:31 AM] nonasuomy
something probably keeps those heartbeats alive.


[5/2/2022 3:31 AM] nonasuomy
something writing to /dev/watchdog


[5/2/2022 3:33 AM] tux_linux
well, nothing of that is used in inkbox, so we don't care


[5/2/2022 3:34 AM] nonasuomy
Interesting under drivers they don't enable CONFIG_WM831X_POWER
```
  x Say Y here to enable support for the power management unit                                                                                                                                                                           x
  x provided by Wolfson Microelectronics WM831x PMICs. 
```


[5/2/2022 3:36 AM] nonasuomy
If you look in the kernel config for kobo are any watchdogs enabled?


[5/2/2022 3:36 AM] tux_linux
no, there were not iirc


[5/2/2022 3:37 AM] nonasuomy
Maybe have a quick looksee might surprise yourself.


[5/2/2022 3:38 AM] nonasuomy
"< >   WM831x watchdog" so this is not enabled as well.


[5/2/2022 3:38 AM] tux_linux
```
CONFIG_WATCHDOG=y
CONFIG_WATCHDOG_NOWAYOUT=y
CONFIG_SOFT_WATCHDOG=m
CONFIG_MXC_WATCHDOG=m
# CONFIG_MAX63XX_WATCHDOG is not set
# CONFIG_USBPCWATCHDOG is not set
```


[5/2/2022 3:38 AM] tux_linux
```
CONFIG_WATCHDOG_NOWAYOUT=y
```
quite funny


[5/2/2022 3:40 AM] nonasuomy
I'm going to try to disable these first and build the kernel from before.

{Reactions}
👍 

[5/2/2022 3:41 AM] nonasuomy
It maybe just that the kernel is hanging so the watchdog fires off as well..


[5/2/2022 3:41 AM] nonasuomy
So we might just be met with no reset but nothing else.


[5/2/2022 3:41 AM] tux_linux
idk


[5/2/2022 3:42 AM] nonasuomy
I always try to put my foot in my mouth seems to be good luck for me haha...


[5/2/2022 3:42 AM] nonasuomy
"It will never do that..." - It does it...


[5/2/2022 3:42 AM] nonasuomy
compiling...


[5/2/2022 3:45 AM] nonasuomy
Could there be anything in the stock kernel config that is pointing to some place that we don't know about and it's not finding it because were telling it to goto busybox console


[5/2/2022 3:53 AM] nonasuomy
Same issue


[5/2/2022 3:54 AM] tux_linux
oh well
no clue there


[5/2/2022 3:54 AM] nonasuomy
Linux version 2.6.35.3 (nonasuomy@Marceline) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) ) #4 PREEMPT Sat Apr 30 22:57:06 EDT 2022 <= Should this change on every compile?


[5/2/2022 3:55 AM] nonasuomy
or does the device itself just think it is that date...


[5/2/2022 3:55 AM] tux_linux
YES?!


[5/2/2022 3:55 AM] tux_linux
it is the kernel compile time
so it didn't flash or something


[5/2/2022 3:56 AM] nonasuomy
hmm...


[5/2/2022 3:57 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-E5E10.png


[5/2/2022 3:59 AM] nonasuomy
hmm... Flash drive has the right date...


[5/2/2022 3:59 AM] nonasuomy
dd said everything was good...


[5/2/2022 4:00 AM] nonasuomy
I also noticed with the image boot I can't trigger UBoot console for some reason


[5/2/2022 4:01 AM] tux_linux
whoops


[5/2/2022 4:01 AM] tux_linux
that's not good


[5/2/2022 4:03 AM] tux_linux
you wrote `Image` ?!


[5/2/2022 4:03 AM] nonasuomy
Not sure what would cause that as I can still do it during the rupor's recovery

```
  UIMAGE  arch/arm/boot/uImage
Image Name:   Linux-2.6.35.3
Created:      Sun May  1 21:44:35 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2225840 Bytes = 2173.67 KiB = 2.12 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready


[5/2/2022 4:03 AM] nonasuomy
no I wrote uImage


[5/2/2022 4:04 AM] tux_linux
ok


[5/2/2022 4:04 AM] tux_linux
rupor's recovery u-boot triggers the watchdog too?


[5/2/2022 4:07 AM] nonasuomy
I think so but maybe I never tried


[5/2/2022 4:07 AM] tux_linux
try!


[5/2/2022 4:08 AM] nonasuomy
```
sudo dd if=/media/nonasuomy/UNTITLED/uImage of=/dev/mmcblk0 bs=512 seek=2048
[sudo] password for nonasuomy: 
4347+1 records in
4347+1 records out
2225904 bytes (2.2 MB, 2.1 MiB) copied, 0.273714 s, 8.1 MB/s
```


[5/2/2022 4:08 AM] tux_linux
`sync` too


[5/2/2022 4:10 AM] nonasuomy
Never did that before but I'll try


[5/2/2022 4:14 AM] tux_linux
it's important


[5/2/2022 4:14 AM] tux_linux
or eject at least


[5/2/2022 4:15 AM] nonasuomy
could be the culprit


[5/2/2022 4:15 AM] nonasuomy
just double checked here too just in case
```
mkimage -l uImage
Image Name:   Linux-2.6.35.3
Created:      Sun May  1 21:44:35 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2225840 Bytes = 2173.67 KiB = 2.12 MiB
Load Address: 70008000
Entry Point:  70008000
```


[5/2/2022 4:16 AM] nonasuomy
says may now 😄


[5/2/2022 4:17 AM] nonasuomy
still dogs out.


[5/2/2022 4:17 AM] nonasuomy
```
Starting kernel ...

Linux version 2.6.35.3 (nonasuomy@Marceline) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) ) #5 PREEMPT Sun May 1 21:44:29 EDT 2022
CPU: ARMv7 Processor [412fc085] revision 5 (ARMv7), cr=10c53c7f
CPU: VIPT nonaliasing data cache, VIPT nonaliasing instruction cache
Machine: Freescale MX50 ARM2 Board
Ignoring unrecognised tag 0x54410009
Ignoring unrecognised tag 0x54410008
Memory policy: ECC disabled, Data cache writeback
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 63754
Kernel command line: console=ttymxc2,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
PID hash table entries: 1024 (order: 0, 4096 bytes)
Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
Memory: 251MB = 251MB total
Memory: 248612k/248612k available, 8412k reserved, 0K highmem
Virtual kernel memory layout:
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    DMA     : 0xf9e00000 - 0xffe00000   (  96 MB)
    vmalloc : 0x90000000 - 0xf4000000   (1600 MB)
    lowmem  : 0x80000000 - 0x8fb00000   ( 251 MB)
    pkmap   : 0x7fe00000 - 0x80000000   (   2 MB)
    modules : 0x7f000000 - 0x7fe00000   (  14 MB)
      .init : 0x80008000 - 0x800be000   ( 728 kB)
      .text : 0x800be000 - 0x804ac000   (4024 kB)
      .data : 0x804c8000 - 0x80542660   ( 490 kB)
SLUB: Genslabs=9, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Hierarchical RCU implementation.
        RCU-based detection of stalled CPUs is disabled.
        Verbose stalled-CPUs detection is disabled.
```


[5/2/2022 4:17 AM] nonasuomy
```
NR_IRQS:396
MXC GPIO hardware
MXC IRQ initialized
You should not call the gpmi_set_parent
MXC_Early serial console at MMIO 0x63f90000 (options '115200')
bootconsole [ttymxc2] enabled
Console: colour dummy device 80x30
Mix log static memory : 7fe00000 - 7fffffff
              address : 90400000
  There is not the last log.
Initialize a static memory for mix_logger.
```


[5/2/2022 4:21 AM] tux_linux
Well, I'll ping again @andi in absolute despair or this port will likely come to an end unless a miracle happens
To summarize, we have two problems: first, there is a watchdog that kicks us out no matter what we try to stop it, second, a custom compiled kernel hangs there without further explanation (see above boot log). I'm suspecting the watchdog but not sure.
Hardware platform is imx508, could be great a triple port for that device, Kindle Touch and Kobo Touch B... Just suggestions


[5/2/2022 4:23 AM] nonasuomy
Did you see this comment the guy made: "this tells us that they use uboot for loading two different kernels. i replaced the second image, that starts at block 0x3000 (byte offset 0x600000) with a newly compiled one like this:"


[5/2/2022 4:23 AM] tux_linux
Well, that's about the eMMC
Not your microSD card


[5/2/2022 4:24 AM] nonasuomy
The sd is running a copy of eMMC


[5/2/2022 4:24 AM] tux_linux
And U-Boot does the right thing, it loads your custom kernel


[5/2/2022 4:24 AM] tux_linux
Hmm


[5/2/2022 4:25 AM] tux_linux
How do you switch between eMMC/SD?


[5/2/2022 4:26 AM] nonasuomy
Ripped the uboot out of the guys sd image and transplanted overtop of the eMMC uboot.


[5/2/2022 4:28 AM] nonasuomy
```
dd if=/dev/mmcblk2 skip=786432 of=uboot_old.bin bs=1 count=131072
dd if=sd_card_PRS-T1_1.0.07_adb_enabled.bin skip=786432 of=uboot_new.bin bs=1 count=131072
dd if=uboot_new.bin of=/dev/mmcblk2 seek=786432 bs=1 count=131072
```


[5/2/2022 4:29 AM] nonasuomy
"After that it should boot (in normal mode) from SD card that has my image on it. Rescue mode should still work as before, as this only changes the "active uboot env" instead of "rescue uboot env"."


[5/2/2022 4:32 AM] nonasuomy
I would assume that means he already did everything needed to uboot.


[5/2/2022 4:33 AM] nonasuomy
"make sure the kernel2backup file really starts with the uboot magic                                                                                    
sequence: 27 05 19 56    "
what is uboot magic sequence?


[5/2/2022 4:34 AM] nonasuomy
He's copying the uImage to 0x3000


[5/2/2022 4:34 AM] nonasuomy
"dd of=/dev/block/mmcblk2 if=uImage bs=512 seek=$((0x3000))"


[5/2/2022 4:35 AM] nonasuomy
is that the same spot?


[5/2/2022 4:35 AM] nonasuomy
(he's working with the eMMC)


[5/2/2022 4:36 AM] nonasuomy
Wonder why he's telling you to compile UBoot


[5/2/2022 4:37 AM] nonasuomy
hmm 
```
zcat /proc/config.gz > .config
```


[5/2/2022 4:38 AM] nonasuomy
would this have the same stuff in it as that def android we used...


[5/2/2022 4:39 AM] tux_linux
go compare!


[5/2/2022 4:39 AM] nonasuomy
where is /proc though..


[5/2/2022 4:39 AM] nonasuomy
is that from the booted os


[5/2/2022 4:40 AM] tux_linux
huh?
oh no
don't tell me proc doesn't exist in android


[5/2/2022 4:40 AM] tux_linux
iirc it does
it does on my phone that is


[5/2/2022 4:40 AM] nonasuomy
I'm just saying he says get the sony kernel source and goto /proc


[5/2/2022 4:41 AM] tux_linux
boot the stock os
or recovery mode
whatever kernel that works
and extract the config
then diff


[5/2/2022 4:41 AM] the.mightydill
wtf theres no proc in android???


[5/2/2022 4:41 AM] the.mightydill
that would be WEIRD


[5/2/2022 4:41 AM] nonasuomy
I don't think that is in the kernel source?


[5/2/2022 4:41 AM] tux_linux
not at all


[5/2/2022 4:41 AM] nonasuomy
You guys are jumping to conclusions...


[5/2/2022 4:41 AM] nonasuomy
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15

{Embed}
https://www.mobileread.com/forums/showpost.php?p=2472765&postcount=15
MobileRead Forums - View Single Post -  USB OTG on Sony PRS-T1? scam?
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[5/2/2022 4:42 AM] nonasuomy
```
wget http://www.sony.net/Products/Linux/Audio/Download/common/L1KaMCC9mHxsZfoFPJnsBg/linux-2.6.35.3-110901.tgz
wget 

zcat /proc/config.gz > .config
make menuconfig (change what you want)
make uImage
make modules_install
```


[5/2/2022 4:42 AM] tux_linux
this makes absolutely no sense at all


[5/2/2022 4:42 AM] nonasuomy
not sure where that second wget was going.


[5/2/2022 4:43 AM] tux_linux
the command list literally says "get the kernel source, extract the kernel config from your x86_64 computer (totally incompatible) and feed it to the sony kernel compilation"


[5/2/2022 4:43 AM] tux_linux
like, ...?


[5/2/2022 4:45 AM] nonasuomy
I'm going to go boot the E-ink OS and see if something is laying in /proc/config.gz

{Reactions}
👍 

[5/2/2022 4:46 AM] tux_linux
it seems the command list is also getting a different kernel source
linux-2.6.35.**3** compared to the wrong .2 you had on your source tarball


[5/2/2022 4:48 AM] nonasuomy
I think he was drunk while typing.


[5/2/2022 4:49 AM] nonasuomy
110901 => https://prodgpl.blob.core.windows.net/download/Audio/common/wgUBcpExj80eqi5pkrlZfw/uboot-110901.tgz


[5/2/2022 4:49 AM] nonasuomy
https://prodgpl.blob.core.windows.net/download/Audio/common/2UrziX9Zanih0kfZRY4U3Q/linux-2.6.35.2-20140522-2.tgz


[5/2/2022 4:49 AM] nonasuomy
or maybe older source


[5/2/2022 4:51 AM] nonasuomy
Maybe it used to compile but no longer.


[5/2/2022 5:37 AM] nonasuomy
Some how lost the ADB usb connection vanished from the USB menu...


[5/2/2022 5:43 AM] nonasuomy
```
[root (ttyGS0)]# ls
1             193           332           driver        pwr3
1008          197           382           execdomains   sdma
1072          2             393           fb            self
1074          201           397           filesystems   slabinfo
1078          210           4             fs            softirqs
1100          213           5             interrupts    stat
1108          218           76            iomem         swaps
1110          2264          77            ioports       sys
1129          2275          8             irq           sysvipc
1131          2282          9             kallsyms      timer_list
1136          2286          apm           kmsg          tty
1144          2287          asound        kpagecount    uid_stat
1145          2288          buddyinfo     kpageflags    uptime
1150          2303          bus           loadavg       version
12            266           cmdline       locks         vmallocinfo
1229          3             config.gz     meminfo       vmstat
1230          306           cpu           misc          wakelocks
1247          308           cpuinfo       modules       zoneinfo
169           310           crypto        mounts
171           312           devices       net
173           315           diskstats     pagetypeinfo
191           322           dma-engine    partitions
```


[5/2/2022 5:43 AM] nonasuomy
config.gz


[5/2/2022 5:43 AM] tux_linux
Ok extract that


[5/2/2022 5:44 AM] tux_linux
Extract cmdline too


[5/2/2022 5:50 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-662C9.txt


[5/2/2022 5:52 AM] nonasuomy
```
cat /proc/cmdline
root=/dev/mmcblk2p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=2 rawtable=0xF40000
```


[5/2/2022 5:53 AM] nonasuomy
ttymxc4?


[5/2/2022 5:53 AM] nonasuomy
Maybe we're just dumping to the wrong console?


[5/2/2022 5:53 AM] nonasuomy
n/m it restarts


[5/2/2022 5:54 AM] nonasuomy
so it's not like it had time to do anything.


[5/2/2022 5:54 AM] nonasuomy
Just to note this was from the older generated Rupors Recover build


[5/2/2022 5:58 AM] nonasuomy
I'll see if I can reflash that SD image again and get ADB back to look at the newer build


[5/2/2022 6:15 AM] nonasuomy
Weird folder called dropbox/SYSTEM_BOOT@1651370276809.txt
```
Build: sony/sydney/EBX-5047/imx50_evk:2.2.1/FRG83/105:user/test-keys
Hardware: imx50_evk
Bootloader: unknown
Radio: unknown
Kernel: Linux version 2.6.35.3 (hudson@devuntu5) (gcc version 4.4.0 (GCC) ) #1 PREEMPT Wed May 7 15:03:54 JST 2014
```


[5/2/2022 10:39 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-896C4.png


[5/2/2022 3:21 PM] nonasuomy
I was working too late and didn't realize I was on the eMMC for some reason and wiped it out haha... so may be a bit until I figure out how to recover as nothing works but a loading screen now and recover buttons no longer work. (Can't boot Rupor's Recovery anymore)


[5/2/2022 3:23 PM] nonasuomy
"bricked until further notice"


[5/2/2022 3:24 PM] nonasuomy
May have to connect the eMMC via that image above to write the partitions back to it.


[5/2/2022 3:29 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1439-1789D.png


[5/2/2022 3:29 PM] szybet
i dont think that this will work, but hope dies the last


[5/2/2022 3:37 PM] szybet
its really propably that there are somewhere pads to program this IC


[5/2/2022 3:37 PM] nonasuomy
Just need to get one of those level shifters as it works at 1.8v


[5/2/2022 3:38 PM] nonasuomy
It’s in the picture above


[5/2/2022 3:38 PM] szybet
thats the tx50104?


[5/2/2022 3:38 PM] szybet
was this tested?


[5/2/2022 3:38 PM] nonasuomy
Yeah they call it the “iron” method in Russian forums.


[5/2/2022 3:39 PM] szybet
i hope you get a logic shifter for 1.8, its not a popular voltage


[5/2/2022 3:39 PM] nonasuomy
Well it’s popular for embedded systems…


[5/2/2022 3:43 PM] nonasuomy
Wonder why they are showing two different IC’s 104/102 in the image above.


[5/2/2022 3:46 PM] nonasuomy
Wonder if txB is ok seems voltage compatible and some make premade breakouts for it. I may even have one…


[5/2/2022 3:48 PM] nonasuomy
The TXB0104 is a 4-bit bidirectional voltage-level translator with automatic direction sensing.

This 4-bit noninverting translator uses two separate configurable power-supply rails. The A port is designed to track VCCA. VCCA accepts any supply voltage from 1.2V to 3.6V. The B port is designed to track VCCB. VCCB accepts any supply voltage from 1.65V to 5.5V. This allows for universal low-voltage bidirectional translation between any of the 1.2-V, 1.5-V, 1.8-V, 2.5-V, 3.3-V, and 5-V voltage nodes.

{Attachments}
/mnt/data/projects/git/conversations/media/F87168BE-C02D-4E2C-8C54-005B9B07A72A-5FED4.jpg
/mnt/data/projects/git/conversations/media/1679E500-ECB4-4432-9A31-169BABC4A1E0-B8991.jpg


[5/2/2022 3:52 PM] nonasuomy
Looks like it “TXS0104E 4-Bit Bidirectional Voltage-Level Translator for Open-Drain and Push-Pull Applications”


[5/2/2022 3:56 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/image0-CC75B.jpg


[5/2/2022 3:56 PM] nonasuomy
Think I have this one


[5/2/2022 3:57 PM] nonasuomy
I could interface at full speed with all 4 data lines


[5/2/2022 4:17 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/C6DD8CB0-1577-489B-B850-3605CEBABBB2-D60E7.jpg


[5/2/2022 4:18 PM] nonasuomy
Those pins are so small 😅


[5/2/2022 4:19 PM] szybet
its time to learn soldering


[5/2/2022 5:12 PM] nonasuomy
There’s a “big” difference from through-hole to surface mount SMD 0201 soldering. Learning to solder is only half the battle there. The caps and resistors just stick to the end of your soldering iron at that size and burn up. You really need hot air tweezers and a microscope.


[5/2/2022 5:13 PM] szybet
of course tweezers are needed, and this can be done without air. and without sticking to the solder iron


[5/2/2022 5:14 PM] nonasuomy
Make a video of you soldering smd 0201 by hand iron for me


[5/2/2022 5:16 PM] szybet
I would need a microscope to record that, I already did ( i dont know if this exact size ) to fpv googles to set the brightness


[5/2/2022 5:16 PM] szybet
it took hours


[5/2/2022 5:16 PM] szybet
but its not impossible


[5/2/2022 5:19 PM] nonasuomy
I’ve done 0805 components by drag soldering  but that’s really large in comparison to 0201

{Attachments}
/mnt/data/projects/git/conversations/media/image0-3A522.jpg


[5/2/2022 5:19 PM] tux_linux
You can maybe trigger some sort of download mode by shorting eMMC pins


[5/2/2022 5:20 PM] tux_linux
Just an idea
Might not work


[5/2/2022 5:20 PM] szybet
its not a good idea


[5/2/2022 5:20 PM] szybet
it could kill the iC, its best too check in the datasheet


[5/2/2022 5:24 PM] nonasuomy
Any documentation you have seen preform this with an ereader you can paste a link to?


[5/2/2022 7:07 PM] nonasuomy
So this is weird it seems to still be booting the stock kernel...

{Attachments}
/mnt/data/projects/git/conversations/media/message-E8475.txt


[5/2/2022 7:09 PM] szybet
you said you wiped it out


[5/2/2022 7:10 PM] nonasuomy
Exactly.


[5/2/2022 7:10 PM] szybet
😐


[5/2/2022 7:11 PM] nonasuomy
Literally purged each partition off of it before realizing that I selected the wrong device.


[5/2/2022 7:13 PM] nonasuomy
The guy that mentioned how to boot from SD said there was 3 spots to boot from I think... Something about the NAND. ( I thought the eMMC / Nand were both the same thing as the datasheet from the eMMC said iNAND on it)


[5/2/2022 7:15 PM] nonasuomy
or maybe it only allowed me to purge up to the kernel partition...


[5/2/2022 7:16 PM] nonasuomy
They said:
"
Then it is just a matter of pointing uboot to boot kernel from mmc0 instead of mmc2. There are three ways to do it:

Write eMMC from Linux recovery environment
Write eMMC from uboot command prompt
Write NAND chip from uboot command prompt

Writing to eMMC is easiest, but if your eMMC was totally broken (not just bad sectors), you'd have to modify the uboot image in NAND so that it would load its configuration from mmc0 instead of mmc2.
"


[5/2/2022 7:22 PM] tux_linux
The pw3 uses a similar mechanism


[5/2/2022 7:26 PM] tux_linux
But then to write to nand you need U-Boot
Oops


[5/2/2022 7:45 PM] nonasuomy
We have access to U-Boot though? as said above it's still booting the uboot -> kernel It just has no files/folders.


[5/2/2022 7:46 PM] nonasuomy
As I think it's getting it from the nand and not eMMC


[5/2/2022 7:49 PM] tux_linux
Oh ok nice


[5/2/2022 8:08 PM] nonasuomy
```
MX50_ARM2 U-Boot > fatls mmc 2:4
** Partition 4 not valid on device 2 **

** Unable to use mmc 2:4 for fatls **
```


[5/2/2022 8:18 PM] nonasuomy
```
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
Device: FSL_ESDHC
Manufacturer ID: 2
OEM: 544d
Name: SD02G
Tran Speed: 25000000
Rd Block Len: 512
SD version 2.0
High Capacity: No
Capacity: 2013265920
Bus Width: 4-bit
Boot Partition Size: No boot partition available
```


[5/2/2022 8:35 PM] nonasuomy
Niceeee directing uboot to the sdcard boot worked...


[5/2/2022 8:38 PM] nonasuomy
```
MX50_ARM2 U-Boot > setenv bootargs 'console=ttymxc4,115200 init=/init bootdev=0 rawtable=0xF40000
MX50_ARM2 U-Boot > boot

MMC read: dev # 2, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
5120 blocks read: OK

MMC read: dev # 2, block # 10240, count 500 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
500 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    214270 Bytes = 209.2 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK

Starting kernel ...
```


[5/2/2022 8:38 PM] nonasuomy
```
Linux version 2.6.35.3 (hudson@devuntu5) (gcc version 4.4.0 (GCC) ) #1 PREEMPT Wed May 7 15:03:54 JST 2014
CPU: ARMv7 Processor [412fc085] revision 5 (ARMv7), cr=10c53c7f
CPU: VIPT nonaliasing data cache, VIPT nonaliasing instruction cache
Machine: Freescale MX50 ARM2 Board
Ignoring unrecognised tag 0x54410008
Memory policy: ECC disabled, Data cache writeback
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 63754
Kernel command line: console=ttymxc4,115200 init=/init bootdev=0 rawtable=0xF40000
PID hash table entries: 1024 (order: 0, 4096 bytes)
Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
Memory: 251MB = 251MB total
Memory: 249220k/249220k available, 7804k reserved, 0K highmem
Virtual kernel memory layout:
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    DMA     : 0xf9e00000 - 0xffe00000   (  96 MB)
    vmalloc : 0x90000000 - 0xf4000000   (1600 MB)
    lowmem  : 0x80000000 - 0x8fb00000   ( 251 MB)
    pkmap   : 0x7fe00000 - 0x80000000   (   2 MB)
    modules : 0x7f000000 - 0x7fe00000   (  14 MB)
      .init : 0x80008000 - 0x80025000   ( 116 kB)
      .text : 0x80025000 - 0x80424000   (4092 kB)
      .data : 0x80444000 - 0x804be700   ( 490 kB)
SLUB: Genslabs=9, HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
Hierarchical RCU implementation.
        RCU-based detection of stalled CPUs is disabled.
        Verbose stalled-CPUs detection is disabled.
NR_IRQS:396
MXC GPIO hardware
MXC IRQ initialized
You should not call the gpmi_set_parent
MXC_Early serial console at MMIO 0x63f90000 (options '115200')
bootconsole [ttymxc4] enabled
Console: colour dummy device 80x30
Mix log static memory : 7fe00000 - 7fffffff
              address : 90400000
  There is not the last log.
Initialize a static memory for mix_logger.
```


[5/2/2022 8:39 PM] nonasuomy
```
##### LOG START #####
Calibrating delay loop... 799.53 BogoMIPS (lpj=3997696)
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 512
CPU: Testing write buffer coherency: ok
regulator: core version 0.5
NET: Registered protocol family 16
i.MX IRAM pool: 128 KB@0x90040000
CPU is i.MX50 Revision 1.1
IR Power is LDO4
 This is TPS65181.
PWR3DET:power 3 detect
FEC disable
Using SDMA I.API
MXC DMA API initialized
IMX usb wakeup probe
IMX usb wakeup probe
bio: create slab <bio-0> at 0
CSPI: mxc_spi-0 probed
CSPI: mxc_spi-2 probed
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
wm831x 0-0034: WM8321 revision C
wm831x 0-0034: Security key had non-zero value 1
regulator: VCORE: 850 <--> 1100 mV at 1000 mV at 0 uA
regulator: VPERI: 950 <--> 1250 mV at 1250 mV at 0 uA
regulator: DCDC3: at 1800 mV
regulator: DCDC4: at 2900 mV
regulator: LDO1: 900 <--> 3300 mV at 1200 mV
regulator: LDO2: 900 <--> 3300 mV at 1200 mV
regulator: LDO3: 900 <--> 3300 mV at 2500 mV
regulator: LDO4: 900 <--> 3300 mV at 3200 mV
regulator: LDO5: 900 <--> 3300 mV at 2900 mV
regulator: LDO6: 900 <--> 3300 mV at 2500 mV
regulator: LDO7: 1000 <--> 3500 mV at 1800 mV
regulator: LDO8: 1000 <--> 3500 mV at 2500 mV
regulator: LDO9: 1000 <--> 3500 mV at 3100 mV
regulator: LDO10: 1000 <--> 3500 mV at 3200 mV
regulator: LDO11: 800 <--> 1550 mV at 1200 mV
Advanced Linux Sound Architecture Driver Version 1.0.23.
Switching to clocksource mxc_timer1
mxsdhci: MXC Secure Digital Host Controller Interface driver
mxsdhci: MXC SDHCI Controller Driver.
SDHC:sdhci_set_power:slot pwr off
mmc_detect_change: id=0
mmc0: SDHCI detect irq 179 irq 1 INTERNAL DMA
mxsdhci: MXC SDHCI Controller Driver.
SDHC:sdhci_set_power:slot pwr on
mmc_detect_change: id=1
mmc1: SDHCI detect irq 0 irq 2 INTERNAL DMA
mxsdhci: MXC SDHCI Controller Driver.
mmc_detect_change: id=2
```


[5/2/2022 8:40 PM] nonasuomy
```
mmc2: SDHCI detect irq 228 irq 3 INTERNAL DMA
mxsdhci: MXC SDHCI Controller Driver.
mmc_detect_change: id=3
mmc3: SDHCI detect irq 0 irq 4 INTERNAL DMA
NET: Registered protocol family 2
IP route cache hash table entries: 2048 (order: 1, 8192 bytes)
TCP established hash table entries: 8192 (order: 4, 65536 bytes)
TCP bind hash table entries: 8192 (order: 3, 32768 bytes)
TCP: Hash tables configured (established 8192 bind 8192)
TCP reno registered
UDP hash table entries: 256 (order: 0, 4096 bytes)
UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)
NET: Registered protocol family 1
RPC: Registered udp transport module.
RPC: Registered tcp transport module.
RPC: Registered tcp NFSv4.1 backchannel transport module.
Unpacking initramfs...
Freeing initrd memory: 208K
LPMode driver module loaded
Static Power Management for Freescale i.MX5
PM driver module loaded
sdram autogating driver module loaded
Bus freq driver module loaded
mxc_dvfs_core_probe
DVFS driver module loaded
i.MXC CPU frequency driver
DVFS PER driver module loaded
ashmem: initialized
msgmni has been set to 487
alg: No test for stdrng (krng)
cryptodev: driver loaded.
io scheduler noop registered
io scheduler deadline registered
io scheduler cfq registered (default)
regulator: DISPLAY:
regulator: VCOM: at 1250 mV
regulator: V3P3_CTRL:
regulator: PMIC_TEMP:
regulator: PWR0_CTRL:
regulator: PWR2_CTRL:
regulator: VSYS_EPD:
tps65180 1-0048: PMIC TPS6518x for eInk display
SDHC:sdhci_set_power:slot pwr on
mmc0: new high speed SDHC card at address e624
mmc_rescan:wake_lock_timeout (0)
mmc_rescan:detect done(id=0)
Serial: MXC Internal UART driver
mxcuart register
mxcintuart.2: ttymxc2 at MMIO 0x5000c000 (irq = 33) is a Freescale i.MX
mxcintuart.3: ttymxc3 at MMIO 0x53ff0000 (irq = 13) is a Freescale i.MX
mxcintuart.4: ttymxc4 at MMIO 0x63f90000 (irq = 86) is a Freescale i.MX
```


[5/2/2022 8:40 PM] nonasuomy
```
console [ttymxc4] enabled, bootconsole disabled
console [ttymxc4] enabled, bootconsole disabled
mxcswuart register
mxcintswuart.0: ttymxc0 at MMIO 0x53fbc000 (irq = 31) is a Freescale i.MX
SSW:ssw port register 0
mxcintswuart.1: ttymxc1 at MMIO 0x53fc0000 (irq = 32) is a Freescale i.MX
SSW:ssw port register 1
loop: module loaded
FEC Ethernet Driver
PPP generic driver version 2.4.2
usbcore: registered new interface driver asix
usbcore: registered new interface driver cdc_ether
usbcore: registered new interface driver net1080
usbcore: registered new interface driver cdc_subset
mmc2: new high speed MMC card at address 0001
input: gpio-keys as /devices/platform/gpio-keys/input/input0
mmc_rescan:wake_lock_timeout (2)
irtp_init
irtp_connect
mmc_rescan:wifi:wake unlock (3)
input: SONY IR Touchpanel as /devices/virtual/input/input1
IRTP: register early_suspend
input: wm831x_on as /devices/platform/imx-i2c.0/i2c-0/0-0034/wm831x-on/input/input2
input: phxlit_vbus as /devices/platform/phxlit_vbus.0/input/input3
phxlit_vbus phxlit_vbus.0: event(type 5 code 12)
wm831x-rtc wm831x-rtc: rtc core: registered wm831x as rtc0
mxc_rtc mxc_rtc.0: rtc core: registered mxc_rtc as rtc1
using rtc device, wm831x, for alarms
i2c /dev entries driver
APM Battery Driver
MXC WatchDog Driver 2.0
MXC Watchdog # 0 Timer: initial timeout 60 sec
mmcblk0: mmc0:e624 SU04G 3.69 GiB
 mmcblk0: p1 p2 p3 < p5 p6 p7 p8 p9 p10 > p4
Raw data table load
mmcblk2: mmc2:0001 SEM02G 1.82 GiB
BUG: recent printk recursion!
<6> mmcblk2:
logger: created 64K log 'log_main'
logger: created 64K log 'log_events'
logger: created 64K log 'log_radio'
logger: created 64K log 'log_system'
logger: created 2047K log 'log_mix'
logger: created 64K log 'log_kernel'
Past log manager.
CS42L52: CODEC revision C1
DMA Sound Buffers Allocated:UseIram=1 buf->addr=f8006000 buf->area=90046000 size=24576
DMA Sound Buffers Allocated:UseIram=1 buf->addr=7e360000 buf->area=f9e01000 size=24576
```


[5/2/2022 8:41 PM] nonasuomy
```
asoc: CS42L52 dai <-> imx-ssi-2-0 mapping ok
ALSA device list:
  #0: imx-3stack (CS42L52 codec)
nf_conntrack version 0.5.0 (3897 buckets, 15588 max)
ip_tables: (C) 2000-2006 Netfilter Core Team
TCP cubic registered
NET: Registered protocol family 17
VFP support v0.3: implementor 41 architecture 3 part 30 variant c rev 2
tps65180_vsys_enable : wait VSYS_EPD.
regulator_init_complete: incomplete constraints, leaving PWR2_CTRL on
regulator_init_complete: incomplete constraints, leaving PMIC_TEMP on
epdc_progress_work_func start progress.
regulator_init_complete: incomplete constraints, leaving LDO11 on
regulator_init_complete: incomplete constraints, leaving LDO7 on
regulator_init_complete: incomplete constraints, leaving LDO6 on
regulator_init_complete: incomplete constraints, leaving LDO5 on
regulator_init_complete: incomplete constraints, leaving LDO3 on
regulator_init_complete: incomplete constraints, leaving LDO2 on
regulator_init_complete: incomplete constraints, leaving LDO1 on
input: sub_cpu_pwrbutton as /devices/platform/mxc_spi.2/spi3.2/sub_cpu_pwrbutton/input/input4
wm831x-rtc wm831x-rtc: setting system clock to 2010-01-01 00:01:59 UTC (1262304119)
Freeing init memory: 116K
init: cannot open '/initlogo.rle'
init: cannot find '/system/bin/switcher', disabling 'switcher'
init: cannot find '/system/bin/servicemanager', disabling 'servicemanager'
init: cannot find '/system/bin/vold', disabling 'vold'
init: cannot find '/system/bin/netd', disabling 'netd'
init: cannot find '/system/bin/dispd', disabling 'dispd'
init: cannot find '/system/bin/debuggerd', disabling 'debuggerd'
init: cannot find '/system/bin/rild', disabling 'ril-daemon'
init: cannot find '/system/bin/app_process', disabling 'zygote'
init: cannot find '/system/bin/mediaserver', disabling 'media'
init: cannot find '/system/bin/dbus-daemon', disabling 'dbus'
init: cannot find '/system/bin/installd', disabling 'installd'
```


[5/2/2022 8:41 PM] nonasuomy
```
init: cannot find '/system/etc/install-recovery.sh', disabling 'flash_recovery'
init: cannot find '/system/etc/firewall.sh', disabling 'firewall'
init: cannot find '/system/bin/keystore', disabling 'keystore'
init: cannot find '/system/bin/logwrapper', disabling 'wpa_supplicant'
epdc_progress_work_func end progress.
```


[5/2/2022 8:41 PM] nonasuomy
Seems to spit out a bit more log doing it that way...


[5/2/2022 8:45 PM] nonasuomy
```
MXC WatchDog Driver 2.0
MXC Watchdog # 0 Timer: initial timeout 60 sec
```


[5/2/2022 8:48 PM] nonasuomy
```
input: wm831x_on as /devices/platform/imx-i2c.0/i2c-0/0-0034/wm831x-on/input/input2
```


[5/2/2022 8:52 PM] nonasuomy
```
wm831x-rtc wm831x-rtc: rtc core: registered wm831x as rtc0
mxc_rtc mxc_rtc.0: rtc core: registered mxc_rtc as rtc1
using rtc device, wm831x, for alarms
```


[5/2/2022 8:52 PM] nonasuomy
uses the wm831 as the Real Time Clock, guess that makes sense keep track of the wdt.


[5/2/2022 9:11 PM] nonasuomy
To boot recovery from SD card
```
setenv bootargs 'root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=2 rawtable=0xF40000'
boot
```
To boot normal system from SD card
```
setenv bootargs 'console=ttymxc4,115200 init=/init bootdev=0 rawtable=0xF40000'
boot
```
Are we writing our kernel to one of these spots?


[5/2/2022 9:12 PM] nonasuomy
Tried both setenv but still got the stock kernel both times.


[5/2/2022 9:14 PM] tux_linux
Setenv is only for kernel cmdline


[5/2/2022 9:14 PM] tux_linux
Don't have time right now, will get back to you tonight


[5/2/2022 9:16 PM] nonasuomy
ok no worries (I dd/sync'd our uImage over the stock SDCard Image so I assumed the stock kernel should no longer exist)
```
dd if=uImage of=/dev/mmcblk0 bs=512 seek=2048
sync
```


[5/3/2022 1:22 AM] tux_linux
Can you still boot our kernel?


[5/3/2022 1:25 AM] tux_linux
ttymxc2 is the problem I think


[5/3/2022 1:25 AM] tux_linux
It should be ttymxc4


[5/3/2022 1:25 AM] tux_linux
Try this
Last hope


[5/3/2022 3:41 AM] nonasuomy
I'm not sure how to yet


[5/3/2022 3:41 AM] nonasuomy
You said that line is only for after the kernel loads


[5/3/2022 3:42 AM] nonasuomy
so to me that means it's always going to be loading the stock kernel


[5/3/2022 3:42 AM] tux_linux
Yes, but it controls the boot console


[5/3/2022 3:42 AM] tux_linux
Yes


[5/3/2022 3:42 AM] tux_linux
Unless you find how to load something else


[5/3/2022 4:07 AM] tux_linux
But I really think ttymxc4 is the key


[5/3/2022 4:08 AM] nonasuomy
But the "lock" is the watchdog woof.


[5/3/2022 4:09 AM] tux_linux
I think the logger does something related to the console, it auto-switches it somehow, so that's why we can't see anything else on the log
idk


[5/3/2022 4:11 AM] nonasuomy
Hopefully it unmasks something. First struggle will be to get the kernel booting again no idea yet how to accomplish that.


[5/3/2022 4:11 AM] tux_linux
there is a way in u-boot to read from the external mmc
if it is supported


[5/3/2022 4:11 AM] nonasuomy
Was hopping that I could boot rupor's recovery with that above but it never engaged the usb serial terminal like it normally did or I'm just not sure how it works in general.


[5/3/2022 4:12 AM] tux_linux
Pinned a message.


[5/3/2022 4:12 AM] nonasuomy
the SD card of rupors just has a folder called OS Firmware\update.img on it


[5/3/2022 4:12 AM] tux_linux
please do `mmcinfo 0` in U-Boot


[5/3/2022 4:12 AM] nonasuomy
so I'm sure it doesn't know how to launch that.


[5/3/2022 4:14 AM] nonasuomy
As the SD image that the other guy did has all the linux and partitions expanded


[5/3/2022 4:14 AM] nonasuomy
so maybe we can use loady to launch that update.img


[5/3/2022 4:15 AM] tux_linux
how much does it weigh?


[5/3/2022 4:15 AM] nonasuomy
Then get usb serial console back then flash all the partitions back


[5/3/2022 4:15 AM] tux_linux
unless update.img is a kernel, nothing will 'launch'


[5/3/2022 4:16 AM] nonasuomy
Have a look here


[5/3/2022 4:17 AM] tux_linux
loading 25mb with loady will take half an hour


[5/3/2022 4:17 AM] tux_linux
and it is not a kernel
maybe there's some hope inside the file


[5/3/2022 4:18 AM] nonasuomy
The normal process is toss that folder on the SDCard then hold HOME + MENU physical buttons during boot then it launches that.


[5/3/2022 4:18 AM] nonasuomy
(the Home + Menu process I'm guessing requires some of those partitions I purged 😄


[5/3/2022 4:19 AM] nonasuomy
as it no longer launches anything now.


[5/3/2022 4:19 AM] tux_linux
can you do that, or U-Boot console is not accessible at all?


[5/3/2022 4:20 AM] nonasuomy
I still have U-Boot console from UART loading from what I believe is NAND


[5/3/2022 4:22 AM] nonasuomy
Yes trying in the background

{Reactions}
👍 

[5/3/2022 4:24 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmcinfo 0
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
Device: FSL_ESDHC
Manufacturer ID: 2
OEM: 544d
Name: SD02G
Tran Speed: 25000000
Rd Block Len: 512
SD version 2.0
High Capacity: No
Capacity: 2013265920
Bus Width: 4-bit
Boot Partition Size: No boot partition available
```


[5/3/2022 4:25 AM] tux_linux
ok, now, `mmcinfo 1`
if it doesn't work, `mmcinfo 2`


[5/3/2022 4:25 AM] tux_linux
this seems to be the eMMC


[5/3/2022 4:27 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmcinfo 1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
Card did not respond to voltage select!
MMC card init failed!
MX50_ARM2 U-Boot > mmcinfo 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
Device: FSL_ESDHC
Manufacturer ID: 45
OEM: 100
Name: SEM02
Tran Speed: 25000000
Rd Block Len: 512
MMC version 4.0
High Capacity: No
Capacity: 1958739968
Bus Width: 4-bit
Boot Partition Size:  1024KB
Current Partition for boot: Not bootable
MX50_ARM2 U-Boot > mmcinfo 3
MMC Device 3 not found

```


[5/3/2022 4:28 AM] tux_linux
ok nice
is your external sd 2GB in capacity?


[5/3/2022 4:28 AM] nonasuomy
I have 3 that I was testing but yes the one in there now is 2GB


[5/3/2022 4:28 AM] nonasuomy
2GB had rupors on it


[5/3/2022 4:28 AM] tux_linux
good, so you can read in external mmc from internal u-boot


[5/3/2022 4:29 AM] tux_linux
that means you can load a kernel


[5/3/2022 4:29 AM] nonasuomy
4GB has that stock adb image with our flash over it and the 16gb just has the stock adb image on it.


[5/3/2022 4:30 AM] tux_linux
let me try something on one of my kobo's u-boot


[5/3/2022 4:31 AM] nonasuomy
I read someplace to satisfy a /dev/watchdog you have to keep writing "v" to it. (this may not be something running yet though before it resets)


[5/3/2022 4:31 AM] tux_linux
busybox watchdog does that iirc


[5/3/2022 4:32 AM] nonasuomy
If only we could get to busybox haha


[5/3/2022 4:37 AM] nonasuomy
```
console=ttymxc4,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs
```
You want the default kernel command string to be changed to 2 -> 4 correct?


[5/3/2022 4:37 AM] tux_linux
yes


[5/3/2022 4:39 AM] nonasuomy
I wish I was able to save /proc/config.gz from the latest build before I did that stupid mistake as that was what I was trying to clean the SDCard for 😄


[5/3/2022 4:40 AM] nonasuomy
As the next attempt was going to just be get the default compiled kernel booting the stock os.


[5/3/2022 4:42 AM] nonasuomy
I wish people just brain dumped everything they were doing into git and then cleaned up the sanity later if they wanted it to help someone so at the least you could maybe put the puzzle pieces together.


[5/3/2022 4:43 AM] nonasuomy
Maybe Neural link will do this.


[5/3/2022 4:44 AM] nonasuomy
hmm lets compare our .config to rupors config.gz I dupped.


[5/3/2022 4:51 AM] tux_linux
Does
```
mmc read 1 0x800 0x1000
```
work or does it hang?


[5/3/2022 4:53 AM] nonasuomy
One moment

{Reactions}
👍 

[5/3/2022 5:10 AM] nonasuomy
Things in our config that are different
```
Rupor
N/A
Ours
CONFIG_ARM_L1_CACHE_SHIFT_6=y

Rupor
CONFIG_KERNEL_GZIP=y
# CONFIG_KERNEL_LZMA is not set
Ours
# CONFIG_KERNEL_GZIP is not set
CONFIG_KERNEL_LZMA=y

Rupor
CONFIG_INITRAMFS_SOURCE=""                                         
CONFIG_RD_GZIP=y
# CONFIG_RD_BZIP2 is not set
# CONFIG_RD_LZMA is not set
# CONFIG_RD_LZO is not set
Ours
CONFIG_INITRAMFS_SOURCE="/home/nonasuomy/code/busybox/_install"
CONFIG_INITRAMFS_ROOT_UID=0
CONFIG_INITRAMFS_ROOT_GID=0
# CONFIG_RD_GZIP is not set
# CONFIG_RD_BZIP2 is not set
CONFIG_RD_LZMA=y
# CONFIG_RD_LZO is not set
CONFIG_INITRAMFS_COMPRESSION_NONE=y
# CONFIG_INITRAMFS_COMPRESSION_GZIP is not set
# CONFIG_INITRAMFS_COMPRESSION_BZIP2 is not set
# CONFIG_INITRAMFS_COMPRESSION_LZMA is not set
# CONFIG_INITRAMFS_COMPRESSION_LZO is not set

Rupor
CONFIG_ARM_L1_CACHE_SHIFT=5
Ours
CONFIG_ARM_L1_CACHE_SHIFT=6

Rupor
CONFIG_CMDLINE="noinitrd console=ttymxc0,115200 root=/dev/mtdblock2 rw rootfstype=jffs2 ip=off"
# CONFIG_CMDLINE_FORCE is not set
# CONFIG_XIP_KERNEL is not set
# CONFIG_KEXEC is not set
Ours
CONFIG_CMDLINE="console=ttymxc4,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/sbin/init rootfstype=ramfs"
CONFIG_CMDLINE_FORCE=y
# CONFIG_XIP_KERNEL is not set
CONFIG_KEXEC=y
CONFIG_ATAGS_PROC=y
```


[5/3/2022 5:11 AM] tux_linux
god, you did use `diff`, didn't you?

{Reactions}
😂 

[5/3/2022 5:11 AM] tux_linux
thanks for the summary


[5/3/2022 5:11 AM] nonasuomy
```
Rupor
# CONFIG_NETWORK_SECMARK is not setONFIG_NETFILTER_XT_TARGET_CLASSIFY is not set
Ours
# CONFIG_NETWORK_SECMARK is not set
CONFIG_NETFILTER=y
# CONFIG_NETFILTER_DEBUG is not set
CONFIG_NETFILTER_ADVANCED=y

#
# Core Netfilter Configuration
#
# CONFIG_NETFILTER_NETLINK_QUEUE is not set
# CONFIG_NETFILTER_NETLINK_LOG is not set
CONFIG_NF_CONNTRACK=y
# CONFIG_NF_CT_ACCT is not set
# CONFIG_NF_CONNTRACK_MARK is not set
# CONFIG_NF_CONNTRACK_EVENTS is not set
# CONFIG_NF_CT_PROTO_DCCP is not set
# CONFIG_NF_CT_PROTO_SCTP is not set
# CONFIG_NF_CT_PROTO_UDPLITE is not set
# CONFIG_NF_CONNTRACK_AMANDA is not set
CONFIG_NF_CONNTRACK_FTP=y
# CONFIG_NF_CONNTRACK_H323 is not set
# CONFIG_NF_CONNTRACK_IRC is not set
# CONFIG_NF_CONNTRACK_NETBIOS_NS is not set
# CONFIG_NF_CONNTRACK_PPTP is not set
# CONFIG_NF_CONNTRACK_SANE is not set
# CONFIG_NF_CONNTRACK_SIP is not set
# CONFIG_NF_CONNTRACK_TFTP is not set
# CONFIG_NF_CT_NETLINK is not set
CONFIG_NETFILTER_XTABLES=y

#
# Xtables combined modules
#
# CONFIG_NETFILTER_XT_MARK is not set
# CONFIG_NETFILTER_XT_CONNMARK is not set

#
# Xtables targets
#
# CONFIG_NETFILTER_XT_TARGET_CLASSIFY is not set

Rupor
CONFIG_TOUCHSCREEN_SONYIR_NOFILM=y
Ours
# CONFIG_TOUCHSCREEN_SONYIR_NOFILM is not set

Rupor
CONFIG_WATCHDOG=y
CONFIG_WATCHDOG_NOWAYOUT=y

#
# Watchdog Device Drivers
#
# CONFIG_SOFT_WATCHDOG is not set
# CONFIG_WM831X_WATCHDOG is not set
CONFIG_MXC_WATCHDOG=y
# CONFIG_MAX63XX_WATCHDOG is not set
# CONFIG_IMX2_WDT is not set

#
# USB-based Watchdog Cards
#
# CONFIG_USBPCWATCHDOG is not set
ours
# CONFIG_WATCHDOG is not set
```


[5/3/2022 5:11 AM] nonasuomy
```
Rupor
# USB Device Class dri
                      # CONFIG_USB_SERIAL_ARK3116 is not set
Ours
# USB Device Class drivers
#
# CONFIG_USB_ACM is not set
# CONFIG_USB_PRINTER is not set
# CONFIG_USB_WDM is not set
# CONFIG_USB_TMC is not set

#
# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
#

#
# also be needed; see USB_STORAGE Help for more info
#
# CONFIG_USB_LIBUSUAL is not set

#
# USB Imaging devices
#
# CONFIG_USB_MDC800 is not set

#
# USB port drivers
#
CONFIG_USB_SERIAL=m
# CONFIG_USB_EZUSB is not set
# CONFIG_USB_SERIAL_GENERIC is not set
# CONFIG_USB_SERIAL_AIRCABLE is not set
# CONFIG_USB_SERIAL_ARK3116 is not set

Rupor
CONFIG_USB_G_SERIAL=m
Ours
# CONFIG_USB_G_SERIAL is not set

Rupor
# CONFIG_USB_ANDROID is not set
Ours
CONFIG_USB_ANDROID=m
CONFIG_USB_ANDROID_ADB=y
CONFIG_USB_ANDROID_MASS_STORAGE=y
CONFIG_USB_ANDROID_MASS_STORAGE_EXTSCSI=y
# CONFIG_USB_ANDROID_RNDIS is not set

Rupor
#
# MXC support drivers
#
CONF_SECURITY_RNG is not set
Ours
CONFIG_MXC_IPU=y
CONFIG_MXC_IPU_V3=y

#
# MXC SSI support
#
# CONFIG_MXC_SSI is not set

#
# MXC Digital Audio Multiplexer support
#
# CONFIG_MXC_DAM is not set

#
# MXC PMIC support
#
# CONFIG_MXC_PMIC_MC13783 is not set
# CONFIG_MXC_PMIC_MC13892 is not set
# CONFIG_MXC_PMIC_MC34704 is not set
# CONFIG_MXC_PMIC_MC9SDZ60 is not set
# CONFIG_MXC_PMIC_MC9S08DZ60 is not set

#
# MXC Security Drivers
#
# CONFIG_MXC_SECURITY_SCC is not set
# CONFIG_MXC_SECURITY_SCC2 is not set
# CONFIG_MXC_SECURITY_RNG is not set

#

Rupor
CONFIG_DECOMPRESS_GZIP=y
Ours
CONFIG_DECOMPRESS_LZMA=y
```


[5/3/2022 5:15 AM] nonasuomy
Do we want on the SDCard for the MMC command?


[5/3/2022 5:15 AM] nonasuomy
Also do you mean 2?


[5/3/2022 5:16 AM] nonasuomy
1 reported errors in our test above.


[5/3/2022 5:16 AM] tux_linux
yes, it doesn't matter right now, i just wanted to test if mmc read wasn't unusable


[5/3/2022 5:16 AM] tux_linux
yeah, 2 then


[5/3/2022 6:03 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 2 0x800 0x1000

MMC read: dev # 2, block # 4096, count 0 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
```


[5/3/2022 6:17 AM] tux_linux
Do you get the prompt back after that?


[5/3/2022 6:18 AM] nonasuomy
Nope watchdog


[5/3/2022 6:18 AM] tux_linux
Actually it should be this
```
mmc read 2 0x70008000 0x800 0x1000
```


[5/3/2022 6:19 AM] tux_linux
Wait


[5/3/2022 6:19 AM] tux_linux
Ok edited


[5/3/2022 6:19 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 2 0x70008000 0x800 0x1000

MMC read: dev # 2, block # 2048, count 4096 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
4096 blocks read: OK
MX50_ARM2 U-Boot >
```


[5/3/2022 6:20 AM] tux_linux
Yay


[5/3/2022 6:22 AM] nonasuomy
I have a uImage sitting on that sdcard root just to note.


[5/3/2022 6:23 AM] tux_linux
Try
```
mmc read 2 0x70008000 0x800 0x2000
bootm 0x70008000
```


[5/3/2022 6:23 AM] tux_linux
Is it written to unpartitioned space?


[5/3/2022 6:24 AM] nonasuomy
no just raw sitting there.


[5/3/2022 6:24 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 2 0x70008000 0x800 0x2000

MMC read: dev # 2, block # 2048, count 8192 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
```


[5/3/2022 6:24 AM] tux_linux
That is unpartitioned space


[5/3/2022 6:24 AM] tux_linux
Watchdog?


[5/3/2022 6:24 AM] nonasuomy
yes


[5/3/2022 6:24 AM] tux_linux
Crap


[5/3/2022 6:25 AM] tux_linux
Ok replace 0x2000 with 0x1400


[5/3/2022 6:25 AM] tux_linux
Copy paste as soon as possible


[5/3/2022 6:26 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 2 0x70008000 0x800 0x1400

MMC read: dev # 2, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
5120 blocks read: OK
MX50_ARM2 U-Boot >
```


[5/3/2022 6:26 AM] tux_linux
Or setenv bootcmd that command


[5/3/2022 6:26 AM] tux_linux
Good but you forgot bootm


[5/3/2022 6:26 AM] tux_linux
.


[5/3/2022 6:28 AM] nonasuomy
```
MX50_ARM2 U-Boot > mmc read 2 0x70008000 0x800 0x1400 bootm 0x70008000
mmc - MMC sub system

Usage:
mmc mmc read <device num> addr blk# cnt [partition]
mmc write <device num> addr blk# cnt [partition]
mmc rescan <device num>
mmc list - lists available devices
MX50_ARM2 U-Boot >
```


[5/3/2022 6:29 AM] tux_linux
no


[5/3/2022 6:29 AM] tux_linux
bootm is the second command


[5/3/2022 6:30 AM] nonasuomy
MX50_ARM2 U-Boot > mmc read 2 0x70008000 0x800 0x1400

MMC read: dev # 2, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
5120 blocks read: OK
MX50_ARM2 U-Boot > bootm 0x70008000
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...
Watchdog...


[5/3/2022 6:30 AM] tux_linux
Well we got to some point


[5/3/2022 6:32 AM] tux_linux
now
```
setenv bootcmd mmc read 2 0x70008000 0x800 0x1400\; bootm 0x70008000
saveenv
reset
```


[5/3/2022 6:32 AM] nonasuomy
reset or boot?


[5/3/2022 6:32 AM] tux_linux
setenv sets environment variables


[5/3/2022 6:32 AM] tux_linux
Bootm isn't executed


[5/3/2022 6:33 AM] nonasuomy
I'm just saying when I was launching before I just put boot after the setenv line


[5/3/2022 6:34 AM] nonasuomy
(not bootm)


[5/3/2022 6:34 AM] tux_linux
You need bootm


[5/3/2022 6:34 AM] tux_linux
then nothing worked


[5/3/2022 6:34 AM] nonasuomy
I thought reset would be like the watchdog triggering


[5/3/2022 6:35 AM] tux_linux
Try this


[5/3/2022 6:35 AM] tux_linux
Caution in newlines


[5/3/2022 6:37 AM] nonasuomy
```
MX50_ARM2 U-Boot > setenv bootcmd mmc read 2 0x70008000 0x800 0x1400\; bootm
MX50_ARM2 U-Boot > saveenv
Saving Environment to MMC...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
Writing to MMC(2)... done
MX50_ARM2 U-Boot > reset
resetting ...
▒

U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [WDOG]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 28
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0
```


[5/3/2022 6:37 AM] nonasuomy
I didn't let it boot


[5/3/2022 6:37 AM] tux_linux
Why?


[5/3/2022 6:38 AM] nonasuomy
I wanted to know what that watchdog trigger was haha that I saw fly by


[5/3/2022 6:38 AM] nonasuomy
will try again

{Reactions}
👍 

[5/3/2022 6:40 AM] nonasuomy
```
MX50_ARM2 U-Boot > setenv bootcmd mmc read 2 0x70008000 0x800 0x1400\; bootm 0x70008000
MX50_ARM2 U-Boot > saveenv
Saving Environment to MMC...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
Writing to MMC(2)... done
MX50_ARM2 U-Boot > reset
resetting ...
▒

U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [WDOG]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 28
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0
```


[5/3/2022 6:40 AM] nonasuomy
```
MMC read: dev # 2, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...



U-Boot 2009.08 (Dec 21 2011 - 14:48:38)
```


[5/3/2022 6:41 AM] nonasuomy
seems like it saved it's config though


[5/3/2022 6:41 AM] nonasuomy
as now its watchdog every time now after starting kernel


[5/3/2022 6:42 AM] nonasuomy
Saves me having to spam ever 15 seconds to prevent a lock up haha


[5/3/2022 6:43 AM] nonasuomy
Just to note the SDCard in there now is just a blank fat card with rupor's raw file img and our raw file uImage sitting on it.


[5/3/2022 6:43 AM] nonasuomy
(No os partitions etc.)


[5/3/2022 6:44 AM] nonasuomy
I was trying to get the fatls working but can't seem to, to see if it can actually see the files.


[5/3/2022 6:45 AM] tux_linux
XIP should not be there


[5/3/2022 6:45 AM] tux_linux
Can't understand why it is


[5/3/2022 6:45 AM] tux_linux
But it probably doesn't help


[5/3/2022 6:46 AM] tux_linux
This device is a load of crap


[5/3/2022 6:46 AM] nonasuomy
how do we form this command to see what's on the sd again 
```
MX50_ARM2 U-Boot > fatls mmc 0
failed in set read bl len = 0x0
** Can't read from device 0 **

** Unable to use mmc 0:1 for fatls **
```


[5/3/2022 6:47 AM] nonasuomy
```
MX50_ARM2 U-Boot > fatls mmc 2
** Partition 1 not valid on device 2 **

** Unable to use mmc 2:1 for fatls **
MX50_ARM2 U-Boot >
```


[5/3/2022 6:47 AM] tux_linux
You should use MMC 2


[5/3/2022 6:47 AM] tux_linux
It's your external SD right?


[5/3/2022 6:47 AM] tux_linux
Or maybe not


[5/3/2022 6:49 AM] tux_linux
Oh


[5/3/2022 6:49 AM] nonasuomy
2 must be the nand


[5/3/2022 6:49 AM] nonasuomy
as we are booting a kernel from it


[5/3/2022 6:50 AM] tux_linux
Which part of the SD is it you've formatted in fat?


[5/3/2022 6:50 AM] tux_linux
Ok
Then change setenv command


[5/3/2022 6:50 AM] nonasuomy
there is nothing on the SD cept raw files so that wouldn't work if that was 2


[5/3/2022 6:51 AM] tux_linux
```
setenv bootcmd mmc read 0 0x70008000 0x800 0x1400\; bootm 0x70008000
saveenv
reset
```


[5/3/2022 6:51 AM] tux_linux
It won't work but we will have at least the right MMC


[5/3/2022 6:51 AM] nonasuomy
Should we really save that


[5/3/2022 6:51 AM] nonasuomy
instead of just booting it right away?


[5/3/2022 6:52 AM] nonasuomy
then if it fails we will still have something?


[5/3/2022 6:52 AM] nonasuomy
```
setenv bootcmd mmc read 0 0x70008000 0x800 0x1400\; bootm 0x70008000
boot
```


[5/3/2022 6:52 AM] tux_linux
Actually writing the commands takes more time


[5/3/2022 6:52 AM] tux_linux
So less watchdog time


[5/3/2022 6:53 AM] tux_linux
If they are in the env they load and execute quicker


[5/3/2022 6:54 AM] nonasuomy
I'm just saying that "boot" is an actual U-boot  command.


[5/3/2022 6:54 AM] tux_linux
Yes but that is not what we want


[5/3/2022 6:54 AM] nonasuomy
ok


[5/3/2022 6:54 AM] tux_linux
Boot will execute bootcmd


[5/3/2022 6:54 AM] tux_linux
So it makes no sense


[5/3/2022 6:55 AM] nonasuomy
Ok going to do this

{Reactions}
👍 

[5/3/2022 6:56 AM] nonasuomy
Ok I see now


[5/3/2022 6:56 AM] nonasuomy
right to uboot no issue


[5/3/2022 6:56 AM] nonasuomy
```
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
Wrong Image Format for bootm command
ERROR: can't get kernel image!
```


[5/3/2022 6:57 AM] nonasuomy
I was worried that we were not going to get uboot.


[5/3/2022 6:57 AM] nonasuomy
then have nothing to work with


[5/3/2022 6:57 AM] tux_linux
U-Boot doesn't have anything to do with this command


[5/3/2022 6:57 AM] nonasuomy
Understood now.


[5/3/2022 6:58 AM] tux_linux
DD custom uimage to external MMC
Sector 2048


[5/3/2022 6:58 AM] nonasuomy
So basically just put the 4GB card in?


[5/3/2022 6:58 AM] tux_linux
Yeah


[5/3/2022 6:58 AM] nonasuomy
or you want blank card with just the uImage written to it?


[5/3/2022 6:59 AM] tux_linux
Whichever is fine


[5/3/2022 7:02 AM] nonasuomy
```
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2225840 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...
```


[5/3/2022 7:02 AM] nonasuomy
watchdog


[5/3/2022 7:03 AM] nonasuomy
2.1 MB (our kernel)


[5/3/2022 7:06 AM] tux_linux
Nonsense
I'm giving up for tonight
Good night!


[5/3/2022 7:07 AM] nonasuomy
haha ok thanks for playing hope you have no nightmares

{Reactions}
👍 

[5/3/2022 7:21 AM] nonasuomy
No luck with the new kernel just to note. same thing

{Reactions}
👍 

[5/3/2022 10:32 PM] andi15701
may use some resistor between the pins, that might help

{Reactions}
👍 

[5/3/2022 10:38 PM] tux_linux
Do you have any idea about how to disable the watchdog?


[5/3/2022 10:53 PM] nonasuomy
@andi


[5/3/2022 10:55 PM] nonasuomy
@tux-linux can you show me the same process with kobo compile kernel -> busybox prompt so I can have a general understanding what it looks like?


[5/3/2022 10:57 PM] andi15701
hmm, so what do we have involved here: watchdog of IMX, watchdog of PMIC, watchdog of some msp433 thingy?


[5/3/2022 10:57 PM] andi15701
does just waiting at u-boot prompt trigger the watchdog?


[5/3/2022 10:58 PM] nonasuomy
Basically not sure about the msp430  the IC label is smudged off it says m430 on it but I don't believe they label their chips like that.


[5/3/2022 10:59 PM] andi15701
FCC ID is what?


[5/3/2022 10:59 PM] nonasuomy
I think its more just watchdog between IMX and PMIC


[5/3/2022 10:59 PM] nonasuomy
the PMIC is a wm8123


[5/3/2022 11:00 PM] nonasuomy
Where does one find that?


[5/3/2022 11:00 PM] nonasuomy
https://fccid.io/AK8PRST1

{Embed}
https://fccid.io/AK8PRST1
FCC ID AK8PRST1 Digital Book Reader by Sony Corporation
FCC ID application submitted by Sony Corporation for Digital Book Reader for FCC ID AK8PRST1 ( AK8 PRST1 ) User Manual, Frequency, Reports, Images and more.
/mnt/data/projects/git/conversations/media/png-CDD40.php


[5/3/2022 11:03 PM] nonasuomy
hmm those links would have been nice...
Schematic Diagram    Schematics
Adobe Acrobat PDF (621 kB)    2011-07-28
Parts List    Parts List/Tune Up Info
Adobe Acrobat PDF (442 kB)    2011-07-28


[5/3/2022 11:03 PM] nonasuomy
(broken links or maybe you have to pay or something to get them)


[5/3/2022 11:19 PM] tux_linux
Yes it does
(Regarding U-Boot, I mean)


[5/3/2022 11:20 PM] tux_linux
Internet archive be like


[5/3/2022 11:31 PM] andi15701
hmm, the worst internal photos I have seen, often the ones from FCC application are the best


[5/3/2022 11:33 PM] tux_linux
Yes, they are horrible
2011 probably doesn't help


[5/3/2022 11:34 PM] andi15701
if you break into uboot, do you also have watchdog problems?


[5/3/2022 11:34 PM] andi15701
what kind of commands does this u-boot have?


[5/3/2022 11:34 PM] tux_linux
See pinned messages


[5/3/2022 11:34 PM] tux_linux
.


[5/3/2022 11:34 PM] tux_linux
.


[5/3/2022 11:38 PM] tux_linux
Yes


[5/3/2022 11:47 PM] andi15701
hmm, does the watchdog get turned off, when you do any command in u-boot which takes time (like loady and stuff)


[5/3/2022 11:48 PM] tux_linux
No


[5/3/2022 11:48 PM] tux_linux
It's still triggered


[5/3/2022 11:48 PM] nonasuomy
Nope ever 15sec it gets triggered no matter what


[5/3/2022 11:49 PM] andi15701
unless something pets it

{Reactions}
😂 (2) 

[5/3/2022 11:49 PM] nonasuomy
Correct


[5/3/2022 11:49 PM] nonasuomy
We just don’t know which hand to pet it with


[5/3/2022 11:52 PM] tux_linux
It's always biting so we can never know in time


[5/3/2022 11:54 PM] andi15701
well, the up side is that so people know there is a watchdog. Well, and dogs need to get out for a walk regularly. So for the next more dangerous covid mutant when you should stay at home again, you have an excuse to go out 😉

{Reactions}
😂 

[5/3/2022 11:56 PM] tux_linux
The Sony kernel probably does some magic but we've yet to figure it out what


[5/3/2022 11:57 PM] andi15701
so we have one working setup


[5/3/2022 11:57 PM] andi15701
to look at


[5/3/2022 11:57 PM] tux_linux
Yes, @NonaSuomy bricked partially the device but U-Boot is accessible


[5/3/2022 11:59 PM] andi15701
and I just found out that I was too strict with noscript plugin, so that I could not filter pinned messages...


[5/3/2022 11:59 PM] tux_linux
Oh


[5/3/2022 11:59 PM] andi15701
ok, one way to go: and or enable some printk at i2c writes in the kernel


[5/3/2022 11:59 PM] andi15701
in that working sony kernel


[5/3/2022 11:59 PM] tux_linux
But we can't boot a custom kernel
It hangs


[5/4/2022 12:00 AM] tux_linux
Even the Sony one when recompiled


[5/4/2022 12:00 AM] andi15701
hmm, the timing is the same 15s


[5/4/2022 12:01 AM] andi15701
so it really hangs because of the watchdog


[5/4/2022 12:01 AM] tux_linux
Seemingly yes


[5/4/2022 12:01 AM] tux_linux
Can't understand why it doesn't with the default one in the device


[5/4/2022 12:01 AM] tux_linux
Maybe Sony did not publish some code


[5/4/2022 12:03 AM] andi15701
so by inserting some sleep command before bootm, the point where the kernel hangs can be moved?


[5/4/2022 12:04 AM] tux_linux
It will just hang faster I guess?


[5/4/2022 12:04 AM] tux_linux
Try this @NonaSuomy


[5/4/2022 12:06 AM] andi15701
hmm, if we somehow geht the original kernel to boot, the whole timing of the boot process would be interesting to see what happens until or after the point when the watchdog would kick in


[5/4/2022 12:07 AM] tux_linux
Yes, good idea


[5/4/2022 12:07 AM] andi15701
on debian there is a package moreutils with a tool called ts


[5/4/2022 12:08 AM] andi15701
I often use ts </dev/ttyUSBx to get some timings, I have also seen terminal programs providing timestamps


[5/4/2022 12:08 AM] tux_linux
Hmm
Nice tool


[5/4/2022 12:09 AM] andi15701
maybe also inserting some sleep command before starting the original kernel


[5/4/2022 12:09 AM] andi15701
and increase sleep until it hangs


[5/4/2022 12:10 AM] andi15701
if it hangs before i2c initialisation, we have learned something


[5/4/2022 12:11 AM] tux_linux
NonaSuomy did some things with i2cdetect while the system was working


[5/4/2022 12:12 AM] tux_linux
.


[5/4/2022 12:14 AM] tux_linux
Thanks for your help


[5/6/2022 4:25 AM] nonasuomy
```
# remount SD card for writing
mount -o remount,rw /initrd/mnt/sd

# your screen driver
dd if=/dev/mmcblk2 of=/initrd/mnt/sd/WF.img skip=17408 count=2048 bs=1024
sync

# other important information, such as the operating voltage of the screen in line 5
dd if=/dev/mmcblk2 of=/initrd/mnt/sd/Vcom.img skip=15876 count=1 bs=1024
sync

# serial, MAC
dd if=/dev/mmcblk2 of=/initrd/mnt/sd/SN.img skip=15872 count=1 bs=1024
sync
```

Partitions

```
Disk /dev/sdb: 1.82 GiB, 1958739968 bytes, 3825664 sectors 
Disk model: PRS-XXX          
Units: 1 * 512 sectors = 512 bytes 
Sector size (logical/physical): 512 bytes / 512 bytes 
I/O size ( minimum/optimal): 512 bytes / 512 bytes 
Disk Label Type: dos 
Disk ID: 0x00000000 

Device Boot Start End Sectors Size Id Type 
/dev/sdb1 51200 71679 20480 10M 83 Linux 
/dev/sdb2 71680 92159 20480 10M 83 Linux 
/dev/sdb3 92160 866687 774528 378.2M 5 Extended 
/dev/sdb4 866688 3825663 2958976 1.4G 83 Linux
/dev/sdb5 92176 124991 32816 16M 83 Linux 
/dev/sdb6 125008 403583 278576 136M 83 Linux 
/dev/sdb7 403600 424127 20528 10M 83 Linux 
/dev/sdb8 424144 506111 81968 40M 83 Linux 
/dev/sdb9 506128 604479 98352 48M 83 Linux 
/dev/sdb10 604496 866687 262192 128M 83 Linux 

Partition table entries are not ordered as they are on disk.
```


[5/6/2022 5:36 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/TranslatorComparison-0C0A3.pdf


[5/6/2022 5:40 AM] tux_linux
What has this to do with the watchdog?


[5/6/2022 5:40 AM] nonasuomy
Still in recovery mode


[5/6/2022 5:40 AM] tux_linux
Have you tried this?


[5/6/2022 5:41 AM] nonasuomy
What was said I have no idea what it's about.


[5/6/2022 5:41 AM] tux_linux
Can you still access U-Boot prompt?


[5/6/2022 5:41 AM] nonasuomy
Yep


[5/6/2022 5:42 AM] tux_linux
Is there a sleep command there?


[5/6/2022 5:42 AM] nonasuomy
Yes it does nothing


[5/6/2022 5:42 AM] tux_linux
It doesn't sleep?


[5/6/2022 5:43 AM] nonasuomy
I can tell it to sleep it sits at prompt does nothing for a bit then gives me the console back. It doesn't extend the watchdog still resets if you select too long of sleep.


[5/6/2022 5:43 AM] tux_linux
Does i2c probe take some time?


[5/6/2022 5:44 AM] nonasuomy
(I first did this a while back when I thought U-Boot was controlling the watchdog (which it wasn't))


[5/6/2022 5:44 AM] tux_linux
Oh so it works


[5/6/2022 5:44 AM] tux_linux
Ok


[5/6/2022 5:44 AM] tux_linux
Then can you sleep a little bit, then run `boot`?


[5/6/2022 5:46 AM] nonasuomy
?? Unsure this would just give you less time to boot if you sleep first as the watchdog will reset in 15 seconds no matter what. You set the sleep to 14 seconds after it comes back it will reset the device within 1 more second.


[5/6/2022 5:47 AM] tux_linux
Yes, it is the goal


[5/6/2022 5:47 AM] nonasuomy
I'm not sure I understand how that helps can you explain further?


[5/6/2022 5:48 AM] nonasuomy
So you want it to start booting the kernel after sleep and it only get a few lines in and then it dies and resets.


[5/6/2022 5:48 AM] tux_linux
To try to hang it before it can disable the watchdog, but just enough to get it to boot


[5/6/2022 5:49 AM] nonasuomy
I wish the chip wasn't bga so I could tap that pin and hold it high or low.


[5/6/2022 5:49 AM] tux_linux
Yes, basically


[5/6/2022 5:50 AM] nonasuomy
I don't understand how that helps but I will try anything.


[5/6/2022 5:51 AM] tux_linux
Thanks
It's to determine if the log error we have with custom kernel is caused by the watchdog or something else


[5/6/2022 5:52 AM] nonasuomy
All I see happening is Sleep -> partial kernel boot -> reset clean slate still watchdog enabled and same process happening.


[5/6/2022 5:52 AM] tux_linux
Does the partial kernel boot hangs at the same place?


[5/6/2022 5:53 AM] nonasuomy
I found this ramdisk in a package I wonder if it has to run that first to disable the watchdog then it boots the mmc kernel or something like that.


[5/6/2022 5:53 AM] nonasuomy
Will try in a moment

{Reactions}
👍 

[5/6/2022 5:54 AM] tux_linux
Possible, might be writing to i2c from userspace


[5/6/2022 5:55 AM] nonasuomy
If we knew what to write.

{Reactions}
👀 

[5/6/2022 5:55 AM] nonasuomy
sniff the bus on boot.


[5/6/2022 5:56 AM] nonasuomy
Would really love to know what prstux did 😦


[5/6/2022 5:56 AM] nonasuomy
I begged him he just repeated his before message about no access to the old files.


[5/6/2022 5:57 AM] tux_linux
Maybe email the maintainer? If we have spent so much time on this watchdog, so he probably did; maybe he has some memories


[5/6/2022 5:57 AM] nonasuomy
I don't understand how you can spend so much work on something and then just want to see it die.


[5/6/2022 5:58 AM] tux_linux
Next thing would be JTAG
But I've never done that


[5/6/2022 5:59 AM] tux_linux
It's like bare hardware debugging


[5/6/2022 6:01 AM] tux_linux
There you can probably sniff the bus as you said


[5/6/2022 6:05 AM] nonasuomy
I have this some place http://dangerousprototypes.com/docs/Open_Bench_Logic_Sniffer


[5/6/2022 6:05 AM] nonasuomy
Not sure if it ever worked properly though.


[5/6/2022 6:11 AM] tux_linux
Interesting


[5/6/2022 6:19 AM] nonasuomy
Russian + English eMMC hookup (Google Translate)

{Attachments}
/mnt/data/projects/git/conversations/media/SonyPRS-T1-7E6C8.pdf
/mnt/data/projects/git/conversations/media/ironwayrecoverySonyPRS-T1-DA467.pdf


[5/6/2022 6:20 AM] nonasuomy
Was hunting this down for too long.


[5/6/2022 6:20 AM] nonasuomy
So many broken links I went through.


[5/6/2022 6:22 AM] tux_linux
eMMC hookup to computer (USB export)?


[5/6/2022 6:22 AM] nonasuomy
yes


[5/6/2022 6:22 AM] nonasuomy
R/W


[5/6/2022 6:23 AM] tux_linux
Awesome


[5/6/2022 6:23 AM] tux_linux
Did you try it?


[5/6/2022 6:24 AM] nonasuomy
Current issue is the level shifter I have is TXB not TXS


[5/6/2022 6:24 AM] nonasuomy
https://www.aliexpress.com/wholesale?trafficChannel=main&d=y&CatId=0&SearchText=txs0108&ltype=wholesale&SortType=price_asc&groupsort=1&page=1


[5/6/2022 6:25 AM] nonasuomy
TXS is meant for MMC level shifting.
YF08E is the TXS0108.
TXS0108 is for Open Drain circuits (like I2C, requires pull up or pull down resistors) but can be used in push-pull circuits, but you need to lower impedance by adding in some parallel resistors.


[5/6/2022 6:25 AM] nonasuomy
TXB is meant for SPI level shifting.
YE08 is the TXB0108.


[5/6/2022 6:26 AM] nonasuomy
That was what the PDF above was explaining the comparison between the two https://discord.com/channels/809205711778480158/966554812567130152/971978847748751371


[5/6/2022 6:26 AM] nonasuomy
I may still try B as I still don't see why it would matter 😄


[5/6/2022 6:27 AM] nonasuomy
B supports even lower voltages than 1.8


[5/6/2022 6:27 AM] nonasuomy
May have something to do with "OpenDrain" though as that seemed to be listed on the S and not the B


[5/6/2022 6:29 AM] tux_linux
Try the level shifter in the Kindle touch thread ;)


[5/6/2022 6:29 AM] nonasuomy
Does it use the same chip?


[5/6/2022 6:29 AM] tux_linux
https://www.mobileread.com/forums/showpost.php?p=1897643&postcount=1

{Embed}
https://www.mobileread.com/forums/showpost.php?p=1897643&postcount=1
MobileRead Forums - View Single Post -  Kindle serial adapter level...
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[5/6/2022 6:29 AM] tux_linux
Oh, it needs a specific chip?


[5/6/2022 6:29 AM] tux_linux
Mine is just between my UART host and Kindle


[5/6/2022 6:29 AM] nonasuomy
Ah just passive components


[5/6/2022 6:30 AM] nonasuomy
That's just for the serial communication


[5/6/2022 6:30 AM] tux_linux
Yes


[5/6/2022 6:31 AM] nonasuomy
Above is for directly interfacing to the eMMC https://discord.com/channels/809205711778480158/966554812567130152/971989544478064640

{Reactions}
👍 

[5/6/2022 6:31 AM] nonasuomy
(We already have 3.3v UART communication on the PRS-T1)


[5/6/2022 6:33 AM] nonasuomy
It would basically be like plugging the eMMC into you computer like a USB Flash Drive.

{Reactions}
👍 

[5/6/2022 6:34 AM] nonasuomy
Would probably work for all readers if they had pins broken out to the eMMC


[5/6/2022 6:35 AM] nonasuomy
I wish I knew how to map out what all these tests points are on the back of the PRS one I bet one is the watchdog pin haha.


[5/6/2022 6:36 AM] nonasuomy
I could probably figure out a few with a mulitmeter as long as they don't go into BGA land.


[5/6/2022 6:42 AM] tux_linux
That's probably true; try it
A multimeter should be safe enough


[5/6/2022 6:44 AM] nonasuomy
Ok so set to go you want me to do like a 14 sec sleep then what?


[5/6/2022 6:45 AM] tux_linux
maybe more like start at 5 secs and increase by 2 each time until it breaks or you see a difference


[5/6/2022 6:46 AM] tux_linux
In recent U-Boots, there's the `ums` command which does that too (USB export)


[5/6/2022 6:47 AM] nonasuomy
example
```
Hit any key to stop autoboot:  0
MX50_ARM2 U-Boot > sleep 16
MX50_ARM2 U-Boot > sl <-- All I was able to type before lockup and watchdog reset.
```

{Reactions}
👍 

[5/6/2022 6:51 AM] nonasuomy
This may not be making sense or my timing was off... sleep 20 still getting a console back


[5/6/2022 6:51 AM] tux_linux
hmm hmm


[5/6/2022 6:51 AM] tux_linux
interesting


[5/6/2022 6:52 AM] nonasuomy
sleep 25 still ok


[5/6/2022 6:53 AM] nonasuomy
sleep 30 too much.


[5/6/2022 6:55 AM] nonasuomy
sleep 28 console back


[5/6/2022 6:55 AM] tux_linux
thanks for testing


[5/6/2022 6:56 AM] nonasuomy
I think it's a 30 sec watchdog


[5/6/2022 6:58 AM] nonasuomy
Yup I was able to get a console back after 30 seconds now by typing 1 letter before the prompt then pasting it in the window sleep 30 then it dies right away after the prompt.


[5/6/2022 6:58 AM] tux_linux
Oh! interesting


[5/6/2022 6:59 AM] tux_linux
if you try that with the custom kernel...?


[5/6/2022 7:00 AM] nonasuomy
It's already set to boot the kernel
```
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2226004 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...
```

 Do you want me to type
```
sleep 25
boot
```


[5/6/2022 7:00 AM] tux_linux
no, rather try to hit a key when it's seemingly hanging in the kernel boot process


[5/6/2022 7:01 AM] tux_linux
but `sleep 25; boot` could be interesting too


[5/6/2022 7:11 AM] nonasuomy
```
Hit any key to stop autoboot:  0
MX50_ARM2 U-Boot > sleep 25; boot

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2226004 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...



U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [POR]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 28
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0
```


[5/6/2022 7:11 AM] nonasuomy
```
MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2226004 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...
```


[5/6/2022 7:14 AM] nonasuomy
sleep 28; boot
```
Hit any key to stop autoboot:  0
MX50_ARM2 U-Boot > sleep 28; boot

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2226004 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... <-- Watchdog'd here
```


[5/6/2022 7:17 AM] nonasuomy
sleep 29; boot
```
Hit any key to stop autoboot:  0
MX50_ARM2 U-Boot > sleep 29; boot

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz <-- Watchdog'd here
```


[5/6/2022 7:18 AM] nonasuomy
sleep 30; boot
```
Hit any key to stop autoboot:  0
MX50_ARM2 U-Boot > sleep 30; boot

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1 <-- Watchdog'd here
```


[5/6/2022 7:20 AM] nonasuomy
This was my hypnosis above.


[5/6/2022 7:21 AM] tux_linux
welp
i never thought we would spend so much time on a @#$% watchdog


[5/6/2022 7:22 AM] nonasuomy
I wonder if the kernel actually booted if it would pet the dog properly


[5/6/2022 7:22 AM] tux_linux
@andi here's some interesting logs for you as per your previous request


[5/6/2022 7:43 AM] nonasuomy
I guess this is actually not wise as these circuits run at 1.8 -> 3.3v and continuity test run at 9v from your meter.

{Reactions}
👍 

[5/6/2022 8:04 AM] nonasuomy
```
BUG: scheduling while atomic: swapper/1/0x00000002
Modules linked in:
[<8002a594>] (unwind_backtrace+0x0/0xf0) from [<8031ef5c>] (schedule+0x6c/0x324)
[<8031ef5c>] (schedule+0x6c/0x324) from [<8031f80c>] (schedule_timeout+0x18/0x1fc)
[<8031f80c>] (schedule_timeout+0x18/0x1fc) from [<8031f688>] (wait_for_common+0xf8/0x1b8)
[<8031f688>] (wait_for_common+0xf8/0x1b8) from [<80245930>] (mmc_wait_for_req+0x114/0x120)
[<80245930>] (mmc_wait_for_req+0x114/0x120) from [<8024d530>] (transfer+0x1b8/0x318)
[<8024d530>] (transfer+0x1b8/0x318) from [<8024d7f0>] (rawdata_write+0x160/0x238)
[<8024d7f0>] (rawdata_write+0x160/0x238) from [<8025ec34>] (past_mmc_header_write+0x48/0xb4)
[<8025ec34>] (past_mmc_header_write+0x48/0xb4) from [<8025f770>] (past_mmc_write+0x4e0/0x4fc)
[<8025f770>] (past_mmc_write+0x4e0/0x4fc) from [<8025e114>] (pastlog_mix2past_write+0x44/0x50)
[<8025e114>] (pastlog_mix2past_write+0x44/0x50) from [<8025e138>] (pastlog_mix2past_flush+0x18/0x28)
[<8025e138>] (pastlog_mix2past_flush+0x18/0x28) from [<8025e188>] (past_flush+0x40/0x54)
[<8025e188>] (past_flush+0x40/0x54) from [<8031ed40>] (panic+0x70/0xe4)
[<8031ed40>] (panic+0x70/0xe4) from [<80008e14>] (mount_block_root+0x1cc/0x20c)
[<80008e14>] (mount_block_root+0x1cc/0x20c) from [<8000906c>] (prepare_namespace+0x128/0x180)
[<8000906c>] (prepare_namespace+0x128/0x180) from [<80008484>] (kernel_init+0x124/0x16c)
[<80008484>] (kernel_init+0x124/0x16c) from [<800269e0>] (kernel_thread_exit+0x0/0x8)
```


[5/6/2022 8:05 AM] nonasuomy
(After holding home + menu on boot)


[5/6/2022 8:05 AM] nonasuomy
probably looking for the recover partition


[5/6/2022 8:05 AM] tux_linux
Wooo


[5/6/2022 8:05 AM] tux_linux
We got to some point


[5/6/2022 8:05 AM] nonasuomy
Just endlessly repeats that with no watchdog reset

{Reactions}
👀 

[5/6/2022 8:06 AM] tux_linux
This seems to be an important milestone in the boot process


[5/6/2022 8:07 AM] nonasuomy
Maybe if you boot from recover mode it disabled the watchdog?


[5/6/2022 8:07 AM] tux_linux
Try it?


[5/6/2022 8:07 AM] nonasuomy
I'm not sure how 😄


[5/6/2022 8:09 AM] nonasuomy
Because there is nothing on the eMMC I can't get rupor's recover working to do anything.


[5/6/2022 8:09 AM] nonasuomy
I wish I could see what happened before that but too hard to hold the buttons and watch the uart


[5/6/2022 8:10 AM] nonasuomy
It's also super fast repeating fills the buffer really fast


[5/6/2022 8:10 AM] tux_linux
Try fun Tak, blue putty, whatever it's called to try to hold the wires a bit


[5/6/2022 8:11 AM] nonasuomy
maybe I can just slide the button part off the table

{Reactions}
👍 

[5/6/2022 8:19 AM] nonasuomy
I wonder if it can detect if the screen is connected?


[5/6/2022 8:19 AM] nonasuomy
Does the Kobo boot with no screen connected?


[5/6/2022 8:23 AM] szybet
what


[5/6/2022 8:41 AM] nonasuomy
Got it this time....


[5/6/2022 8:41 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-B1594.txt


[5/6/2022 8:51 AM] nonasuomy
```
HOME + OPTION key input
...
Read recovery boot environment
```
At least I know it still detects pushing those buttons now. It just has no recovery data on the drive to point it to rupor recover.


[5/6/2022 1:53 PM] tux_linux
Yes


[5/6/2022 1:54 PM] tux_linux
Something to try might be to compile the kernel with the toolchain they seem to use
(GCC 4.4.0, look at boot log)


[5/6/2022 1:55 PM] tux_linux
Did you try our custom kernel with ttymxc4?


[5/6/2022 1:58 PM] szybet
Pretty old toolchain it is


[5/6/2022 3:14 PM] nonasuomy
That 2.1MB kernel above has ttymxc4 set the stock kernel is 2.2MB https://discord.com/channels/809205711778480158/966554812567130152/972003313082044476


[5/6/2022 4:42 PM] tux_linux
In config_cmdline?


[5/6/2022 7:42 PM] nonasuomy
https://discord.com/channels/809205711778480158/966554812567130152/970169381759877170


[5/6/2022 7:44 PM] nonasuomy
How does one use older versions?


[5/6/2022 7:45 PM] szybet
it just does


[5/6/2022 7:45 PM] szybet
try it


[5/6/2022 8:54 PM] tux_linux
Well, now maybe it matters

{Reactions}
😂 

[5/6/2022 8:55 PM] tux_linux
Like the Kindle


[5/6/2022 8:56 PM] nonasuomy
Can you modify this line to show me the command for GCC 4.4.0 compile ```make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- -j8 uImage```


[5/6/2022 8:57 PM] szybet
do you have the toolchain in you path?


[5/6/2022 8:57 PM] szybet
this 4.4.0


[5/6/2022 8:57 PM] nonasuomy
Szybet shhh


[5/6/2022 8:57 PM] szybet
?


[5/6/2022 8:57 PM] nonasuomy
haha


[5/6/2022 8:57 PM] nonasuomy
❤️


[5/6/2022 8:57 PM] szybet
i dont really understand


[5/6/2022 10:26 PM] tux_linux
Szybet isn't supposed to mean "tree"?


[5/6/2022 10:31 PM] szybet
in what language does it mean tree?


[5/6/2022 10:32 PM] szybet
Szybet -> "Szyba" in polish -> Glass


[5/6/2022 10:35 PM] tux_linux
Idk, look at Google translate


[5/6/2022 10:35 PM] szybet


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-D562C.png


[5/6/2022 10:36 PM] szybet
It gets weirder with every translate


[5/6/2022 10:36 PM] tux_linux
I know


[5/6/2022 10:36 PM] tux_linux
I translated from Polish to English and got "shaft"


[5/6/2022 10:36 PM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/Screenshot_20220506-163553-37E8A.png


[5/6/2022 10:36 PM] tux_linux
Arbre means tree in French


[5/6/2022 10:37 PM] szybet
oh in french


[5/6/2022 10:37 PM] szybet
okay


[5/6/2022 10:39 PM] tux_linux
I guess that Google translate showed "love" as the translation 🧐😂


[5/6/2022 10:40 PM] tux_linux
You need to download the toolchain


[5/6/2022 10:40 PM] tux_linux
I'll get you a download link when I get home


[5/6/2022 10:40 PM] tux_linux
In an hour or so


[5/6/2022 11:09 PM] nonasuomy
Ok thank you


[5/6/2022 11:16 PM] szybet
i looked up the repo


[5/6/2022 11:16 PM] szybet
https://gitlab.com/phreakuencies/prstux

{Embed}
https://gitlab.com/phreakuencies/prstux
Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[5/6/2022 11:16 PM] szybet
its just so weird


[5/6/2022 11:16 PM] szybet
those makefiles


[5/6/2022 11:16 PM] szybet
there is nothing

{Reactions}
☑️ 

[5/6/2022 11:39 PM] tux_linux
There https://osdn.net/frs/g_redir.php?m=jaist&f=iadfilehost%2Fdevtools%2Farm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2

{Embed}
https://osdn.net/frs/g_redir.php?m=jaist&f=iadfilehost%2Fdevtools%2Farm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2
Download IAD Filehost from SourceForge.net
project page for IAD members


[5/7/2022 12:02 AM] tux_linux
If it doesn't work you need to install 32 bit libs


[5/7/2022 12:34 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-B152E.png


[5/7/2022 12:35 AM] nonasuomy
I think I added them originally to compile the stock kernel.


[5/7/2022 12:40 AM] nonasuomy
.gitignore files usually tell a story, sometimes give you hints of things missing. The one you see there https://gitlab.com/phreakuencies/prstux/-/blob/master/.gitignore it excludes the kernel folder.

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/.gitignore
.gitignore · master · Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[5/7/2022 12:40 AM] nonasuomy
He probably had some custom make files in there to do that job from the prior make files.


[5/7/2022 12:41 AM] nonasuomy
Not just the kernel source and didn't realize it.


[5/7/2022 12:42 AM] nonasuomy
Always when you make projects as large as these. Take your current dev box and exclude it from final build test environment. Rebuild a new machine so you know what other users will go through trying to compile your code on a fresh machine.


[5/7/2022 1:42 AM] nonasuomy
There they flash the kernel https://gitlab.com/phreakuencies/prstux/-/blob/master/scripts/flash_normal_kernel.sh

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/scripts/flash_normal_kernel.sh
scripts/flash_normal_kernel.sh · master · Matias N. / prstux · GitL...
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[5/7/2022 1:58 AM] nonasuomy
@tux-linux what is the ramdisk for? https://gitlab.com/phreakuencies/prstux/-/blob/master/scripts/flash_normal_ramdisk.sh

{Embed}
https://gitlab.com/phreakuencies/prstux/-/blob/master/scripts/flash_normal_ramdisk.sh
scripts/flash_normal_ramdisk.sh · master · Matias N. / prstux · Git...
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[5/7/2022 1:59 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/new-86F93.ramdisk


[5/7/2022 1:59 AM] nonasuomy
It's extractable with 7zip


[5/7/2022 1:59 AM] nonasuomy
I saw it in other backups


[5/7/2022 1:59 AM] nonasuomy
new.ramdisk.uimg


[5/7/2022 2:25 AM] nonasuomy
https://source.android.com/devices/bootloader/partitions/ramdisk-partitions


[5/7/2022 2:26 AM] nonasuomy
Ramdisk
(Android 8.x and lower) Contains a kernel and a ramdisk.img.


[5/7/2022 2:29 AM] nonasuomy
Something about some devices use the ramdisk as the recovery.


[5/7/2022 2:47 AM] nonasuomy
How do you use it?


[5/7/2022 2:49 AM] nonasuomy
Can I test this kernel we compiled first in arm emulator?


[5/7/2022 3:12 AM] tux_linux
It will be harder to try there than on the actual device


[5/7/2022 3:12 AM] nonasuomy
Nice
```
qemu-system-arm -M versatilepb -cpu cortex-a8 -kernel /home/nonasuomy/code/linux-2.6.35.3/arch/arm/boot/uImage -m 128
pulseaudio: set_sink_input_volume() failed
pulseaudio: Reason: Invalid argument
pulseaudio: set_sink_input_mute() failed
pulseaudio: Reason: Invalid argume
```


[5/7/2022 3:12 AM] tux_linux
It really boots?


[5/7/2022 3:12 AM] nonasuomy
yes


[5/7/2022 3:13 AM] nonasuomy
to that point


[5/7/2022 3:13 AM] nonasuomy
Then it says no screen


[5/7/2022 3:13 AM] tux_linux
It doesn't boot
It's QEMU error messages


[5/7/2022 3:13 AM] nonasuomy
ok


[5/7/2022 3:13 AM] nonasuomy
I tried


[5/7/2022 3:13 AM] nonasuomy
I didn't expect to see anything yet it said pulseaudio


[5/7/2022 3:13 AM] tux_linux
It won't boot until you feed it with a zimage with versatilepb device tree


[5/7/2022 3:14 AM] tux_linux
And probably kernel >4.x, so basically building a completely different one, not really useful for our testing


[5/7/2022 3:22 AM] nonasuomy
Apparently you can get further with make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- versatile_defconfig


[5/7/2022 3:23 AM] nonasuomy
People said you you have to use at the least 512mb as well but when I tried that it said max is 256mb


[5/7/2022 3:24 AM] nonasuomy
also said there is a -M realview-pb-a8 -cpu cortex-a8


[5/7/2022 3:24 AM] nonasuomy
Someone said they got as far as (qemu) qemu: fatal: Trying to execute code outside RAM or ROM at 0x70008000


[5/7/2022 3:28 AM] nonasuomy
They were using 2.6.31-207


[5/7/2022 3:34 AM] nonasuomy
https://balau82.wordpress.com/2010/03/22/compiling-linux-kernel-for-qemu-arm-emulator/

{Embed}
Balau
https://balau82.wordpress.com/2010/03/22/compiling-linux-kernel-for-qemu-arm-emulator/
Compiling Linux kernel for QEMU ARM emulator
How to compile a vanilla Linux kernel for the Versatile ARM platform, and run it using QEMU.
/mnt/data/projects/git/conversations/media/bb5b906eefc5bd598f0e9dab79bb274f-F2EEE


[5/7/2022 3:35 AM] nonasuomy
(version 2.6.33)


[5/7/2022 3:58 AM] nonasuomy
@tux-linux


[5/7/2022 3:58 AM] nonasuomy
Minus the emulator talk.


[5/7/2022 4:11 AM] tux_linux
extract tarball


[5/7/2022 4:11 AM] tux_linux
cd tarball/bin


[5/7/2022 4:12 AM] tux_linux
`export PATH="${PATH}:${PWD}"`


[5/7/2022 4:12 AM] tux_linux
then you can set `CROSS_COMPILE` to `arm-none-linux-gnueabi-`


[5/7/2022 4:17 AM] nonasuomy
Thank you

{Reactions}
👍 

[5/7/2022 4:18 AM] nonasuomy
compiling...


[5/7/2022 4:22 AM] nonasuomy
Image Name:   Linux-2.6.35.3
Created:      Fri May  6 22:21:27 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2244756 Bytes = 2192.14 KiB = 2.14 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready

{Reactions}
👍 

[5/7/2022 4:57 AM] nonasuomy
```
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK
## Booting kernel from Legacy Image at 70008000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2244756 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   XIP Kernel Image ... OK
OK

Starting kernel ...
```


[5/7/2022 4:58 AM] nonasuomy
not really sure what it's doing in it's current state


[5/7/2022 4:58 AM] nonasuomy
it probably needs some more of those other partitions or something.


[5/7/2022 4:59 AM] nonasuomy
I wonder if we loaded it from the recover partition spot if that would have different results


[5/7/2022 11:05 PM] tux_linux
http://dangerousprototypes.com/docs/Bus_Pirate
interesting


[5/8/2022 12:57 AM] szybet
a very interesting device, but not usefull for hacking kobo's


[5/8/2022 1:04 AM] tux_linux
it was for trying to sniff the watchdog activity via i2c


[5/8/2022 1:05 AM] szybet
you can do this with an arduino propably ( well by skipping that you need to know which lines are i2c, and that device will not crash or something, maybe even damage itself )


[5/8/2022 1:06 AM] szybet
and i dont think watchdog goes over i2c


[5/8/2022 1:06 AM] szybet
no way, watchdogs are cpu internal things


[5/8/2022 1:19 AM] tux_linux
this one seems to be i2c though


[5/8/2022 1:20 AM] szybet
whaaat


[5/8/2022 1:21 AM] tux_linux
wm8321
it's a power management IC

{Reactions}
☑️ 

[5/8/2022 1:22 AM] szybet
and what is u-boot doing to him


[5/8/2022 1:24 AM] nonasuomy
In the wm8321 manual some interesting things says you can lockout watchdog modifications with a code. Another is that you can set after so many watchdog triggers it won’t power the device back on (which it does) I was wondering why the device was off after leaving it on for a while…


[5/8/2022 1:25 AM] szybet
well okay


[5/8/2022 1:25 AM] nonasuomy
There are 3 ways you can do watchdogs U-Boot/Kernel/PMIC power management


[5/8/2022 1:25 AM] nonasuomy
Uboot in this case does nothing


[5/8/2022 1:25 AM] szybet
but i dont see how hardware-hacking would help to port inkbox to it


[5/8/2022 1:26 AM] szybet
??? so what triggers the watchdog


[5/8/2022 1:26 AM] nonasuomy
Kernel enables watchdog after kernel loads to catch failures


[5/8/2022 1:26 AM] nonasuomy
We don’t make it to this part so it’s the third the PMIC causing it to trigger when we don’t pet it.


[5/8/2022 1:27 AM] nonasuomy
The PMIC


[5/8/2022 1:27 AM] szybet
not good


[5/8/2022 1:27 AM] szybet
kexec doesn't work on this device?


[5/8/2022 1:27 AM] nonasuomy
We can’t get to that point because of the external watchdog


[5/8/2022 1:28 AM] nonasuomy
Right when it is about to load busybox it takes too long and then resets


[5/8/2022 1:29 AM] szybet
the only way i see this is to make the kernel smaller


[5/8/2022 1:29 AM] nonasuomy
It doesn’t matter about that


[5/8/2022 1:29 AM] szybet
hardware - hacking is the wrong direction to go to if the port is intendeed for normal people too


[5/8/2022 1:30 AM] nonasuomy
The pmic would still trigger the watchdog as we didn’t pet it yet


[5/8/2022 1:30 AM] nonasuomy
Incorrect


[5/8/2022 1:30 AM] nonasuomy
Once we find out how to pet the dog we do that in software before the boot


[5/8/2022 1:31 AM] szybet
but if you load a smaller kernel it will not trigger it?


[5/8/2022 1:31 AM] nonasuomy
It will always trigger unless you pet it


[5/8/2022 1:32 AM] szybet
well then there is a osciloscope needed with i2c support, not a universal hacking board


[5/8/2022 1:32 AM] szybet
a smaller kernel will pet it before


[5/8/2022 1:32 AM] szybet
thats how sony does it?


[5/8/2022 1:32 AM] nonasuomy
Doesn’t matter what device you use


[5/8/2022 1:33 AM] nonasuomy
Oscilloscope with bus sniffing is way more expensive than a protocol sniffing board


[5/8/2022 1:34 AM] nonasuomy
Your talking about $500-1000 vs ~$50 or less


[5/8/2022 1:35 AM] nonasuomy
A smaller kernel won’t do anything without knowing how to pet the external watchdog.


[5/8/2022 1:36 AM] nonasuomy
We disabled all the kernel watchdog features and it still triggered as it is external to mx508


[5/8/2022 1:36 AM] szybet
overstatement


[5/8/2022 1:36 AM] szybet
but how sony does that? you have the kernel sources


[5/8/2022 1:37 AM] nonasuomy
Last oscilloscope I bought was just under $500 a Rigol and the one up from it does bus sniffing so whatever you say.


[5/8/2022 1:38 AM] nonasuomy
Like one of the cheapest decent scope companies


[5/8/2022 1:39 AM] szybet
osciloscope would be best for that becouse you could detect what is happening on this line, but yea to expensive for the most part


[5/8/2022 1:39 AM] tux_linux
it doesn't work


[5/8/2022 1:39 AM] szybet
?


[5/8/2022 1:40 AM] tux_linux
we didn't find yet


[5/8/2022 1:40 AM] szybet
cant you use sony's kernel sources and adjust it to inkbox?


[5/8/2022 1:41 AM] szybet
what about this debian distro for this device? there wasn't kernel sources right?


[5/8/2022 1:41 AM] tux_linux
that's what we are trying to do since two weeks


[5/8/2022 1:42 AM] szybet
you use a smaller sony's kernel that is disabling the watchdog and then loading busybox, whats the problem with this?


[5/8/2022 1:43 AM] tux_linux
it doesn't load


[5/8/2022 1:43 AM] szybet
what


[5/8/2022 1:43 AM] tux_linux
@NonaSuomy , did you get around the ttymxc2/mxc4 thing I suggested a few days ago?


[5/8/2022 1:43 AM] tux_linux
^unless that works we're basically screwed


[5/8/2022 1:44 AM] tux_linux
even the stock kernel sources don't work with the stock system


[5/8/2022 1:44 AM] szybet
any error? anything?


[5/8/2022 1:45 AM] szybet
first, can you load sony's kernel without any modyfications, self compiled?


[5/8/2022 1:53 AM] nonasuomy
I have to fix the eMMC first to test again.


[5/8/2022 2:17 AM] nonasuomy
I wonder what would happen if we enabled the wm8321 functions in the kernel


[5/8/2022 2:19 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/PRS-T1_989329901_Service_Manual-B06A3.pdf


[5/8/2022 2:20 AM] nonasuomy
Few interesting things in there about waveform and changing screens.


[5/8/2022 2:21 AM] nonasuomy
Explains what the numbers mean on the ink screen flex cable


[5/8/2022 2:22 AM] nonasuomy
Wonder if anyone had this tool "WaveForm file translation tool (wwv_parser.exe)"


[5/8/2022 2:26 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-10E47.png


[5/8/2022 2:26 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-D200E.png


[5/8/2022 3:48 AM] tux_linux
no


[5/8/2022 11:36 AM] szybet
well here is the problem, every other try won't work becouse of that


[5/8/2022 11:36 AM] szybet
why? any error?


[5/8/2022 6:26 PM] tux_linux
@NonaSuomy got some interesting logs from the Kindle!
```
[  274.985211] wm8962_process_req
[  274.988969] wm8962 1-001a: Writing reg : 0x19 value : 0x0
[  274.990196] wm8962 1-001a: Writing reg : 0x1c value : 0x0
[  274.992090] wm8962 1-001a: Writing reg : 0x30 value : 0x8221
[  274.993315] wm8962 1-001a: Writing reg : 0x17 value : 0x0
[  274.994540] wm8962 1-001a: Writing reg : 0x30 value : 0x8021
[  274.995098] wm8962 1-001a: Writing reg : 0x81 value : 0x0
```


[5/8/2022 6:26 PM] tux_linux
it's a different watchdog, but things might be similar


[5/8/2022 7:10 PM] tux_linux
you can write there using u-boot or busybox devmem


[5/8/2022 7:22 PM] nonasuomy
Can write what?


[5/8/2022 7:28 PM] tux_linux
values to registers


[5/8/2022 7:28 PM] tux_linux
i think you can use `mw` in U-Boot


[5/8/2022 7:40 PM] nonasuomy
Sorry it didn’t update the chat I see them now. I think that edition of the chip is also the audio processor


[5/8/2022 7:41 PM] nonasuomy
I was reading something of someone that added the 832x to the kernel spec and said most of the functions are the same with all their chips so maybe it might gives us a lot of hints


[5/8/2022 7:43 PM] nonasuomy
When using memory write, how do you know where the memory locations are and what kind of data needs to be written there


[5/8/2022 7:44 PM] tux_linux
i've not used it before


[5/8/2022 7:46 PM] nonasuomy
I saw an example that I pasted before that was for disabling the watchdog for a different chip (won’t be the same) https://discord.com/channels/809205711778480158/966554812567130152/969458955241783377


[5/8/2022 7:47 PM] nonasuomy
Not sure how those values align to that chip or what they are setting exactly


[5/8/2022 7:48 PM] nonasuomy
Above that though gave another little hint of what it was setting I think https://discord.com/channels/809205711778480158/966554812567130152/969458873905844224


[5/8/2022 7:50 PM] nonasuomy
So looks like they were making a env variable that triggers the watchdog to disable


[5/8/2022 7:51 PM] nonasuomy
There is an option in the kernel under watchdog for wm831x is that enabled for the Amazon reader?


[5/8/2022 7:54 PM] nonasuomy
We can probably correlate the data sheet from that IC to this one. If the contents about watchdog are the same we can probably just spam that.


[5/8/2022 7:55 PM] nonasuomy
Maybe in the env somehow like above


[5/8/2022 9:36 PM] nonasuomy
hmm wm8962 is just a dac no power management.


[5/8/2022 9:36 PM] nonasuomy
Also different company


[5/8/2022 9:36 PM] nonasuomy
I wonder if they cooperate or bought one another.


[5/8/2022 9:37 PM] nonasuomy
https://www.cirrus.com/products/wm8962-62b/


[5/8/2022 10:16 PM] nonasuomy
0x19 looks like this deals with enabling dac functions
0x1c disables the start-up bias current generator
0x30 mic relations 
https://statics.cirrus.com/pubs/proDatasheet/WM8962_Rev4.4.pdf


[5/9/2022 1:55 AM] nonasuomy
https://www.mobileread.com/forums/showthread.php?t=189735

{Embed}
https://www.mobileread.com/forums/showthread.php?t=189735
PRS-T1 Altering Root FS - MobileRead Forums
PRS-T1 Altering Root FS Sony Reader Dev Corner


[5/9/2022 1:57 AM] nonasuomy
Post 5


[5/9/2022 2:21 AM] nonasuomy
```
find . -print | cpio -o -H newc | gzip -v9 > ../ramdisk-adb.gz
mkimage -A ARM -O Linux -T ramdisk -C gzip -a 0x70308000 -e 0x70308000 -n "Normal Rootfs" -d ramdisk-adb.gz ramdisk-adb.uimg
```


[5/9/2022 2:27 AM] nonasuomy
https://balau82.wordpress.com/2010/04/12/booting-linux-with-u-boot-on-qemu-arm/

{Embed}
Balau
https://balau82.wordpress.com/2010/04/12/booting-linux-with-u-boot-on-qemu-arm/
Booting Linux with U-Boot on QEMU ARM
Using QEMU to emulate the complete boot procedure of an ARM system using U-Boot, the Linux kernel and Busybox.
/mnt/data/projects/git/conversations/media/u-boot-86EDD.png


[5/9/2022 2:28 AM] nonasuomy
http://www.maddes.net/files//u-boot/extract_uImage.sh


[5/9/2022 5:21 AM] tux_linux
what are you trying to do with this script? (Well, why do you need the uImage?)


[5/9/2022 7:11 AM] szybet
I dont understand him too


[5/9/2022 3:46 PM] nonasuomy
It pulls out the config.gz of a uImage.


[5/9/2022 4:25 PM] nonasuomy
Oh wait that was to extract that full uImage


[5/9/2022 4:26 PM] nonasuomy
@tux-linux you use Gentoo correct?


[5/9/2022 4:27 PM] nonasuomy
Apparently this exists in gentoo /usr/src/linux/scripts/extract-ikconfig and that extracts the config.gz from a uImage


[5/9/2022 4:29 PM] nonasuomy
https://github.com/torvalds/linux/blob/master/scripts/extract-ikconfig

{Embed}
https://github.com/torvalds/linux/blob/master/scripts/extract-ikconfig
linux/extract-ikconfig at master · torvalds/linux
Linux kernel source tree. Contribute to torvalds/linux development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/linux-96817


[5/9/2022 4:31 PM] nonasuomy
@tux-linux Any thoughts on this post 5 https://www.mobileread.com/forums/showpost.php?p=2207783&postcount=5

{Embed}
https://www.mobileread.com/forums/showpost.php?p=2207783&postcount=5
MobileRead Forums - View Single Post - PRS-T1 Altering Root FS
MobileRead - the resource for mobile geeks seeking information and advice for keeping their gadgets happy.


[5/9/2022 6:34 PM] tux_linux
If you can't get the kernel to boot, modifying the rootfs is useless


[5/9/2022 6:54 PM] nonasuomy
I'm not sure it will allow it to boot without packaging it like that.


[5/9/2022 6:55 PM] nonasuomy
I think it needs that rootfs to disable the watchdog then we point it from there to our kernel.


[5/9/2022 6:56 PM] szybet
wrong


[5/9/2022 6:56 PM] szybet
*propably*


[5/9/2022 6:57 PM] nonasuomy
Szybet with the most respect please try not to answer without knowing.


[5/9/2022 7:10 PM] szybet
sure, well we will see


[5/9/2022 7:12 PM] nonasuomy
Sony seems to deal with things a far different way with everything they do. If you look up any of their readers nobody has really done anything with them.


[5/9/2022 7:14 PM] nonasuomy
Ordered one of these to interface with the eMMC https://www.aliexpress.com/item/1005001619337949.html

{Embed}
https://www.aliexpress.com/item/1005001619337949.html
0.4US $ | 8 Channel Logic Level Bi directional Converter Module TXS...
Smarter Shopping, Better Living!  Aliexpress.com
/mnt/data/projects/git/conversations/media/8-Channel-Logic-Level-Bi-directional-Conve-A7099.jpg


[5/10/2022 6:00 AM] nonasuomy
https://web.archive.org/web/20150114012331/http://oss.sony.net:80/Products/Linux/Audio/category03.html

{Embed}
https://web.archive.org/web/20150114012331/http://oss.sony.net:80/Products/Linux/Audio/category03.html
Sony Global - Source Code Distribution Service
Source code download


[5/10/2022 6:01 AM] nonasuomy
Seems they used to have every reader there before and you can still download the older kernels there too!


[5/10/2022 6:01 AM] nonasuomy
https://web.archive.org/web/20170509133232/http://oss.sony.net/Products/Linux/Audio/Download/common/L1KaMCC9mHxsZfoFPJnsBg/linux-2.6.35.3-110901.tgz


[5/10/2022 6:06 AM] nonasuomy
Spoke too soon most of the links look dead but hey at the least it had that one that I was wondering about 😄

{Reactions}
🎉 

[5/10/2022 6:11 AM] nonasuomy
haha wut...
```
VERSION = 2
PATCHLEVEL = 6
SUBLEVEL = 35
EXTRAVERSION = .3
NAME = Sheep on Meth
```


[5/10/2022 6:27 AM] nonasuomy
Looks like some "Butty" put this package together.

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-76032.png


[5/10/2022 6:28 AM] nonasuomy
At the least they used the right numbers for version in the older package.


[5/10/2022 6:34 AM] nonasuomy
Linux code names are some weird stuff https://en.wikipedia.org/wiki/Linux_kernel_version_history

{Embed}
https://en.wikipedia.org/wiki/Linux_kernel_version_history
Linux kernel version history
This article denotes the version history of the Linux kernel. The Linux kernel is a free and open-source, monolithic, Unix-like operating system kernel. It was conceived and created in 1991 by Linus Torvalds.Linux kernels have different support level depending on version. Version 4.4, released in January 2016, was declared to have Long-Term Supp...


[5/10/2022 3:48 PM] nonasuomy
I don't understand I tried to make a rootfs it says to extract it out the main image. Did so. Seemed a little small. Said there was garbage data on the end that it ignored. I then compressed it back into the main image and it destroyed the whole thing. The 1.82GB image is now 5.3MB. I opened it and now there is only 4 img inside instead of 9.

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-BEACA.png
/mnt/data/projects/git/conversations/media/unknown-40E76.png


[5/10/2022 4:05 PM] nonasuomy
```
cd ~/code
mkdir rootfs

dd if=t1_eng_\(1.82Gb\)_1.0.05.11130.img of=rootfs.img bs=1 skip=5242880 count=1048512
1048512+0 records in
1048512+0 records out
1048512 bytes (1.0 MB, 1.0 MiB) copied, 1.74376 s, 601 kB/s

dd if=t1_eng_\(1.82Gb\)_1.0.05.11130.img of=rootfs.img.gz bs=1 skip=5242944 count=1048512
1048512+0 records in
1048512+0 records out
1048512 bytes (1.0 MB, 1.0 MiB) copied, 1.76024 s, 596 kB/s

mv rootfs.img.gz ~/code/rootfs
cd ~/code/rootfs
gunzip -c rootfs.img.gz | cpio -i
842 blocks
gzip: rootfs.img.gz: decompression OK, trailing garbage ignored

mv rootfs.img.gz ../
```


[5/10/2022 4:06 PM] nonasuomy
```
find . -print
.
./default.prop
./sys
./data
./ebook
./ebook/fonts
./ebook/preload
./ebook/dic
./sbin
./sbin/ts_calibrator
./init
./system
./init.rc
./lib
./lib/modules
./lib/modules/2.6.35.3
./lib/modules/2.6.35.3/build
./lib/modules/2.6.35.3/modules.usbmap
./lib/modules/2.6.35.3/modules.dep.bin
./lib/modules/2.6.35.3/modules.builtin
./lib/modules/2.6.35.3/modules.seriomap
./lib/modules/2.6.35.3/source
./lib/modules/2.6.35.3/modules.ofmap
./lib/modules/2.6.35.3/modules.isapnpmap
./lib/modules/2.6.35.3/modules.inputmap
./lib/modules/2.6.35.3/modules.alias.bin
./lib/modules/2.6.35.3/modules.dep
./lib/modules/2.6.35.3/modules.ccwmap
./lib/modules/2.6.35.3/kernel
./lib/modules/2.6.35.3/kernel/drivers
./lib/modules/2.6.35.3/kernel/drivers/usb
./lib/modules/2.6.35.3/kernel/drivers/usb/gadget
./lib/modules/2.6.35.3/kernel/drivers/usb/gadget/g_android.ko
./lib/modules/2.6.35.3/kernel/drivers/usb/gadget/arcotg_udc.ko
./lib/modules/2.6.35.3/kernel/drivers/usb/serial
./lib/modules/2.6.35.3/kernel/drivers/usb/serial/usbserial.ko
./lib/modules/2.6.35.3/kernel/drivers/usb/host
./lib/modules/2.6.35.3/kernel/drivers/usb/host/ehci-hcd.ko
./lib/modules/2.6.35.3/modules.builtin.bin
./lib/modules/2.6.35.3/modules.alias
./lib/modules/2.6.35.3/modules.pcimap
./lib/modules/2.6.35.3/modules.ieee1394map
./lib/modules/2.6.35.3/modules.order
./lib/modules/2.6.35.3/modules.symbols.bin
./lib/modules/2.6.35.3/modules.symbols
./init.goldfish.rc
./proc
./dev
```


[5/10/2022 4:06 PM] nonasuomy
```
find . | cpio -o -H newc | gzip > ../newrootfs.img.gz
842 blocks

mkimage -A arm -O linux -C gzip -T ramdisk -n "Normal Rootfs" -a 0x500040 -e 0x500040 -d ../newrootfs.img.gz ../newrootfs.img
Image Name:   Normal Rootfs
Created:      Tue May 10 04:29:32 2022
Image Type:   ARM Linux RAMDisk Image (gzip compressed)
Data Size:    214702 Bytes = 209.67 KiB = 0.20 MiB
Load Address: 00500040
Entry Point:  00500040

dd if=newrootfs.img of=t1_eng_\(1.82Gb\)_1.0.05.11130.img bs=1 seek=5242880
214766+0 records in
214766+0 records out
214766 bytes (215 kB, 210 KiB) copied, 0.347159 s, 619 kB/s
```


[5/10/2022 10:38 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-CC958.png


[5/10/2022 10:43 PM] nonasuomy
Another persons backup of the eMMC


[5/12/2022 12:03 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-A83D2.png


[5/12/2022 12:06 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-5221C.png


[5/12/2022 12:13 AM] nonasuomy
All those images show the resistors removed from the circled area of D3 DATO D1 D2 that's going to be rough to remove then put back, those solder pads are the size of the needle of a pin


[5/12/2022 12:29 AM] nonasuomy
https://www.ebay.ca/itm/325184352800?hash=item4bb67f7220:g:ZYcAAOSw0EJieuDZ

{Embed}
https://www.ebay.ca/itm/325184352800?hash=item4bb67f7220:g:ZYcAAOSw0EJieuDZ
sony prs-t1 eReader   | eBay
Find many great new & used options and get the best deals for sony prs-t1 eReader  at the best online prices at eBay! Free shipping for many products!
/mnt/data/projects/git/conversations/media/s-l400-B561D.jpg


[5/12/2022 3:39 AM] tux_linux
this is an interesting price


[5/12/2022 3:39 AM] tux_linux
(well, current bid that is)


[5/12/2022 3:40 AM] tux_linux
maybe I could help if I owned one


[5/12/2022 3:40 AM] nonasuomy
Not sure why anyone would want it 😄


[5/12/2022 3:41 AM] nonasuomy
Probability is high you would win.


[5/12/2022 3:41 AM] nonasuomy
with one bid.


[5/12/2022 3:41 AM] tux_linux
well, total price would still be $30


[5/12/2022 3:41 AM] tux_linux
which, for a student, is kind of a lot


[5/12/2022 3:44 AM] tux_linux
hmm
with the amount of work you have done though, I'm not sure actually trying things out on my side would really be useful


[5/12/2022 3:45 AM] nonasuomy
I have only done fumbling around in the dark collecting others information and processing your input.


[5/12/2022 3:45 AM] nonasuomy
I'm sure you would eventually get it.


[5/12/2022 3:46 AM] nonasuomy
prstux is based on the T2 which is basically the T1 without the sound processor and a higher clock 1GHz instead of 800MHz but same chip


[5/12/2022 3:47 AM] tux_linux
hmm


[5/12/2022 3:49 AM] nonasuomy
I would send you mine but shipping in Canada is dumb and would cost probably the same as that full ebay unit 😄


[5/12/2022 3:49 AM] nonasuomy
Also it kinda starts you off on a bad foot with no eMMC files.


[5/12/2022 3:51 AM] tux_linux
If you sent yours, it would actually be better, no difficult opening, serial already easier to setup, etc. and exact same hardware platform/bugs there might be
But I understand the problem of shipping


[5/12/2022 3:51 AM] tux_linux
What country are you in?


[5/12/2022 3:51 AM] nonasuomy
Same as you.


[5/12/2022 3:53 AM] nonasuomy
They are pretty easy to open


[5/12/2022 3:53 AM] tux_linux
Well then
it might not be that bad


[5/12/2022 3:53 AM] nonasuomy
like 15 plastic clips around the outside


[5/12/2022 3:53 AM] tux_linux
Shipping for a package like this is around ~15$


[5/12/2022 3:54 AM] tux_linux
(from experience, I often hunt down FB marketplace, Kijiji for ads)


[5/12/2022 3:56 AM] tux_linux
But before we do this, if ever we do this, can you send me a link of the kernel source code archive you're currently using that produces the logger bug? I want to look around a bit


[5/12/2022 3:59 AM] nonasuomy
I will pay the price for you it will be more fun if we both have one unit.


[5/12/2022 3:59 AM] nonasuomy
*if nobody else bids on it haha


[5/12/2022 3:59 AM] tux_linux
well,
thanks


[5/12/2022 4:00 AM] tux_linux
i guess we should wait until tuesday and see what's happened


[5/12/2022 4:00 AM] tux_linux
then bid


[5/12/2022 4:00 AM] tux_linux
(or not)


[5/12/2022 4:00 AM] nonasuomy
I don't care in general about the unit I've just been having fun hacking around with it with you.

{Reactions}
👍 

[5/12/2022 4:02 AM] nonasuomy
You will probably get it working in two seconds with that SD Loader forum post and that other vague one.


[5/12/2022 4:02 AM] tux_linux
not so sure


[5/12/2022 4:03 AM] tux_linux
that watchdog is really a concern


[5/12/2022 4:03 AM] tux_linux
i can't believe we spent almost three weeks trying to pet a watchdog


[5/12/2022 4:04 AM] nonasuomy
I almost found another way through uboot to pet it but uboot wasn't compiled with the multi i2c flag so I can't switch i2c ports


[5/12/2022 4:05 AM] nonasuomy
it's stuck on i2c 1 for some reason


[5/12/2022 4:05 AM] nonasuomy
I think it's on 0


[5/12/2022 4:05 AM] tux_linux
if you compile it with the flag, it fails?


[5/12/2022 4:06 AM] nonasuomy
I'm not sure how to compile uboot and what I would do with it after it was compiled


[5/12/2022 4:06 AM] nonasuomy
I'm not sure I want to risk the current loading state of uboot as it's all I have left to play with the device


[5/12/2022 4:06 AM] nonasuomy
unless you can load uboot from uboot.


[5/12/2022 4:06 AM] tux_linux
you **can**


[5/12/2022 4:07 AM] tux_linux
look it up
i've never done it on kobo
but it is possible


[5/12/2022 4:07 AM] tux_linux
example: U-Boot SPL


[5/12/2022 4:08 AM] nonasuomy
does the kobo have multiple i2c ports?


[5/12/2022 4:08 AM] nonasuomy
with different devices on each?


[5/12/2022 4:09 AM] nonasuomy
if you are in uboot does this work: i2c dev 0 or 1 etc


[5/12/2022 4:11 AM] nonasuomy
https://pastebin.com/dM149Hz4 this is the uboot i2c command code

{Embed}
https://pastebin.com/dM149Hz4
/* * U-Boot 2009.08 (Dec 21 2011 - 14:48:38) * (C) Copyright 2001 *...
Pastebin.com is the number one paste tool since 2002. Pastebin is a website where you can store text online for a set period of time.


[5/12/2022 4:11 AM] nonasuomy
If you look in there for CONFIG_I2C_MULTI_BUS


[5/12/2022 4:11 AM] nonasuomy
you will see how it works


[5/12/2022 4:11 AM] nonasuomy
but you need that in your uboot config


[5/12/2022 4:13 AM] nonasuomy
from what I can see the default for this sony config is 
```
/*
 * I2C Configs
 */

#ifdef CONFIG_CMD_I2C
    #define CONFIG_HARD_I2C         1
    #define CONFIG_I2C_MXC          1
    #define CONFIG_SYS_I2C_PORT             I2C2_BASE_ADDR
    #define CONFIG_SYS_I2C_SPEED            100000
    #define CONFIG_SYS_I2C_SLAVE            0xfe
#endif
```


[5/12/2022 4:14 AM] tux_linux
Hmm
I'll try on a Kobo soon


[5/12/2022 4:16 AM] nonasuomy
uboot/include/configs/mx50_arm2.h


[5/12/2022 4:16 AM] nonasuomy
Have you compiled uboot before?


[5/12/2022 4:29 AM] nonasuomy
The only down fall to this is if the watchdog is not this chip but I think it is highly likely.

Doc:
WM8321G Address R16388(4004h) Watchdog, Bit 14 WDOG_DEBUG, Default 0, Watchdog Pause 0=Disable 1=Enabled (halts the watchdog timer for system debugging) Protected by user key

This would show if you can't modify the watchdog bit without the code
```
i2c dev 0
i2c probe
i2c md.w 0x34 0x4008   -> default value is 0x0000
```
We have to write a magic value 0x9716 to this register, to allow writes to WDOG_DEBUG etc.
```
MX50_ARM2 U-Boot > i2c mm.w 0x34 0x4008 0x9716
```
Print out the bit set for 4004
```
MX50_ARM2 U-Boot > i2c md.w 0x34 0x4004
```
Then you should be abled to activate the watchdog debug mode
```
MX50_ARM2 U-Boot > i2c mm.w 0x34 0x4004 (change bit 14 of whatever you get from above to 1) 
```

Then hopefully no more watch dog unless its that 8bit ic or that weird m430 doing it.


[5/12/2022 4:46 AM] nonasuomy
Hopefully they didn't upgrade it past 1.04 or 1.05 as then rooting is still possible


[5/12/2022 4:47 AM] nonasuomy
Not that you may care about that but eh


[5/12/2022 4:47 AM] tux_linux
don't worry, if we have access to U-Boot everything is possible


[5/12/2022 4:47 AM] tux_linux
even access for 15 secs only


[5/12/2022 4:48 AM] nonasuomy
You can still downgrade it from 1.07 but it's sketchy.


[5/12/2022 4:49 AM] nonasuomy
Just to note the eMMC gets badblocks on these devices as well which cause it not to boot.


[5/12/2022 4:49 AM] tux_linux
honestly the first thing I'll want to do once we have this watchdog fixed up will be to wipe the SD


[5/12/2022 4:49 AM] nonasuomy
So probably SD would be the best bet.


[5/12/2022 4:49 AM] tux_linux
yes


[5/12/2022 4:52 AM] nonasuomy
Just realize as well though I don't think prstux had to do anything with the watchdog so there is also that avenue if it push comes to shove.


[5/12/2022 4:52 AM] nonasuomy
I think it just involves packaging the stock rootfs properly.


[5/12/2022 4:52 AM] nonasuomy
with mkimage


[5/12/2022 4:59 AM] nonasuomy
That is also how jpa got his stock image loading from SD.


[5/12/2022 5:05 AM] nonasuomy
Here is the back cover with the clip locations the only spot you have to look out for is the part that goes around the headphones jack as you can see I broke it when I peeled it off.

{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1501-894A6.jpg


[5/12/2022 5:07 AM] nonasuomy
14 screws in the motherboard.


[5/12/2022 5:10 AM] nonasuomy
Maybe even just make that guy a low offer and see if it accepts it as that button is enabled.


[5/12/2022 5:10 AM] nonasuomy
It will usually give you 3 attempts


[5/12/2022 5:10 AM] nonasuomy
To hit what number they set it to.


[5/12/2022 5:12 AM] nonasuomy
I had one guy not accept the offer then he suggested $10 more for the device so I just put the same old offer I did before in to show him I was not bugging and then he finally accepted it.

{Reactions}
👍 

[5/12/2022 5:12 AM] nonasuomy
So maybe try something like that if it goes down.


[5/12/2022 5:14 AM] nonasuomy
They usually have an auto amount so you will know right away if it is accepted or not.


[5/12/2022 5:14 AM] nonasuomy
try like $5 then maybe $10


[5/12/2022 5:15 AM] tux_linux
minimum is $11.20


[5/12/2022 5:15 AM] nonasuomy
haha we tried.


[5/12/2022 5:17 AM] tux_linux
do you prefer to bid or I do?


[5/12/2022 5:17 AM] nonasuomy
No bid just make an offer


[5/12/2022 5:17 AM] nonasuomy
You do it then it can ship right to you instead of double shipping


[5/12/2022 5:18 AM] tux_linux
yeah ok


[5/12/2022 5:19 AM] nonasuomy
up to you some people are just thriftstore shoppers and just want to get their money back at the least.


[5/12/2022 5:20 AM] nonasuomy
I wouldn't go higher than his starting bid though.


[5/12/2022 5:21 AM] tux_linux
let's say I offer $12


[5/12/2022 5:21 AM] nonasuomy
no


[5/12/2022 5:21 AM] tux_linux
no?
hm


[5/12/2022 5:21 AM] nonasuomy
unless it rejected you at 10?


[5/12/2022 5:21 AM] tux_linux
no


[5/12/2022 5:21 AM] tux_linux
it says 5 offers left


[5/12/2022 5:21 AM] tux_linux
i didn't offer anything yet


[5/12/2022 5:22 AM] nonasuomy
oh ok. low ball first it will auto reply right away if it was under his set make an offer price so it won't hurt you to do that.


[5/12/2022 5:22 AM] tux_linux
ok
$8 maybe?


[5/12/2022 5:22 AM] nonasuomy
The make an offer price can be set lower than your starting bid price just so you know.


[5/12/2022 5:23 AM] nonasuomy
That's how it was set with the other item I got.


[5/12/2022 5:23 AM] nonasuomy
go for it.


[5/12/2022 5:23 AM] tux_linux
ok


[5/12/2022 5:23 AM] tux_linux
let's see


[5/12/2022 5:24 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-B3D99.png


[5/12/2022 5:24 AM] nonasuomy
if it doesn't come back right away then that means it was set even lower than that


[5/12/2022 5:24 AM] tux_linux
or it wasn't set at all...


[5/12/2022 5:24 AM] nonasuomy
that too


[5/12/2022 5:27 AM] nonasuomy
I do everything like this as I loathe waiting around for someone to snipe the bid on you at the last second and a lot of stuff on ebay never sees the light of day for any bids they just go stale.


[5/12/2022 5:28 AM] nonasuomy
most are willing just to accept the make an offer.


[5/12/2022 5:29 AM] tux_linux
we'll see


[5/12/2022 5:46 AM] nonasuomy
Realize he will always have doubt that nobody will give him any bids on it so you have that in your corner he won’t want to lose you on it.

{Reactions}
👍 

[5/12/2022 5:53 AM] nonasuomy
Don’t feel shy to slap him with the same price again or lower than his counter offer if its above the min bid price. That is why you want to low ball it first below the min bid as they will try counter offer it higher but usually they counter offer the min bid as it feels weird going higher than that depending on the person.


[5/12/2022 5:55 AM] nonasuomy
If all else fails we just wait for another.

{Reactions}
👍 

[5/12/2022 8:03 PM] nonasuomy
Yay figured out something...

{Attachments}
/mnt/data/projects/git/conversations/media/message-412CE.txt


[5/12/2022 8:03 PM] nonasuomy
Got the SDCard booting again.


[5/12/2022 8:03 PM] nonasuomy
nice extended log as well.


[5/12/2022 8:04 PM] tux_linux
Ok awesome


[5/12/2022 8:04 PM] tux_linux
How?


[5/12/2022 8:05 PM] nonasuomy
by loading the rootfs


[5/12/2022 8:12 PM] tux_linux
Ok


[5/12/2022 8:48 PM] nonasuomy
Lucky I had a backup of uboot_new/old which I grabbed the loading command from then launched with that.

{Reactions}
👍 

[5/12/2022 8:56 PM] nonasuomy
Is this where we were copying our custom kernel to or was just at some random partition space?

```
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    286848 Bytes = 280.1 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK
```


[5/12/2022 8:57 PM] tux_linux
Kernel is at sector 2048


[5/12/2022 8:57 PM] tux_linux
The load address is a memory address


[5/12/2022 8:59 PM] nonasuomy
```
# cat /sys/module/rawdatatable/parameters/rawdata_param
MBR                             :0x00000000:0x00000400
uBoot                           :0x00000400:0x000bfc00
Boot Env                        :0x000c0000:0x00020000
Reserved1                       :0x000e0000:0x00020000
Normal Kernel                   :0x00100000:0x00400000
Normal Rootfs                   :0x00500000:0x00100000
Recovery Kernel                 :0x00600000:0x00400000
Reserved2                       :0x00a00000:0x00500000
Normal Boot Env                 :0x00f00000:0x00020000
Recovery Boot Env               :0x00f20000:0x00020000
Raw Data Table                  :0x00f40000:0x00020000
Info                            :0x00f60000:0x00020000
Id                              :0x00f80000:0x00020000
Reserved3                       :0x00fa0000:0x00060000
Boot Image                      :0x01000000:0x00100000
Waveform                        :0x01100000:0x00200000
LOG                             :0x01300000:0x00500000
```


[5/12/2022 8:59 PM] nonasuomy
so sector 2048 == Normal Kernel:0x00100000:0x00400000 ?


[5/12/2022 9:03 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/config-7CC13.gz


[5/12/2022 9:03 PM] nonasuomy
here's the original kernel config


[5/12/2022 9:07 PM] nonasuomy
If you compare this /proc/config.gz to the Kobo Touch A/B /proc/config.gz are they pretty close?


[5/12/2022 9:12 PM] tux_linux
Check yourself


[5/12/2022 9:12 PM] nonasuomy
I don't own an A/B


[5/12/2022 9:12 PM] tux_linux
Go in kernel repo -> kernel/config/config-n905b


[5/12/2022 9:13 PM] nonasuomy
did you modify that one?


[5/12/2022 9:13 PM] tux_linux
Yes
It's InkBox config


[5/12/2022 9:13 PM] szybet
you can show me the diffrences of these files


[5/12/2022 9:13 PM] szybet
and I can explain


[5/12/2022 9:14 PM] szybet
there was a nice GUI for diff


[5/12/2022 9:14 PM] szybet
i dont remember the name


[5/12/2022 9:34 PM] nonasuomy
https://www.nxp.com/docs/en/reference-manual/IMX50RM.pdf
PG# 2910 chart
6.5 Boot Devices (Internal Boot)
6.5.3 Expansion Device Support
```
md 0x53fd0004 1
53fd0004: d8200064    d. .
d8200064 = 32'b 1101 1000 0010 0000 0000 0000 0110 0100
echo "obase=2; ibase=16; D8200064" | bc
11011000001000000000000001100100
31=1 30=1 29=0 28=1 27=1 26=0 25=0 24=0 23=0 22=0 21=1 20=0 19=0 18=0 17=0 16=0 15=0 14=0 13=0 12=0 11=0 10=0 9=0 8=0 7=0 6=1 5=1 4=0 3=0 2=1 1=0 0=0
SRC_SBMR[25:24] = 0
BOOT_MODE[1:0]=0 => internal boot
eMMC normal boot
imx5 loads U-Boot from raw eMMC offset 2 sectors from the start (offset 1kiB from start of storage)
```


[5/12/2022 9:39 PM] nonasuomy
raw u-boot.imx 
```
dd if=/dev/mmcblkX bs=512 skip=2 count=1 | hexdump -vC
```


[5/12/2022 9:39 PM] nonasuomy
imx header should be there.


[5/12/2022 9:43 PM] nonasuomy
```
MX50_ARM2 U-Boot > md $loadaddr 0x80
00000000: e59ff01c e59ff01c e59ff01c e59ff01c    ................
00000010: e59ff01c e59ff01c e59ff01c e59ff01c    ................
00000020: e59ff01c 0000e0fc f801ffbc f801ffc0    ................
00000030: f801ffc4 f801ffc8 f801ffcc f801ffd0    ................
00000040: f801ffd4 f801ffd8 00000011 20296328    ............(c)
00000050: 79706f43 68676972 30322074 202c3031    Copyright 2010,
00000060: 65657246 6c616373 65532065 6f63696d    Freescale Semico
00000070: 6375646e 2c726f74 636e4920 6c41202e    nductor, Inc. Al
00000080: 6972206c 73746867 73657220 65767265    l rights reserve
00000090: 00002e64 402c00dd 00007bf9 00007d8b    d.....,@.{...}..
000000a0: 00007dc7 00008107 000080ab 00007fc9    .}..............
000000b0: 00007e71 0000822b 00008271 000082dd    q~..+...q.......
000000c0: 000028a5 00002aad 0000307f 000043c5    .(...*...0...C..
000000d0: 0000453d 000067e5 00007693 f8524a22    =E...g...v.."JR.
000000e0: 68000020 f00040c8 47700001 2301b510     ..h.@....pG...#
000000f0: 3c184c1d f854408b 68010020 4319b10a    .L.<.@T. ..h...C
00000100: 4399e000 bd106001 0594b5f0 4d16d516    ...C.`.........M
00000110: 3407f3c2 f3c23518 f8552681 b2d75020    ...4.5...&U. P..
00000120: c024f855 f04f00f6 fa0e0eff 40b7fe06    U.$...O........@
00000130: 0c0eea2c 070cea47 7024f845 d50b05d2    ,...G...E.$p....
00000140: 4c092201 408a3c30 0020f854 b10b6801    .".L0<.@T. ..h..
00000150: e0004311 60014391 4b03bdf0 f8533318    .C...C.`...K.3S.
00000160: f8400020 47702021 0000e4f4 68534aff     .@.! pG.....JSh
00000170: 0302f023 68136053 0320f023 68936013    #...S`.h#. ..`.h
00000180: 03fff023 4bfa6093 0380eb03 3021f853    #....`.K....S.!0
00000190: 4bf76093 eb033310 f8530380 61133021    .`.K.3....S.!0.a
000001a0: 33204bf3 0080eb03 0021f850 681060d0    .K 3....P.!..`.h
000001b0: 0030f040 68506010 0002f040 68106050    @.0..`Ph@...P`.h
```


[5/12/2022 9:43 PM] nonasuomy
```
000001c0: d0fc07c0 4aeb4770 f0436813 60134340    ....pG.J.hC.@C.`
000001d0: f0436853 60534340 f0236813 6013033f    ShC.@CS`.h#.?..`
000001e0: f0236853 6053033f 28083aac e8dfd21e    Sh#.?.S`.:.(....
000001f0: 2304f000 8a70523d b171bca4 d0162901    ...#=Rp...q..)..
MX50_ARM2 U-Boot >
```


[5/12/2022 9:49 PM] nonasuomy
Compile U-Boot
```
cd uboot
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j8 mx50_arm2_config
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j8
...
arm-none-linux-gnueabi/4.4.1/armv4t -lgcc -Map u-boot.map -o u-boot
arm-none-linux-gnueabi-objcopy -O srec u-boot u-boot.srec
arm-none-linux-gnueabi-objcopy --gap-fill=0xff -O binary u-boot u-boot.bin
```

{Reactions}
👍 

[5/12/2022 9:49 PM] nonasuomy
The worst thing about discord is it doesn't seem to search code tags very well 😦


[5/12/2022 9:50 PM] nonasuomy
You have to remember what you said around that point to get back to it.


[5/12/2022 10:09 PM] nonasuomy
Reads raw eMMC at offset 0x800 (in 512B block units) and it reads 0x1400 such blocks that is the Kernel. Then the ramdisk 0x2800 0x258 then jumps to it with bootm. They read uImage which wraps the kernel zImage and then read uImage which wraps the ramdisk two blobs and then they point the bootm command to both blobs to start kernel and provide pointer to ramdisk to the kernel.


[5/14/2022 12:59 AM] nonasuomy
```
MX50_ARM2 U-Boot > printenv
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000
bootcmd=mmc read 0 ${loadaddr} 0x800 0x1400;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258;bootm ${loadaddr} ${loadaddr_ramdisk} bootdev=0

Environment size: 387/131068 bytes
```


[5/14/2022 1:00 AM] tux_linux
yes?


[5/14/2022 1:01 AM] nonasuomy
Just putting the working Stock boot from SDCard  bootargs/bootcmd here case I break it again 😄

{Reactions}
👍 

[5/14/2022 1:02 AM] nonasuomy
Going to change init=/system/bin/sh to see what happens

{Reactions}
👍 

[5/14/2022 1:03 AM] tux_linux
please try our kernel with the ttymxc4 thing


[5/14/2022 1:08 AM] nonasuomy
ok


[5/14/2022 1:08 AM] nonasuomy
one sec.

{Reactions}
👍 

[5/14/2022 1:08 AM] nonasuomy
so all that I got from doing the prior thing was "init: cannot open '/initlogo.rle'"


[5/14/2022 1:15 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/custkern-083D9.txt


[5/14/2022 1:15 AM] nonasuomy
So it boots with those two lines now.


[5/14/2022 1:15 AM] nonasuomy
but dies with what looks like power issues


[5/14/2022 1:16 AM] tux_linux
YESSSSSSS


[5/14/2022 1:16 AM] tux_linux
Progress


[5/14/2022 1:17 AM] tux_linux
what's the cmdline in default system?


[5/14/2022 1:17 AM] nonasuomy
Sorry my brain is rusty what are you asking for?


[5/14/2022 1:18 AM] tux_linux
`cat /proc/cmdline`


[5/14/2022 1:18 AM] tux_linux
BTW this means we're done with the watchdog

{Reactions}
🥰 

[5/14/2022 1:19 AM] nonasuomy
do you want me to switch cards back to stock firmware to run that?


[5/14/2022 1:20 AM] tux_linux
yes


[5/14/2022 1:20 AM] tux_linux
sorry


[5/14/2022 1:22 AM] nonasuomy
```
root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000
```


[5/14/2022 1:22 AM] tux_linux
hmm okay, nothing interesting there it seems


[5/14/2022 1:22 AM] nonasuomy
What were you expecting to see there?


[5/14/2022 1:23 AM] nonasuomy
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000


[5/14/2022 1:23 AM] tux_linux
sometimes bootargs are in u-boot and other ones are in the kernel for some reason


[5/14/2022 1:23 AM] tux_linux
it fails to power the epdc up


[5/14/2022 1:59 AM] nonasuomy
Looks like it fails to find the data it needs from the eMMC


[5/14/2022 1:59 AM] nonasuomy
```
tps65180_display_enable fail to read vcom from eMMC. -1
```


[5/14/2022 3:59 AM] nonasuomy
Any ideas?


[5/14/2022 3:59 AM] tux_linux
Nope
Are you using the last kernel source tarball Sony provided?


[5/14/2022 4:00 AM] nonasuomy
where we write the kernel to is that within the first 26mb of the sdcard?


[5/14/2022 4:00 AM] tux_linux
Yes


[5/14/2022 4:01 AM] nonasuomy
I don't know if I remember this right but I think someone said that is where it gets the vcom settings from and other things.


[5/14/2022 4:01 AM] nonasuomy
so maybe we are overwriting?


[5/14/2022 4:04 AM] tux_linux
Maybe
But if it works with the stock firmware I have no idea why it is not there


[5/14/2022 4:04 AM] tux_linux
Hmm


[5/14/2022 4:05 AM] tux_linux
Restore first 26M to external SD and try to flash the kernel there again and boot it


[5/14/2022 4:12 AM] nonasuomy
Here is a comment in the forum not that the person knows directly what they are dealing with:
"One thing you should never mess with is the first 26MB of the internal flash device. There is a bunch of raw data hidden in it that cannot easily be restored and there are some folks on the forum that already bricked their devices (irreversibly!!)."


[5/14/2022 4:12 AM] nonasuomy
Is this the same with every ereader?


[5/14/2022 4:13 AM] tux_linux
No


[5/14/2022 4:13 AM] tux_linux
But often yes


[5/14/2022 4:23 AM] nonasuomy
Will try


[5/14/2022 4:24 AM] nonasuomy
the only other thing I can think of is ramdisk and our kernel have to match


[5/14/2022 4:25 AM] nonasuomy
The last message is actually this


[5/14/2022 4:25 AM] nonasuomy
```
Warning: unable to open an initial console.
Freeing init memory: 728K
Kernel panic - not syncing: Attempted to kill init!
```


[5/14/2022 4:27 AM] nonasuomy
Thoughts?


[5/14/2022 4:29 AM] nonasuomy
Maybe we should try to compile the kernel first without injecting busybox into it and see if it boots.


[5/14/2022 4:30 AM] nonasuomy
Would the warning there be because it was trying to open busybox


[5/14/2022 4:37 AM] tux_linux
The first warning is easy to fix
But it's not what's causing the kernel panic IMO


[5/14/2022 4:37 AM] tux_linux
You need to add ttymxc4 to your initrd root/dev


[5/14/2022 4:53 AM] nonasuomy
Which first one?


[5/14/2022 4:53 AM] nonasuomy
I just noticed this as well
```
Unpacking initramfs...
Initramfs unpacking failed: compression method gzip not configured
```


[5/14/2022 4:53 AM] nonasuomy
maybe that is where the vcom data is


[5/14/2022 4:56 AM] tux_linux
whooops


[5/14/2022 4:56 AM] tux_linux
but no, has nothing to do with it


[5/14/2022 4:57 AM] tux_linux
what's the general setup page of menuconfig looking like?


[5/14/2022 4:59 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/config-3A907


[5/14/2022 5:02 AM] nonasuomy
CONFIG_INITRAMFS_SOURCE="/home/nonasuomy/code/busybox/_install"


[5/14/2022 5:03 AM] nonasuomy
I guess that is why busybox won't load though 😄
CONFIG_INITRAMFS_SOURCE="/home/nonasuomy/code/busybox/_install"


[5/14/2022 5:06 AM] nonasuomy
Just a guess but because we set LZMA compression and turned GZIP off that we then need to set this? 
```
# CONFIG_INITRAMFS_COMPRESSION_LZMA is not set
```


[5/14/2022 5:07 AM] nonasuomy
Though above that it does say
```
CONFIG_INITRAMFS_COMPRESSION_NONE=y
```


[5/14/2022 5:08 AM] nonasuomy
so it should not technically be uncompressed but we never copied an intramfs to the card so maybe it's just looking at the existing one or is intramfs inside uImage?


[5/14/2022 5:10 AM] nonasuomy
How do you add ttymxc4 to your initrd root/dev ?


[5/14/2022 5:12 AM] nonasuomy
Interesting their stock kernel with no modifications is
```
Image Name:   Linux-2.6.35.3
Created:      Fri May 13 22:56:50 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    1669524 Bytes = 1630.39 KiB = 1.59 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```
1.59MB instead of what is on the device (2.2MB)


[5/14/2022 5:17 AM] nonasuomy
Is this because they also include busybox to the uImage?


[5/14/2022 5:25 AM] tux_linux
maybe


[5/14/2022 5:26 AM] tux_linux
what's `ls -shal /dev/ttymxc4` in the stock system?


[5/14/2022 5:29 AM] nonasuomy
I can't do any -shal after ls in adb shell


[5/14/2022 5:30 AM] tux_linux
can you launch busybox telnetd?


[5/14/2022 5:30 AM] tux_linux
or `ls -l` maybe?


[5/14/2022 5:30 AM] nonasuomy
nothing - works


[5/14/2022 5:31 AM] nonasuomy
only ls


[5/14/2022 5:31 AM] tux_linux
try busybox telnetd then


[5/14/2022 5:52 AM] nonasuomy
```
crw------- root     root     207,  20 2010-01-01 02:00 ttymxc4
```


[5/14/2022 5:53 AM] tux_linux
ok, so in `_install`, do `sudo mknod dev/ttymxc4 c 207 20`


[5/14/2022 5:54 AM] nonasuomy
from the busybox _install folder I run sudo mknod /dev/ttymxc4 c 207 20


[5/14/2022 5:54 AM] nonasuomy
?


[5/14/2022 5:54 AM] tux_linux
no


[5/14/2022 5:54 AM] tux_linux
`dev/ttymxc4`


[5/14/2022 5:54 AM] tux_linux
without the first slash


[5/14/2022 5:55 AM] tux_linux
if dev folder is not existing, create it


[5/14/2022 5:55 AM] tux_linux
in short:
```
mknod dev/console c 5 1
mknod dev/null c 1 3
mknod dev/ttymxc4 c 207 20
```


[5/14/2022 5:59 AM] nonasuomy
```
~/code/busybox/_install/dev$ ls -l
total 0
crw-r--r-- 1 root root   5,  1 May 13 23:53 console
crw-r--r-- 1 root root   1,  3 May 13 23:54 null
crw-r--r-- 1 root root 207, 20 May 13 23:54 ttymxc4
```


[5/14/2022 5:59 AM] nonasuomy
look ok?


[5/14/2022 6:01 AM] nonasuomy
Note nothing is in _install any more for some reason should something have been there beside the dev we put there?


[5/14/2022 6:02 AM] tux_linux
why is there nothing in _install anymore?


[5/14/2022 6:02 AM] nonasuomy
what should be in there?


[5/14/2022 6:02 AM] tux_linux
your busybox initrd


[5/14/2022 6:03 AM] nonasuomy
I compiled busybox earlier would it have purged that directory for some reason?


[5/14/2022 6:04 AM] tux_linux
yes maybe


[5/14/2022 6:04 AM] tux_linux
did you compile with `make install`?


[5/14/2022 6:09 AM] nonasuomy
I did this now and it's all back
```
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j8 install
upx --ultra-brute _install/bin/busybox
```


[5/14/2022 6:09 AM] tux_linux
ok


[5/14/2022 6:10 AM] nonasuomy
dev was still there after doing that


[5/14/2022 6:10 AM] tux_linux
you can recompile the kernel


[5/14/2022 6:10 AM] nonasuomy
ok


[5/14/2022 6:16 AM] nonasuomy
hmm that doesn't look right
```
  UIMAGE  arch/arm/boot/uImage
Image Name:   Linux-2.6.35.3
Created:      Sat May 14 00:10:45 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    1673520 Bytes = 1634.30 KiB = 1.60 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
``` 
I did enable that lzma compression on initrams though.


[5/14/2022 6:17 AM] tux_linux
what's `CONFIG_INITRAMFS_SOURCE`?


[5/14/2022 6:17 AM] nonasuomy
Maybe we could have just done that instead of stripping everything out


[5/14/2022 6:17 AM] nonasuomy
Config above


[5/14/2022 6:18 AM] tux_linux
ok it's fine


[5/14/2022 6:18 AM] tux_linux
try it


[5/14/2022 6:18 AM] nonasuomy
My only change was CONFIG_INITRAMFS_COMPRESSION_LZMA=y


[5/14/2022 6:19 AM] tux_linux
it's good


[5/14/2022 6:19 AM] tux_linux
the reason why I didn't want to enable it before was the watchdog


[5/14/2022 6:19 AM] nonasuomy
gotcha

{Reactions}
👍 

[5/14/2022 6:25 AM] nonasuomy
So essentially we should have left gzip support on?


[5/14/2022 6:28 AM] nonasuomy
this is a slow sd card will be 17mins


[5/14/2022 6:34 AM] tux_linux
why 17mins?


[5/14/2022 6:34 AM] tux_linux
no, lzma is fine with the watchdog problem solved


[5/14/2022 6:34 AM] nonasuomy
no I meant for the error in the console about it not finding gzip


[5/14/2022 6:35 AM] tux_linux
oh, I don't know


[5/14/2022 6:35 AM] tux_linux
we will see


[5/14/2022 6:35 AM] nonasuomy
.


[5/14/2022 6:37 AM] nonasuomy
Writing the full eMMC backup to the SD again just in case.


[5/14/2022 6:39 AM] tux_linux
why the full backup?


[5/14/2022 6:40 AM] tux_linux
```
dd if=backup.img of=/dev/mmcblk0 bs=1M count=26
```
or something like that should work (don't remember the exact sector numbers)?


[5/14/2022 6:42 AM] nonasuomy
In case we wrote over the vcom data with our extra large uImage that one time.


[5/14/2022 6:43 AM] nonasuomy
```
dd if=uImage of=/dev/mmcblk0 bs=512 seek=2048
sync
```


[5/14/2022 6:44 AM] tux_linux
that is ok


[5/14/2022 6:54 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/log-36AAE.txt


[5/14/2022 6:56 AM] tux_linux
it looks like it hasn't extracted the initramfs


[5/14/2022 6:57 AM] tux_linux
but you can't load the existing initramfs in u-boot on top of that


[5/14/2022 6:57 AM] tux_linux
remove it from bootcmd


[5/14/2022 6:59 AM] nonasuomy
```
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000
bootcmd=mmc read 0 ${loadaddr} 0x800 0x1400;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258;bootm ${loadaddr} ${loadaddr_ramdisk} bootdev=0
```


[5/14/2022 6:59 AM] tux_linux
```
bootm ${loadaddr} ${loadaddr_ramdisk} bootdev=0
```
remove that part


[5/14/2022 7:00 AM] tux_linux
then saveenv


[5/14/2022 7:01 AM] nonasuomy
so 
```
setenv bootcmd 'mmc read 0 ${loadaddr} 0x800 0x1400;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258'
saveenv
```


[5/14/2022 7:01 AM] tux_linux
no


[5/14/2022 7:02 AM] tux_linux
```
setenv bootcmd mmc read 0 ${loadaddr} 0x800 0x1400\;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258
```


[5/14/2022 7:02 AM] nonasuomy
good catch bad paste.


[5/14/2022 7:05 AM] nonasuomy
hmm something weird can't trigger uboot command prompt


[5/14/2022 7:11 AM] nonasuomy
got it


[5/14/2022 7:11 AM] nonasuomy
```
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK

MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
MX50_ARM2 U-Boot >
```


[5/14/2022 7:11 AM] nonasuomy
no longer loads the kernel now


[5/14/2022 7:18 AM] nonasuomy
any ideas?


[5/14/2022 7:20 AM] nonasuomy
note we removed bootm but I tried to just run it and got the same error.


[5/14/2022 7:20 AM] tux_linux
what's the env?


[5/14/2022 7:21 AM] tux_linux
`printenv`


[5/14/2022 7:22 AM] nonasuomy
```
MX50_ARM2 U-Boot > printenv
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000
bootcmd=mmc read 0 0x70800000 0x800 0x1400;mmc read 0 0x70C00000 0x2800 0x258

Environment size: 329/131068 bytes
```


[5/14/2022 7:23 AM] nonasuomy
should init be something else related to busybox now?


[5/14/2022 7:31 AM] nonasuomy
Does that look ok?


[5/14/2022 3:08 PM] nonasuomy
How would we extract their kernel and decompress it to dissect some things?


[5/14/2022 3:26 PM] tux_linux
No


[5/14/2022 3:27 PM] tux_linux
You need to add \\;bootm


[5/14/2022 3:30 PM] nonasuomy
```
setenv bootcmd mmc read 0 ${loadaddr} 0x800 0x1400\;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258\;bootm
```


[5/14/2022 3:33 PM] nonasuomy
Note I looked through the kernel source and all these log messages were added by Sony dev as to why we wouldn’t find them googling for them.


[5/14/2022 3:34 PM] nonasuomy
If I wanted to pull their uImage out of my eMMC backup what dd skip etc command would I use?


[5/14/2022 3:36 PM] tux_linux
maybe `dd if=emmc.img of=kernel.bin bs=512 skip=2048 count=3072`
but don't expect a lot


[5/14/2022 3:58 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/bootlog-7AFD8.txt


[5/14/2022 4:04 PM] tux_linux
go into kernel config


[5/14/2022 4:09 PM] tux_linux
Device drivers -> Block devices

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-B252B.png


[5/14/2022 4:15 PM] nonasuomy
ugh machine rebooted last night and I think it corrupted the vm will be a bit 😦


[5/14/2022 4:15 PM] nonasuomy
getting kernel panic on vm boot.


[5/14/2022 7:04 PM] nonasuomy
Ok wiped out a physical machine and installed debian 11 resetting up build env. to have less problems hopefully 😄


[5/14/2022 7:45 PM] nonasuomy
https://github.com/onyx-intl/toolchain/blob/master/imx508/gcc-4.4.4-glibc-2.11.1-multilib-1.0.tar.gz

{Embed}
https://github.com/onyx-intl/toolchain/blob/master/imx508/gcc-4.4.4-glibc-2.11.1-multilib-1.0.tar.gz
toolchain/gcc-4.4.4-glibc-2.11.1-multilib-1.0.tar.gz at master · on...
Toolchain for Onyx devices. Contribute to onyx-intl/toolchain development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/toolchain-AF85F


[5/14/2022 7:46 PM] nonasuomy
https://github.com/onyx-intl/toolchain/blob/master/imx508/sdk_imx508.tar.gz

{Embed}
https://github.com/onyx-intl/toolchain/blob/master/imx508/sdk_imx508.tar.gz
toolchain/sdk_imx508.tar.gz at master · onyx-intl/toolchain
Toolchain for Onyx devices. Contribute to onyx-intl/toolchain development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/toolchain-AF85F


[5/14/2022 9:28 PM] tux_linux
Did you succeed with menuconfig?


[5/14/2022 9:29 PM] nonasuomy
I didn't realize how much you have to do to get a compile going haha still working

{Reactions}
👍 

[5/14/2022 9:29 PM] nonasuomy
trying to get busybox to compile


[5/14/2022 9:29 PM] nonasuomy
networking/libiproute/ipaddress.c:345: error: 'IFA_F_DADFAILED' undeclared (first use in this function)


[5/14/2022 9:29 PM] tux_linux
are you using the same compiler? (`arm-none-linux-gnueabi`)?


[5/14/2022 9:29 PM] nonasuomy
yes


[5/14/2022 9:30 PM] nonasuomy
```
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j8 install
```


[5/14/2022 9:30 PM] tux_linux
and same busybox tarball?


[5/14/2022 9:30 PM] nonasuomy
nope 4.4.4


[5/14/2022 9:30 PM] tux_linux
**busybox** tarball


[5/14/2022 9:30 PM] nonasuomy
sorry


[5/14/2022 9:30 PM] nonasuomy
yes same 1.4.1


[5/14/2022 9:31 PM] tux_linux
then it's not the same


[5/14/2022 9:31 PM] tux_linux
then it's not the same either


[5/14/2022 9:31 PM] tux_linux
busybox 1.4.1 was released in 2007


[5/14/2022 9:31 PM] nonasuomy
sorry one moment

{Reactions}
👍 

[5/14/2022 9:32 PM] nonasuomy
my heads in the clouds.


[5/14/2022 9:32 PM] nonasuomy
https://busybox.net/downloads/busybox-1.34.1.tar.bz2


[5/14/2022 9:32 PM] tux_linux
ok that one is ok


[5/14/2022 11:03 PM] nonasuomy
did you get this error before Failed: -Wl,--start-group -lcrypt -lm -lresolv -lrt   -Wl,--end-group


[5/14/2022 11:05 PM] tux_linux
no


[5/14/2022 11:40 PM] nonasuomy
which version of busybox do you use?


[5/14/2022 11:40 PM] tux_linux
1.32.1 in InkBox
I want to update it soon


[5/14/2022 11:40 PM] nonasuomy
what version will you goto?


[5/14/2022 11:41 PM] tux_linux
latest stable


[5/14/2022 11:41 PM] nonasuomy
so 1.34.1


[5/14/2022 11:41 PM] szybet
you can update qt libs too...


[5/14/2022 11:41 PM] tux_linux
probably


[5/14/2022 11:41 PM] tux_linux
yeah
although it will be more complicated


[5/14/2022 11:41 PM] szybet
becouse?


[5/14/2022 11:42 PM] tux_linux
compiling qt is way harder than compiling busybox


[5/14/2022 11:42 PM] szybet
becouse?


[5/14/2022 11:42 PM] tux_linux
also I need to recompile the platform plugins


[5/14/2022 11:42 PM] szybet
and?


[5/14/2022 11:42 PM] tux_linux
*because

you never compiled qt from source?


[5/14/2022 11:42 PM] nonasuomy
I feel like I'm watching dude where's my car right now


[5/14/2022 11:43 PM] szybet
i did, and i did that no one else needs to


[5/14/2022 11:43 PM] szybet
https://github.com/Szybet/kobo-nia-audio/blob/main/apps-on-kobo/qt-setup.md

{Embed}
https://github.com/Szybet/kobo-nia-audio/blob/main/apps-on-kobo/qt-setup.md
kobo-nia-audio/qt-setup.md at main · Szybet/kobo-nia-audio
Kobo nia ereader with audio added. Contribute to Szybet/kobo-nia-audio development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/kobo-nia-audio-4BDFE


[5/14/2022 11:43 PM] szybet
everything described


[5/14/2022 11:43 PM] szybet
maybe the glo platform plugin thing not


[5/14/2022 11:43 PM] tux_linux
nice
you never shared it


[5/14/2022 11:43 PM] szybet
i did this 4 times

{Reactions}
😅 

[5/14/2022 11:43 PM] tux_linux
?...


[5/14/2022 11:43 PM] szybet
😆


[5/14/2022 11:44 PM] tux_linux
then i forgot


[5/14/2022 11:44 PM] szybet


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-78274.png


[5/14/2022 11:44 PM] szybet
yestarday too


[5/14/2022 11:44 PM] tux_linux
but you compiled 5.15.2


[5/14/2022 11:45 PM] szybet
whats the problem with that


[5/14/2022 11:45 PM] tux_linux
well now why do we need to update the libs?


[5/14/2022 11:45 PM] szybet
becouse my compiled libs aren't working with yours


[5/14/2022 11:46 PM] tux_linux
did you use the older toolchain?


[5/14/2022 11:46 PM] szybet
i used koxtoolchain - kobo


[5/14/2022 11:46 PM] szybet
self generated


[5/14/2022 11:46 PM] tux_linux
ok
then you need to switch to an older commit


[5/14/2022 11:46 PM] szybet
why


[5/14/2022 11:46 PM] tux_linux
to make your libs compatible


[5/14/2022 11:47 PM] szybet
we were talking about updating the libs


[5/14/2022 11:47 PM] szybet
not about switching to older commits


[5/14/2022 11:48 PM] tux_linux
if you generated this toolchain before may 15 2021 it would have worked (it was building gcc 7.5.0 at the time)
https://github.com/koreader/koxtoolchain/commit/688c830b91b3944fca3031ff447044ce7477c47a

{Embed}
https://github.com/koreader/koxtoolchain/commit/688c830b91b3944fca3031ff447044ce7477c47a
Resync ref scripts · koreader/koxtoolchain@688c830
/mnt/data/projects/git/conversations/media/688c830b91b3944fca3031ff447044ce7477c47a-B3608


[5/14/2022 11:48 PM] tux_linux
but they could benefit from an update


[5/14/2022 11:48 PM] szybet
what didn't worked


[5/14/2022 11:48 PM] tux_linux
I mean, your binary would have been compatible with the existing libs


[5/14/2022 11:49 PM] szybet
here


[5/14/2022 11:49 PM] szybet
i know but it would be cool if i didn't need to do that


[5/14/2022 11:50 PM] tux_linux
well, if you want to update them now, clone https://github.com/Kobo-InkBox/gui-bundle and update the libs in content/qt

{Embed}
https://github.com/Kobo-InkBox/gui-bundle
GitHub - Kobo-InkBox/gui-bundle: InkBox GUI bundle contents and gen...
InkBox GUI bundle contents and generation script. Contribute to Kobo-InkBox/gui-bundle development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/gui-bundle-0D0A1


[5/14/2022 11:51 PM] szybet
it would break thing for you propably


[5/14/2022 11:51 PM] tux_linux
why?


[5/14/2022 11:51 PM] szybet
your qt dev setup


[5/14/2022 11:52 PM] tux_linux
no, if it's the same directory structure, it should work


[5/14/2022 11:52 PM] tux_linux
qt usually installs itself in ~/qt-bin


[5/14/2022 11:52 PM] tux_linux
then you can just move out the required libs to update them


[5/14/2022 11:53 PM] szybet
without the updated toolchain, can you use this qt lib?


[5/14/2022 11:53 PM] tux_linux
the toolchain has nothing to do with it


[5/14/2022 11:54 PM] tux_linux
did what you compile with newer koxtoolchain work on the kobo?


[5/14/2022 11:54 PM] szybet
yes of course


[5/14/2022 11:55 PM] tux_linux
then, why wouldn't it work with the updated libs


[5/14/2022 11:56 PM] szybet
becouse it sounds to easy


[5/14/2022 11:56 PM] szybet
it gets suspicious


[5/15/2022 1:44 AM] nonasuomy
In case you deal with this updating to 1.34.1

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-A8F8E.png


[5/15/2022 1:59 AM] nonasuomy
No idea how to deal with this broken things Failed lcrypt lm lresolv lrt


[5/15/2022 1:59 AM] nonasuomy
lcrypt apparently is now libxcrypt or something.


[5/15/2022 2:08 AM] nonasuomy
Wonder if unstable fixed all these issues


[5/15/2022 2:24 AM] tux_linux
it would be unlikely


[5/15/2022 2:24 AM] tux_linux
the problem is probably your debian system


[5/15/2022 2:25 AM] tux_linux
for some reason


[5/15/2022 2:27 AM] nonasuomy
This is a fresh build and this issue is listed all over the place.


[5/15/2022 2:27 AM] tux_linux
oh ok


[5/15/2022 2:28 AM] nonasuomy
I just think its far too complex for me to patch it.


[5/15/2022 2:28 AM] tux_linux
then something went really wrong on their side


[5/15/2022 2:28 AM] tux_linux
you can just use 1.32.1 meanwhile


[5/15/2022 2:29 AM] nonasuomy
I think your compressed config probably excluded all the broken things


[5/15/2022 2:30 AM] nonasuomy
people say that busybox is almost uncomplilable with out musl


[5/15/2022 2:31 AM] nonasuomy
in its current state.


[5/15/2022 2:31 AM] tux_linux
maybe you can try with a newer compiler


[5/15/2022 2:31 AM] tux_linux
devices are more tolerant to them when it's not kernel things


[5/15/2022 2:32 AM] tux_linux
arm-nickel-linux-gnueabihf- for example


[5/15/2022 2:32 AM] tux_linux
or armv7l-linux-musleabihf-


[5/15/2022 2:32 AM] tux_linux
all there in `[kernel repo]/toolchain`


[5/15/2022 2:34 AM] nonasuomy
just to note nothing fixed in 1.35.0 😄


[5/15/2022 2:37 AM] tux_linux
yay...


[5/15/2022 2:57 AM] nonasuomy
was I supposed to apply some imx5 config to busybox?


[5/15/2022 3:02 AM] nonasuomy
this is all that I'm doing using the same 4.4.1 as you sent last time


[5/15/2022 3:03 AM] nonasuomy
```
Add config https://discordapp.com/channels/809205711778480158/966554812567130152/970116956122415154

make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- menuconfig
Make sure this is on [*] Build static binary (no shared libs)

make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc)

make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc) install

upx --ultra-brute _install/bin/busybox
```


[5/15/2022 3:10 AM] nonasuomy
I'm going with fresh system is missing something no idea what


[5/15/2022 3:11 AM] nonasuomy
I tried your shrunken config no go


[5/15/2022 3:11 AM] nonasuomy
tried the build before that one no go


[5/15/2022 3:12 AM] nonasuomy
Going to try 1.32.1 and it is going to do the same thing and I'm going to go crazy


[5/15/2022 3:17 AM] tux_linux
I can build it for you at this point


[5/15/2022 3:20 AM] nonasuomy
echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/snap/bin:/home/nonasuomy/code/arm-2009q3-67-arm-none-linux-gnueabi-i686-pc-linux-gnu/arm-2009q3/bin


[5/15/2022 3:20 AM] nonasuomy
how would that work?


[5/15/2022 3:22 AM] nonasuomy
like you build busybox then I dump it in _install and then compile the kernel or more to it then that?


[5/15/2022 3:28 AM] nonasuomy
yup this system is defo missing something went back to 1.32.1 and still same error


[5/15/2022 3:32 AM] nonasuomy
I just noticed we were using 4.8 gcc to compile this first


[5/15/2022 3:32 AM] nonasuomy
maybe it has the issues fixed


[5/15/2022 3:32 AM] nonasuomy
then we were just always using the same build files after that and never cleaning the directory


[5/15/2022 3:33 AM] nonasuomy
maybe that is the key


[5/15/2022 3:34 AM] nonasuomy
If you make a clean directory of 1.34.1 busybox and compile it with 4.4.1 does it work?


[5/15/2022 3:35 AM] ninuje
Not a GCC issue


[5/15/2022 3:35 AM] ninuje
Kernel (headers) are too old


[5/15/2022 3:36 AM] nonasuomy
?


[5/15/2022 3:36 AM] ninuje
Which is annoying, true, but easily remedied for simple constants like those


[5/15/2022 3:37 AM] ninuje
c.f., https://github.com/koreader/koxtoolchain/blob/97e4dcd6e9e20c90062038dc6e2fb18adc0da40d/refs/x-compile.sh#L1944

{Embed}
https://github.com/koreader/koxtoolchain/blob/97e4dcd6e9e20c90062038dc6e2fb18adc0da40d/refs/x-compile.sh
koxtoolchain/x-compile.sh at 97e4dcd6e9e20c90062038dc6e2fb18adc0da4...
Build script for various toolchains used by KOReader - koxtoolchain/x-compile.sh at 97e4dcd6e9e20c90062038dc6e2fb18adc0da40d · koreader/koxtoolchain
/mnt/data/projects/git/conversations/media/koxtoolchain-76D00


[5/15/2022 3:37 AM] ninuje
(Not the same exact issue, but close enough)


[5/15/2022 3:38 AM] nonasuomy
How do you fix it?


[5/15/2022 3:40 AM] ninuje
We may not actually be talking about the same thing. I'm talking about the `ipaddress` applet build issues on old kernel headers


[5/15/2022 3:40 AM] ninuje
I have no idea what else you may be talking about since you haven't posted any build logs


[5/15/2022 3:41 AM] nonasuomy
.


[5/15/2022 3:41 AM] ninuje
That's not a build log 😉


[5/15/2022 3:42 AM] ninuje
(verbose, ideally)


[5/15/2022 3:42 AM] ninuje
(pass `V=1` to `make`)


[5/15/2022 3:44 AM] nonasuomy
https://pastebin.com/raw/HtSeAFDn


[5/15/2022 3:44 AM] nonasuomy
I'll do that next but for now here it is


[5/15/2022 3:45 AM] ninuje
Actual error being `sync.c:(.text.sync_main+0x5c): undefined reference to `syncfs'`


[5/15/2022 3:45 AM] ninuje
Because `syncfs() first appeared in Linux 2.6.39; library support was added to glibc in version 2.14.`


[5/15/2022 3:45 AM] ninuje
So sayeth `man syncfs`


[5/15/2022 3:46 AM] nonasuomy
Someone said to turn sync off to fix that


[5/15/2022 3:46 AM] ninuje
Stuff.. kinda relies on the sync applet being there.


[5/15/2022 3:46 AM] nonasuomy
but then you no longer have sync


[5/15/2022 3:47 AM] nonasuomy
So I didn't really know what to do after that


[5/15/2022 3:48 AM] ninuje
```
//config:config FEATURE_SYNC_FANCY
//config:    bool "Enable -d and -f flags (requires syncfs(2) in libc)"
```


[5/15/2022 3:48 AM] ninuje
Disable that in your bb config


[5/15/2022 3:51 AM] nonasuomy
[ ]   Enable -d and -f flags (requires syncfs(2) in libc)


[5/15/2022 3:51 AM] ninuje
Something else is toggling FSYNC support, then


[5/15/2022 3:52 AM] ninuje
Don't have a bb source tree checked out rn


[5/15/2022 3:52 AM] ninuje
ripgrep is your friend


[5/15/2022 3:52 AM] nonasuomy
Just strolls in and fixes all my problems


[5/15/2022 3:53 AM] nonasuomy
I struggled with that the whole day.

{Reactions}
🙃 

[5/15/2022 3:53 AM] ninuje
Misread the source actually, `ENABLE_FSYNC` does what it says on the tin, unrelated


[5/15/2022 3:53 AM] ninuje
So nevermind that last bit ;p


[5/15/2022 3:53 AM] ninuje
ripgrep is still your friend, though ;p


[5/15/2022 3:55 AM] nonasuomy
I usually just use / in menuconfig and the help button to make sure I'm at the right one haha.


[5/15/2022 3:55 AM] nonasuomy
slower but works


[5/15/2022 3:56 AM] ninuje
I meant for build issues in general


[5/15/2022 3:57 AM] ninuje
The search key is indeed your other friend when looking for a setting by its flag name in kconfig 😉


[5/15/2022 3:57 AM] nonasuomy
oh so how do you use ripgrep?


[5/15/2022 3:57 AM] nonasuomy
to solve build issues?


[5/15/2022 3:57 AM] ninuje
It's grep, but faster ;p


[5/15/2022 3:57 AM] tux_linux
Doesn't rgrep do the same thing (or grep -r)?


[5/15/2022 3:57 AM] ninuje
So grep the offending function/constant/whatever to locate it in the sources, then look at the context around that piece of code


[5/15/2022 3:58 AM] ninuje
It's a from-scratch grep implementation in rust


[5/15/2022 3:59 AM] tux_linux
Ah


[5/15/2022 3:59 AM] tux_linux
Nice


[5/15/2022 3:59 AM] tux_linux
@NonaSuomy I will compile this damn busybox for you


[5/15/2022 3:59 AM] nonasuomy
no its ok


[5/15/2022 3:59 AM] nonasuomy
they fixed it for me


[5/15/2022 3:59 AM] nonasuomy
@NiLuJe


[5/15/2022 3:59 AM] tux_linux
Ok, I misunderstood then


[5/15/2022 3:59 AM] tux_linux
Good


[5/15/2022 4:00 AM] tux_linux
Thanks NiLuJe

{Reactions}
😍 👍 

[5/15/2022 4:01 AM] nonasuomy
Years off my life right there.


[5/15/2022 4:02 AM] ninuje
That's cross-compilation for you.

{Reactions}
😅 

[5/15/2022 4:02 AM] ninuje
The script I linked to above is full of my ranting about that.

{Reactions}
😂 (2) 

[5/15/2022 4:03 AM] nonasuomy
I'm sure it does amazing things as I was confused just looking at it all 😄


[5/15/2022 4:03 AM] tux_linux
I've given up on cross compilation on my side; I just use an arm vm


[5/15/2022 4:03 AM] tux_linux
No matter the time


[5/15/2022 4:03 AM] ninuje
Not really, it just builds the stuff I ship in my various packages


[5/15/2022 4:03 AM] tux_linux
It will always be less than the time required to set up the cross compile 😉😂


[5/15/2022 4:04 AM] ninuje
Stuff is slightly less painful the newer the target kernel & libc are


[5/15/2022 4:04 AM] ninuje
And the less cmake is involved ;p


[5/15/2022 4:05 AM] nonasuomy
@NiLuJe at any time did anyone on the koreader team get a build of prstux by chance or was that dude that built it the only one that ever had it working?


[5/15/2022 4:05 AM] nonasuomy
(talking about the os image)


[5/15/2022 4:05 AM] ninuje
He was probably the only user, yeah

{Reactions}
😬 

[5/15/2022 4:06 AM] ninuje
Might have been some other guy, but I would count the target audience on the fingers of one hand at best


[5/15/2022 4:06 AM] nonasuomy
I would like to find anyone at all. The guy that made it was zero help


[5/15/2022 4:06 AM] nonasuomy
said he forgot everything and said he wouldn't help.


[5/15/2022 4:07 AM] ninuje
Check the PRs & issues that touch the `frontend/device/sony-prstux` path


[5/15/2022 4:07 AM] nonasuomy
the code he has online is not complete.


[5/15/2022 4:07 AM] nonasuomy
missing kernel and other vital things.


[5/15/2022 4:08 AM] nonasuomy
would love to get that running just to poke him with it haha.


[5/15/2022 4:09 AM] nonasuomy
I only found a few comments where he was talking with you or maybe one of the build maintainers but nobody that actually was using it.


[5/15/2022 4:10 AM] nonasuomy
and all he said to them was that he has no time to fix things. haha


[5/15/2022 4:10 AM] nonasuomy
I sense a theme...


[5/15/2022 4:16 AM] nonasuomy
@NiLuJe the ip problem you were talking about or this is the same fix?


[5/15/2022 4:17 AM] nonasuomy
I don't remember doing this before but it did work then to get the next error


[5/15/2022 4:19 AM] nonasuomy
(wondering if there is a better just turn xyz off than modifying the source)


[5/15/2022 4:21 AM] nonasuomy
I got that fix from here if you want to see the full error https://blog.csdn.net/qq_16126823/article/details/121891466

Just to note google translate brakes the page and sends you to their homepage or something weird.

{Embed}
https://blog.csdn.net/qq_16126823/article/details/121891466
制作可以从SD卡加载文件系统的流程_qq_16126823的博客-CSDN博客_sd卡分区
环境操作平台：UBuntu18.04 64位目标平台：Linux 2.6.35.7 ARM Cortex-A(arm v7)编译工具：arm-2009q3准备工作下载busybox-1.34.1.tar.bz2源码https://busybox.net/downloads/一张SD卡一、制作根文件系统1、解压busybox-1.34.1.tar.bz2源，并进入到源码中tar -jxvf busybox-1.34.1.tar.bz2cd busybox-1.34.12、修改Makef


[5/15/2022 4:21 AM] tux_linux
Maybe there is something to look at in internet archive


[5/15/2022 4:23 AM] nonasuomy
I believe he got it working for himself then he attempted to put an automated build process together for everyone else then gave up halfway through.


[5/15/2022 4:24 AM] nonasuomy
its basically just missing the kernel and the ramdisk ramfs stuff I think.


[5/15/2022 4:25 AM] tux_linux
hmm


[5/15/2022 4:28 AM] nonasuomy
Hopefully we get InkBox running then we will understand more about the process then hopefully it will be a breeze right... 😅


[5/15/2022 4:28 AM] tux_linux
yep


[5/15/2022 4:31 AM] nonasuomy
There may even be some tips there to to getting stuff supported in InkBox as well that he already figured out. I noticed a few scripts that had some things in it about hardware management.


[5/15/2022 4:32 AM] nonasuomy
Sleep functions and such


[5/15/2022 4:32 AM] tux_linux
In any case, this device earns the no. 1 price for the most complicated, convoluted, nonsensical, and painful port ever


[5/15/2022 4:33 AM] nonasuomy
I pretty sure you just spelled S O N Y


[5/15/2022 4:33 AM] tux_linux
Even porting to Kindle is easier... like... something's wrong 😂


[5/15/2022 4:35 AM] nonasuomy
complicationS cOnvoluted Nonsensical painfullY ported.


[5/15/2022 4:35 AM] tux_linux
n o i c e


[5/15/2022 4:35 AM] tux_linux
n o y s


[5/15/2022 4:35 AM] nonasuomy
haha


[5/15/2022 4:37 AM] nonasuomy
Now will the kernel compile 😄


[5/15/2022 4:58 AM] nonasuomy
I totally forget what we were going to do next but
```
  UIMAGE  arch/arm/boot/uImage
Image Name:   Linux-2.6.35.3
Created:      Sat May 14 22:56:43 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    2271056 Bytes = 2217.83 KiB = 2.17 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```

{Reactions}
🥳 (2) 

[5/15/2022 4:59 AM] tux_linux
just try to run it


[5/15/2022 5:00 AM] nonasuomy
I'm going to lurk up a bit as I think you told me to try something first.


[5/15/2022 5:04 AM] nonasuomy
^


[5/15/2022 5:04 AM] tux_linux
oh yes that


[5/15/2022 5:17 AM] nonasuomy
Is this still valid?


[5/15/2022 5:17 AM] tux_linux
yes, if it has been erased


[5/15/2022 5:20 AM] nonasuomy
(fresh os on fresh system)


[5/15/2022 5:20 AM] tux_linux
yes


[5/15/2022 5:20 AM] nonasuomy
My VM got corrupted last night


[5/15/2022 5:20 AM] tux_linux
yeah, so do it


[5/15/2022 5:20 AM] nonasuomy
kk


[5/15/2022 5:23 AM] nonasuomy
When I add that stuff now that I already compiled "make install" can I just do that again and it will included those additions or have to clean


[5/15/2022 5:24 AM] tux_linux
?


[5/15/2022 5:24 AM] nonasuomy
oh does the kernel compile process grab that _install folder and it has nothing to do with the busybox make install


[5/15/2022 5:25 AM] tux_linux
it just grabs the folder


[5/15/2022 5:25 AM] tux_linux
it doesn't care about what's outside it


[5/15/2022 5:25 AM] tux_linux
don't forget to create device nodes


[5/15/2022 5:25 AM] nonasuomy
just did them

{Reactions}
👍 

[5/15/2022 5:26 AM] nonasuomy
so just 
```
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc) uImage
```


[5/15/2022 5:26 AM] nonasuomy
and all that stuff will be added in


[5/15/2022 5:26 AM] tux_linux
yes


[5/15/2022 5:31 AM] nonasuomy
Just saw these fly by on the compile console
```
  CC      drivers/regulator/tps65180-regulator.o
  CC      net/socket.o
drivers/regulator/tps65180-regulator.c: In function 'tps65180_vcom_get_voltage':
drivers/regulator/tps65180-regulator.c:838: warning: 'vcomValue' may be used uninitialized in this function
```


[5/15/2022 5:31 AM] tux_linux
hmm hmm


[5/15/2022 5:32 AM] tux_linux
GREAT job sony


[5/15/2022 5:33 AM] nonasuomy
Maybe that will help find our issue location later


[5/15/2022 5:34 AM] nonasuomy
Never ran UPX but were pretty close to the stock uImage size now.

Data Size:    2291748 Bytes = 2238.04 KiB = 2.19 MiB


[5/15/2022 5:38 AM] nonasuomy
When I ran this against the eMMC backup I got this with mkimage:
```
~/code$ mkimage -l kernel.bin 
GP Header: Size 27051956 LoadAddr c62947b6
```
when I run it against a uImage that we compiled I get:
```
~/code$ mkimage -l uImage
Image Name:   Linux-2.6.35.3
Created:      Sat May 14 00:10:45 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    1673520 Bytes = 1634.30 KiB = 1.60 MiB
Load Address: 70008000
Entry Point:  70008000
```


[5/15/2022 5:39 AM] nonasuomy
Why do they not output the same information?


[5/15/2022 5:39 AM] tux_linux
because kernel.bin probably contains other things


[5/15/2022 5:40 AM] tux_linux
and c62947b6 as a load address makes absolutely no sense


[5/15/2022 5:40 AM] nonasuomy
so probably not the right dd values?


[5/15/2022 5:42 AM] tux_linux
yeah


[5/15/2022 5:42 AM] tux_linux
i don't know


[5/15/2022 5:45 AM] nonasuomy
Is there a safer way to insert the uImage into eMMC backup where the size of the uImage wouldn't matter?


[5/15/2022 5:45 AM] tux_linux
not really


[5/15/2022 5:46 AM] tux_linux
not to my knowledge


[5/15/2022 5:46 AM] nonasuomy
basically like using 7zip manager to extract the current one then toss the other one in like a compressed file


[5/15/2022 5:52 AM] nonasuomy
When I open this bin I see 10 more img files of the partitions  the space we are working with is not one of these 10 correct but the raw space that we can't view as a file but is part of the start of the bin data correct? https://jpa.kapsi.fi/stuff/other/sd_card_PRS-T1_1.0.07_adb_enabled.bin.xz


[5/15/2022 5:52 AM] tux_linux
it should


[5/15/2022 5:54 AM] nonasuomy
we should be able to see the 25-26MB raw data inside the bin?


[5/15/2022 5:55 AM] nonasuomy
so it's one of those 10?


[5/15/2022 5:55 AM] tux_linux
yes


[5/15/2022 5:56 AM] nonasuomy
hmm


[5/15/2022 5:57 AM] tux_linux
use binwalk on the image


[5/15/2022 5:57 AM] nonasuomy
When I looked at them all with 7zip they all seemed very trivial like fonts or demo books or windows drivers, I'll have to take another look


[5/15/2022 5:57 AM] nonasuomy
ok


[5/15/2022 6:04 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/BinWalkeMMC-5E3D0.txt


[5/15/2022 6:05 AM] nonasuomy
Think it crashed at the end but that's what it spit out


[5/15/2022 6:05 AM] tux_linux
the uImage headers are important


[5/15/2022 6:05 AM] tux_linux
strange that there are three


[5/15/2022 6:08 AM] nonasuomy
So does that data line up with these locations?

```
# cat /sys/module/rawdatatable/parameters/rawdata_param
MBR                             :0x00000000:0x00000400
uBoot                           :0x00000400:0x000bfc00
Boot Env                        :0x000c0000:0x00020000
Reserved1                       :0x000e0000:0x00020000
Normal Kernel                   :0x00100000:0x00400000
Normal Rootfs                   :0x00500000:0x00100000
Recovery Kernel                 :0x00600000:0x00400000
Reserved2                       :0x00a00000:0x00500000
Normal Boot Env                 :0x00f00000:0x00020000
Recovery Boot Env               :0x00f20000:0x00020000
Raw Data Table                  :0x00f40000:0x00020000
Info                            :0x00f60000:0x00020000
Id                              :0x00f80000:0x00020000
Reserved3                       :0x00fa0000:0x00060000
Boot Image                      :0x01000000:0x00100000
Waveform                        :0x01100000:0x00200000
LOG                             :0x01300000:0x00500000
```


[5/15/2022 6:11 AM] nonasuomy
This numbers familiar 
```
header CRC: 0xC62947B6
```


[5/15/2022 6:11 AM] tux_linux
it looks strange


[5/15/2022 6:12 AM] tux_linux
can you just boot the kernel you compiled?


[5/15/2022 6:23 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/boot1000-1DDEE.txt


[5/15/2022 6:27 AM] tux_linux
chmod +x `etc/init.d/rcS`
there has been some progress


[5/15/2022 6:27 AM] tux_linux
the initrd starts


[5/15/2022 6:28 AM] nonasuomy
Will that fix the tty repeating thing as well?


[5/15/2022 6:28 AM] tux_linux
maybe


[5/15/2022 6:29 AM] nonasuomy
oh my there is actually a prompt under all those tty spams


[5/15/2022 6:29 AM] nonasuomy
can't open /dev/tty2: No such file or directory
ls
bin      dev      etc      linuxrc  sbin     usr


[5/15/2022 6:30 AM] tux_linux
cool


[5/15/2022 6:30 AM] nonasuomy
one moment while I recompile


[5/15/2022 6:31 AM] nonasuomy
or could I have technically did that from that prompt


[5/15/2022 6:39 AM] nonasuomy
No change


[5/15/2022 6:40 AM] nonasuomy
maybe it didn't sync properly -rw-r--r--    1 1000     1000           128 May 15  2022 rcS


[5/15/2022 6:41 AM] tux_linux
it's impossible


[5/15/2022 6:41 AM] nonasuomy
I did it from the console though maybe it will keep?


[5/15/2022 6:41 AM] nonasuomy
-rwxr-xr-x    1 1000     1000           128 May 15  2022 rcS


[5/15/2022 6:42 AM] nonasuomy
or is it a read only file system?


[5/15/2022 6:43 AM] nonasuomy
didn't keep


[5/15/2022 6:44 AM] nonasuomy
Does it cache those files in the kernel folder?


[5/15/2022 6:46 AM] nonasuomy
should I chown it to root root as well?


[5/15/2022 6:46 AM] nonasuomy
instead of my username


[5/15/2022 6:47 AM] nonasuomy
```
~/code/busybox/_install/etc/init.d$ ls -l
total 4
-rwxr-xr-x 1 nonasuomy nonasuomy 128 May 14 23:19 rcS
```


[5/15/2022 6:51 AM] tux_linux
It will never keep anything


[5/15/2022 6:51 AM] tux_linux
Doesn't matter


[5/15/2022 6:53 AM] nonasuomy
ok I will try to flash again then

{Reactions}
👍 

[5/15/2022 6:53 AM] nonasuomy
I defo did sudo sync and sync just for good measure though.

{Reactions}
👍 

[5/15/2022 6:59 AM] nonasuomy
I guess I just maybe pulled the card a little quick last time


[5/15/2022 7:00 AM] nonasuomy
```
tps65180_display_enable fail to read vcom from eMMC. -1
------------[ cut here ]------------
WARNING: at drivers/regulator/core.c:1423 _regulator_disable+0x30/0x118()
unbalanced disables for DISPLAY
Modules linked in:
[<800c066c>] (unwind_backtrace+0x0/0xec) from [<800e0ca8>] (warn_slowpath_common+0x4c/0x64)
[<800e0ca8>] (warn_slowpath_common+0x4c/0x64) from [<800e0d40>] (warn_slowpath_fmt+0x2c/0x3c)
[<800e0d40>] (warn_slowpath_fmt+0x2c/0x3c) from [<8025017c>] (_regulator_disable+0x30/0x118)
[<8025017c>] (_regulator_disable+0x30/0x118) from [<8025033c>] (regulator_disable+0x1c/0x30)
[<8025033c>] (regulator_disable+0x1c/0x30) from [<802bfdb4>] (get_temperature+0x40/0x50)
[<802bfdb4>] (get_temperature+0x40/0x50) from [<802bfdd0>] (calculate_battery_capacity+0xc/0x8c)
[<802bfdd0>] (calculate_battery_capacity+0xc/0x8c) from [<803aa2f8>] (sub_cpu_bci_probe+0x2b4/0x36c)
[<803aa2f8>] (sub_cpu_bci_probe+0x2b4/0x36c) from [<80279908>] (platform_drv_probe+0x18/0x1c)
[<80279908>] (platform_drv_probe+0x18/0x1c) from [<80278aa8>] (driver_probe_device+0xc8/0x184)
[<80278aa8>] (driver_probe_device+0xc8/0x184) from [<80278bc4>] (__driver_attach+0x60/0x84)
[<80278bc4>] (__driver_attach+0x60/0x84) from [<802782c4>] (bus_for_each_dev+0x44/0x74)
(kernel_init+0xa8/0x168)
[<80008408>] (kernel_init+0xa8/0x168) from [<800bc9c0>] (kernel_thread_exit+0x0/0x8)
---[ end trace 37afc84e26cca609 ]---
Freeing init memory: 716K
mount: mounting devtmpfs on /dev failed: No such device
/bin/sh: can't access tty; job control turned off
/ #
```


[5/15/2022 7:00 AM] tux_linux
good
at. last.


[5/15/2022 7:00 AM] nonasuomy
and yes it cured the tty repeating 😄


[5/15/2022 7:00 AM] nonasuomy
what is devtmpfs and why did it fail?


[5/15/2022 7:02 AM] nonasuomy
and /bin/sh


[5/15/2022 7:03 AM] tux_linux
what is in device drivers->generic driver options?


[5/15/2022 7:03 AM] tux_linux
not to worry about at all


[5/15/2022 7:05 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/config-32C7C


[5/15/2022 7:07 AM] tux_linux
you need to enable devtmpfs then


[5/15/2022 7:08 AM] tux_linux
but not the automount devtmpfs at dev thing


[5/15/2022 7:08 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-62D48.png


[5/15/2022 7:11 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-7E9FC.png


[5/15/2022 7:11 AM] tux_linux
yes


[5/15/2022 7:12 AM] nonasuomy
Anything else?


[5/15/2022 7:12 AM] nonasuomy
or compile


[5/15/2022 7:12 AM] tux_linux
compile


[5/15/2022 7:15 AM] nonasuomy
was I supposed to remove something from rcS?


[5/15/2022 7:16 AM] tux_linux
no


[5/15/2022 7:16 AM] nonasuomy
ok


[5/15/2022 7:17 AM] nonasuomy
```
---[ end trace f3fb3a274bc2f334 ]---
Freeing init memory: 716K
/bin/sh: can't access tty; job control turned off
/ #
```


[5/15/2022 7:20 AM] tux_linux
Good
That means we can start InkBox port

{Reactions}
🥳 

[5/15/2022 7:22 AM] tux_linux
Please make clean your kernel source and create a tarball of it.
Then share it with me


[5/15/2022 7:24 AM] tux_linux
Well, after vcom issue if fixed


[5/15/2022 7:26 AM] nonasuomy
so just run
```
make clean
```
in the kernel source directory and send you a tar ball of it even without the vcom issue fixed?


[5/15/2022 7:27 AM] tux_linux
Maybe fix the vcom issue before yeah


[5/15/2022 7:27 AM] tux_linux
But make a tarball for yourself if you mess things up


[5/15/2022 7:27 AM] nonasuomy
haha ok


[5/15/2022 7:27 AM] tux_linux
With the .config


[5/15/2022 7:27 AM] nonasuomy
what is involved in the inkbox port process?


[5/15/2022 7:27 AM] tux_linux
A lot of things


[5/15/2022 7:27 AM] nonasuomy
I would like to understand all the steps


[5/15/2022 7:28 AM] tux_linux
Look in the Libra H2O porting thread


[5/15/2022 7:28 AM] nonasuomy
ok is there a specific point to start at?


[5/15/2022 7:28 AM] tux_linux
The beginning


[5/15/2022 7:28 AM] nonasuomy
ok


[5/15/2022 7:29 AM] tux_linux
Just hit home until you reach the top


[5/16/2022 7:37 AM] nonasuomy
```
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc) modules
  CHK     include/linux/version.h
  CHK     include/generated/utsrelease.h
  CC      scripts/mod/empty.o
  MKELF   scripts/mod/elfconfig.h
  HOSTCC  scripts/mod/file2alias.o
make[1]: 'include/generated/mach-types.h' is up to date.
  HOSTCC  scripts/mod/modpost.o
  HOSTCC  scripts/mod/sumversion.o
  CC      kernel/bounds.s
  GEN     include/generated/bounds.h
  CC      arch/arm/kernel/asm-offsets.s
  GEN     include/generated/asm-offsets.h
  CALL    scripts/checksyscalls.sh
  HOSTLD  scripts/mod/modpost
  CC [M]  drivers/usb/gadget/arcotg_udc.o
  CC [M]  drivers/usb/host/ehci-hcd.o
  CC [M]  drivers/usb/gadget/serial.o
drivers/usb/gadget/arcotg_udc.c:686: warning: 'udc_wait_b_session_low' defined but not used
drivers/usb/gadget/arcotg_udc.c:2423: warning: 'wake_up_irq' defined but not used
drivers/usb/host/ehci-hub.c:109: warning: 'ehci_adjust_port_wakeup_flags' defined but not used
  CC [M]  drivers/usb/serial/usb-serial.o
  CC [M]  drivers/usb/serial/generic.o
  CC [M]  drivers/usb/serial/bus.o
  LD [M]  drivers/usb/gadget/g_serial.o
  LD [M]  drivers/usb/serial/usbserial.o
  Building modules, stage 2.
  MODPOST 4 modules
WARNING: modpost: Found 3 section mismatch(es).
To see full details build your kernel with:
'make CONFIG_DEBUG_SECTION_MISMATCH=y'
  CC      drivers/usb/gadget/arcotg_udc.mod.o
  CC      drivers/usb/gadget/g_serial.mod.o
  CC      drivers/usb/host/ehci-hcd.mod.o
  CC      drivers/usb/serial/usbserial.mod.o
  LD [M]  drivers/usb/host/ehci-hcd.ko
  LD [M]  drivers/usb/gadget/g_serial.ko
  LD [M]  drivers/usb/serial/usbserial.ko
  LD [M]  drivers/usb/gadget/arcotg_udc.ko
```


[5/16/2022 7:46 AM] szybet
But does it compile or stops?


[5/16/2022 9:16 AM] nonasuomy
Compiles as far as I know what I am doing which is little.


[5/16/2022 9:17 AM] nonasuomy
I'm not sure if doing that includes them in the uImage or you have to manually place them on the sdcard some place


[5/16/2022 9:40 AM] szybet
warnings are fine


[5/16/2022 9:41 AM] szybet
https://tenor.com/view/this-is-fine-fire-house-burning-okay-gif-5263684

{Embed}
https://tenor.com/view/this-is-fine-fire-house-burning-okay-gif-5263684
/mnt/data/projects/git/conversations/media/this-is-fine-fire-1743F.png

{Reactions}
😅 

[5/16/2022 9:44 AM] nonasuomy
I found GCC 4.4.0 (original stock compile version) for fun as well https://microsoft.github.io/mu/dyn/mu_tiano_plus/CryptoPkg/Library/OpensslLib/openssl/boringssl/third_party/android-cmake/ndk_links/

In package http://dl.google.com/android/ndk/android-ndk-r5c-darwin-x86.tar.bz2

{Embed}
https://microsoft.github.io/mu/dyn/mu_tiano_plus/CryptoPkg/Library/OpensslLib/openssl/boringssl/third_party/android-cmake/ndk_links/
ndk links - Project Mu
Project Mu Documentation


[5/16/2022 9:45 AM] nonasuomy
basically every version is there


[5/16/2022 2:07 PM] tux_linux
You have to make modules_install with INSTALL_MOD_PATH


[5/16/2022 2:07 PM] tux_linux
Then make a tarball or a squashfs and put it in your initrd root


[5/16/2022 2:08 PM] tux_linux
That might tank the watchdog though


[5/16/2022 4:22 PM] nonasuomy
I think that's exactly what I was looking for as I did that but it tried to install it to my local debian


[5/16/2022 5:20 PM] nonasuomy
```
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc) EXTRA_CFLAGS=-fno-pic INSTALL_MOD_PATH=sonymodules modules

make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j$(nproc) uImage EXTRA_CFLAGS=-fno-pic INSTALL_MOD_PATH=sonymodules modules_install
```


[5/16/2022 5:42 PM] nonasuomy
How do I do this process? Have you done it with the rest of the different devices? I would like to do it as close as plausible to how you did it for the others.


[5/16/2022 5:43 PM] nonasuomy
I have this sonymodules directory now


[5/16/2022 5:45 PM] nonasuomy
```
sonymodules/
└── lib
    └── modules
        └── 2.6.35.3
            ├── build -> /home/nonasuomy/code/linux-2.6.35.2
            ├── kernel
            │   └── drivers
            │       └── usb
            │           ├── gadget
            │           │   ├── arcotg_udc.ko
            │           │   └── g_serial.ko
            │           ├── host
            │           │   └── ehci-hcd.ko
            │           └── serial
            │               └── usbserial.ko
            ├── modules.alias
            ├── modules.alias.bin
            ├── modules.builtin
            ├── modules.builtin.alias.bin
            ├── modules.builtin.bin
            ├── modules.dep
            ├── modules.dep.bin
            ├── modules.devname
            ├── modules.order
            ├── modules.softdep
            ├── modules.symbols
            ├── modules.symbols.bin
            └── source -> /home/nonasuomy/code/linux-2.6.35.2
```


[5/16/2022 5:51 PM] tux_linux
Put it somewhere in your initrd


[5/16/2022 5:52 PM] nonasuomy
./tux-linux --verbose


[5/16/2022 5:55 PM] tux_linux
Mv modules folder to _install


[5/16/2022 5:58 PM] nonasuomy
modules folder as in the one I named sonymodules or the sub folder in the tree above named modules?


[5/16/2022 6:00 PM] nonasuomy
~/code/busybox/_install/sonymodules ?


[5/16/2022 6:03 PM] nonasuomy
```
~/code/busybox/_install$ ls
bin  dev  etc  linuxrc  sbin  sonymodules  usr
```


[5/16/2022 7:38 PM] tux_linux
That is fine


[5/16/2022 7:39 PM] nonasuomy
You are correct watchdog triggers now (Not sure if the image is too large but not getting that too large issue just resets)


[5/16/2022 7:45 PM] nonasuomy
2.23MB


[5/16/2022 7:46 PM] nonasuomy
Also I found an interesting directory on the eMMC directory two sh scripts called setvcom and getvcom


[5/16/2022 7:51 PM] nonasuomy
vcom_get.sh
```
#!/bin/sh

vcom_uV=`epd_fb_test getvcom | awk '{ print $4 }'`
vcom_mV=`expr $vcom_uV / 1000`
echo ${vcom_mV}mV
```


[5/16/2022 7:52 PM] nonasuomy
vcom_set.sh
```
#!/bin/sh


if [ $# -ne 1 ] ; then
    echo "Usage : vcom_set.sh vcom_value|off"
    exit 1
fi



case $1 in
[Oo][Ff][Ff])
    voltage.sh off epd
    echo "Power off OK"
    exit
    ;;
[0-9]*)
    vcom_mV=$1
    vcom_mV=`expr $vcom_mV / 10`
    vcom_mV=`expr $vcom_mV \* 10`
    vcom_uV=`expr $vcom_mV \* 1000`

    echo "setVCOM ${vcom_mV}mV"
    echo "VCOM write to eMMC"

    epd_fb_test setvcom $vcom_uV > /dev/null
    if [ $? -ne 0 ]; then
        echo "NG : fail set vcom."
        exit
    fi

    voltage.sh on epd
    echo "Power on OK"
    ;;
*)
    echo "NG : parameter error $1"
    exit 1
    ;;
esac
exit 0
```


[5/16/2022 7:55 PM] nonasuomy
voltage.sh
```
#!/bin/sh




# 機能ブロックの全リスト
blocks_all="sd wan wifi epd"
power_impl=/proc/pwr3
power_block=phoenix
if [ -f $power_impl ]; then
  if [ $(cat $power_impl) -ne 0 ]; then
    power_block=wolfson
  fi
fi
blocks_all="$blocks_all $power_block"




# 引数なしは NGとする
if [ -z "$1" ]; then
  echo NG
  exit 1
fi



#
# 小文字変換関数
#  $1    変換対象
#
tolower()
{
  echo $1 | tr '[A-Z]' '[a-z]'
}



#
# Regulator制御関数
#  $1    on/off
#  $2... Regulatorの名称
#
regulator_control()
{
  # 引数なしはエラーとする
  if [ -z "$*" ]; then
    return 1
  fi

  # on/offで指定文字列を設定する
  case $1 in
  on)
    control=enabled
    ;;
  off)
    control=disabled
    ;;
  *)
    return 1
    ;;
  esac

  shift
  remain=$*

  # 処理対象の Regulatorを検索する
  for regulator in $*; do

    # Regulator名称を参照する
    for name in $(ls /sys/class/regulator/regulator.*/name); do
      if [ $regulator != $(cat $name) ]; then
        # 対象外だったため次を参照する
        continue
      fi

      # 対象の Regulatorへ値を書き込む
      node=$(echo $name | sed -e 's/name$/state/')
      echo $control > $node

      # 処理が済んだ Regulatorを外す
      remain=$(echo $remain | sed -e "s/$regulator//")
      break
    done

    # すべての Regulatorへ値を書き込んだか
    if [ -z "$remain" ]; then
      # すべて書き込んだ
      break
    fi

  done

  return 0
}




diag_sd()
{
  case $1 in
  on)
    gpio 5 12 0
    ;;
  off)
    gpio 5 12 1
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}



diag_wan()
{
  case $1 in
  on)
    gpio 4 3 1
    ;;
  off)
    gpio 4 3 0
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}



diag_wifi()
{
  case $1 in
  on)
    gpio 5 25 1
    ;;
  off)
    gpio 5 25 0
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}



diag_epd()
{
  case $1 in
  on)
    regulators="$regulators DISPLAY V3P3_CTRL PWR0_CTRL VCOM"
    ;;
  off)
    regulators="$regulators VCOM PWR0_CTRL V3P3_CTRL DISPLAY"
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}
```


[5/16/2022 7:55 PM] nonasuomy
```
diag_wolfson()
{
  case $1 in
  on)
    ldo=1
    while [ $ldo -le 11 ]; do
      regulators="$regulators LDO$ldo"
      let ldo=$ldo+1
    done
    ;;
  off)
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}



diag_phoenix()
{
  case $1 in
  on)
    regulators="$regulators LDO1 LDO2 LDO3 LDO4 LDO5 LDO6 LDO7 VANA LDOLN LDOUSB SMPS3 SMPS4 VIO"
    ;;
  off)
    ;;
  *)
    return 1
    ;;
  esac

  return 0
}




if [ -z "$2" -o "$(tolower $2)" == "all" ]; then
  blocks=$blocks_all
elif echo $blocks_all | grep "\<$2\>" 2>&1 > /dev/null; then
  blocks=$2
else
  echo NG
  exit 1
fi



for block in $blocks; do
  if ! eval diag_$block $(tolower $1); then
    break
  fi
done

regulator_control $1 $regulators



if [ $? -eq 0 ]; then
  echo OK
else
  echo NG
fi
```


[5/16/2022 9:51 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/StockLogWithoutRamDisk-59EE3.txt


[5/17/2022 1:31 AM] nonasuomy
@tux-linux do these numbers mean anything to you across any of the other build for vcom? 
```
BW1120617204466                 BU1125868900232                 148427501482734                 PVI6inchE120C                   
65                  
1990
AudioOK                         2011/11/14-7:53:48
```


[5/17/2022 1:51 AM] tux_linux
no?


[5/17/2022 1:51 AM] tux_linux
where did you get ithis?


[5/17/2022 1:54 AM] nonasuomy
Here


[5/17/2022 1:54 AM] nonasuomy
Except I tried to hit the eMMC backup for it so may have not been the right spot


[5/17/2022 1:56 AM] nonasuomy
What do the other builds look like for how they store VCOM?


[5/17/2022 2:03 AM] nonasuomy
https://4pda.to/forum/index.php?s=&showtopic=301887&view=findpost&p=88936369

{Embed}
https://4pda.to/forum/index.php?s=&showtopic=301887&view=findpost&p=88936369
Sony PRS-T1 - прошивка (US-версия) - 4PDA
Sony PRS-T1 - прошивка (US-версия), Русификация и установка дополнительных приложений (amutin)


[5/17/2022 2:05 AM] nonasuomy
```
#!/bin/sh 

PATH=/diag/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin 

mount -t vfat -o rw,shortname=winnt /dev/mmcblk0p1 /initrd/mnt/sd 

/diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Updating_en.bmp 
sleep 3 

# /diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Reading.bmp 
# sleep 3 

# # Reading 
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/old.ramdisk.uimg skip=10240 count=600 bs=512 
# # sync 
# # dd if=/dev/mmcblk2 of=/ initrd/mnt/sd/old.nboote.bin skip=30720 count=256 bs=512 
# # sync 
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/Id.img skip=15872 count=128 bs=1024 
# # sync 
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/WF_OLD.img skip=17408 count=2048 bs=1024 
# # sync
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/Vcom_OLD.img skip=15876 count=1 bs=1024 
# # sync 
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/SN_OLD.img skip=15872 count=1 bs=1024 
# # sync 
# # dd if=/dev/mmcblk2 of=/initrd/mnt/sd/mmcblk2.img 
# # sync 
# # dd if=/dev/mmcblk2p1 of=/initrd/mnt/sd/mmcblk2p1.img 
# # sync 
# # dd if=/dev/mmcblk2p2 of=/initrd/mnt/sd/mmcblk2p2.img 
# # sync 
# # dd if=/dev/mmcblk2p3 of=/initrd/mnt/sd/mmcblk2p3.img 
# # sync 
# # dd if=/dev/mmcblk2p4 of=/initrd/mnt/sd/mmcblk2p4.img 
# # sync 
# # dd if=/dev/mmcblk2p5 of=/initrd/mnt/sd/mmcblk2p5.img 
# # sync 
# # dd if=/dev/mmcblk2p6 of=/initrd/mnt/sd/mmcblk2p6.img 
# # sync
# # dd if=/dev/mmcblk2p7 of=/initrd/mnt/sd/mmcblk2p7.img 
# # sync 
# # dd if=/dev/mmcblk2p8 of=/initrd/mnt/sd/mmcblk2p8.img 
# # sync 
# # dd if=/dev/mmcblk2p9 of=/initrd/mnt/sd/mmcblk2p9.img 
# # sync 
# # dd if=/dev/loop0 of=/initrd/mnt/sd/loop0.img 
# # sync 

# /diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Reading_done.bmp 
# sleep 3 

/diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Writing.bmp 
sleep 3 
```


[5/17/2022 2:05 AM] nonasuomy
```
Writing 
dd if=/initrd/mnt/sd /new.mmcblk2p4.img of=/dev/mmcblk2p4 conv=notruc 
sync 
dd if=/initrd/mnt/sd/new.mmcblk2.img of=/dev/mmcblk2 
sync 
dd if=/initrd/mnt/sd/mmcblk2p8. img of=/dev/mmcblk2p8 bs=1024 
sync
dd if=/initrd/mnt/sd/ new.mmcblk2p7.img of=/dev/ mmcblk2p7 bs=1024 
sync dd if=/initrd/mnt/sd/mmcblk2p9.img of=/dev/mmcblk2p9 bs=1024 sync cd /initrd/mnt/sd/ /diag/bin/version_check.sh > /initrd/mnt/sd/version.txt # mkfs.ext4 /dev/mmcblk2p6 -L dictionaries # mkfs.ext4 -m 0 -L data /dev/mmcblk2p8 # /diag/bin/epd_fb_test gettemp > /initrd/mnt/sd/epd_fb_test.txt # sync # dmesg > / initrd/mnt/sd/dmesg.txt ls -la /dev > /initrd/mnt/sd/dev.txt # /diag/bin/device_id.sh > /initrd/mnt/sd/device-id.txt # /diag /bin/serial_number.sh > /initrd/mnt/sd/serial_number.txt

# cat /sys/module/rawdatatable/parameters/rawdata_param > /initrd/mnt/sd/rawdata_param.txt 
# cat /sys/module/rawdatatable/parameters/partition_param > /initrd/mnt/sd/partition_param.txt 
# sync 

# cat /proc/cpuinfo > /initrd/mnt/sd/cpuinfo.txt 
# cat /proc/meminfo > /initrd/mnt/sd/meminfo.txt 

/diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Writing_done. bmp 
sleep 3 

/diag/bin/epd_fb_test file GC16 FULL /initrd/mnt/sd/Updating_en.bmp 
sleep 3 

# /sbin/getty -L 9600 ttyGS0 vt102
```


[5/17/2022 4:21 AM] nonasuomy
```
/sys/module/rawdatatable/parameters/partition_param

Recovery Rootfs                 :1: 0x00a00000
Diag                            :2: 0x00a00000
READER                          :4: 0x5a4d8000
fonts                           :5: 0x01000000
dictionaries                    :6: 0x08800000
SETTING                         :7: 0x00a00000
preload                         :8: 0x02800000
data                            :9: 0x03000000
system                          :10:0x08000000
```


[5/17/2022 7:43 PM] nonasuomy
Does this make any sense to you?
```
---[ end trace 3edbcdd9724ba378 ]---
Freeing init memory: 704K
/proc/self/exeKernel panic - not syncing: Attempted to kill init!
[<800bd66c>] (unwind_backtrace+0x0/0xec) from [<803a8678>] (panic+0x6c/0xf0)
[<803a8678>] (panic+0x6c/0xf0) from [<800e1410>] (do_exit+0x68/0x67c)
[<800e1410>] (do_exit+0x68/0x67c) from [<800e1b2c>] (complete_and_exit+0x0/0x1c)
[<800e1b2c>] (complete_and_exit+0x0/0x1c) from [<800b8f80>] (ret_fast_syscall+0x0/0x30)
```


[5/17/2022 7:45 PM] tux_linux
What's the rest of the kernel log?


[5/17/2022 7:48 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-8F344.txt


[5/17/2022 7:55 PM] nonasuomy
After the modules_install stuff didn't work I thought I would go back and I was trying to document the process of getting the console booted so I started over with a fresh busybox/linux kernel. Alas I'm not sure if something is wrong with the kernel or the U-Boot bootcmd/bootargs


[5/17/2022 7:57 PM] nonasuomy
I can no longer enter stuff in the console to get a prompt.


[5/17/2022 8:18 PM] nonasuomy
I think I may have the wrong init= option but not sure


[5/17/2022 8:18 PM] nonasuomy
```
setenv bootargs ‘root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait init=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000’

setenv bootcmd mmc read 0 ${loadaddr} 0x800 0x1400\;mmc read 0 ${loadaddr_ramdisk} 0x2800 0x258\;bootm

saveenv
```


[5/17/2022 8:19 PM] nonasuomy
maybe we had /bin/sh there or something else


[5/17/2022 9:17 PM] tux_linux
Use rdinit
Not init


[5/17/2022 9:17 PM] tux_linux
It's bin sh yes


[5/17/2022 9:40 PM] nonasuomy
😦 still panics


[5/17/2022 9:40 PM] nonasuomy
```
MX50_ARM2 U-Boot > printenv
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootcmd=mmc read 0 0x70800000 0x800 0x1400;mmc read 0 0x70C00000 0x2800 0x258;bootm
bootargs=root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait rdinit=/linuxrc console=ttymxc4,115200 bootdev=0 rawtable=0xF40000

Environment size: 337/131068 bytes
```


[5/17/2022 9:40 PM] tux_linux
Strange


[5/17/2022 9:41 PM] tux_linux
Not linuxrc


[5/17/2022 9:41 PM] nonasuomy
tried both /linuxrc and /bin/sh


[5/17/2022 9:41 PM] tux_linux
Oh ok


[5/17/2022 9:42 PM] nonasuomy
I noticed in the busybox _install folder it has linuxrc so that was a last ditch effort


[5/17/2022 9:43 PM] nonasuomy
I feel like it's just a console issue as the orange light is still flashing on it


[5/17/2022 9:44 PM] nonasuomy
not sure where "/proc/self/exe" comes from


[5/17/2022 9:53 PM] tux_linux
How big is the kernel?


[5/17/2022 9:57 PM] nonasuomy
```
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2276740 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
```


[5/17/2022 9:58 PM] nonasuomy
just a few bits smaller than the original


[5/17/2022 9:58 PM] nonasuomy
think the original is 228...


[5/17/2022 9:59 PM] nonasuomy
```
**## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Normal Kernel
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2288064 Bytes =  2.2 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    214270 Bytes = 209.2 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK
```


[5/17/2022 10:02 PM] nonasuomy
```
ls -l ~/code/busybox/_install/dev
total 0
crw-r--r-- 1 root root   5,  1 May 17 10:15 console
crw-r--r-- 1 root root   1,  3 May 17 10:15 null
crw-r--r-- 1 root root 207, 20 May 17 10:15 ttymxc4
```


[5/17/2022 10:04 PM] nonasuomy
Could those be an issue if they are set with root and we compile make without sudo?


[5/17/2022 10:07 PM] nonasuomy
/home/nonasuomy/code/busybox/_install/etc/init.d/rcS
```
#!/bin/sh

mkdir -p /sys /proc /dev
mount -t sysfs sysfs /sys
mount -t proc proc /proc
mount -t devtmpfs devtmpfs /dev

/bin/sh
```


[5/17/2022 10:09 PM] nonasuomy
We didn't add anything else there correct?


[5/17/2022 10:25 PM] tux_linux
That is fine


[5/17/2022 10:26 PM] tux_linux
No


[5/17/2022 10:26 PM] tux_linux
Your device is really possessed

{Reactions}
😂 

[5/17/2022 11:15 PM] nonasuomy
@tux-linux check dm


[5/17/2022 11:16 PM] szybet
why dm


[5/17/2022 11:16 PM] szybet
im reading this chat


[5/17/2022 11:16 PM] szybet
i dont understand a damn thing but its a interesting lecture about brain damain in computer science

{Reactions}
😂 (2) 

[5/18/2022 12:19 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1514-91967.jpg


[5/18/2022 12:20 AM] nonasuomy
Extended SDCard Flex cable for the Kobo came in. I guess it will be also good for playing around when you don’t want to move the device ejecting the card.

{Reactions}
👍 

[5/18/2022 12:20 AM] tux_linux
What's different from the previous working kernel build?
Modules?


[5/18/2022 12:23 AM] nonasuomy
Only things I can think of is one of the uboot settings or that I moved to busybox 1.34.1 instead of the same one you were or when I compiled the modules_install they modified something on the device and f’d it up (probably a long shot on that one) were probably just forgetting something.


[5/18/2022 12:24 AM] tux_linux
So no modules are in the initrd folder?


[5/18/2022 12:28 AM] nonasuomy
Correct this one is back to scratch I moved the folders to kernel.bak and busybox.bak then extracted fresh copies of their tars and put the two .config in each of their directories from the previous folders did timeconst.pl fix added the rcS and the dev to busybox then compiled


[5/18/2022 12:29 AM] nonasuomy
Would those external make module stuff modify the .config at all?


[5/18/2022 12:31 AM] tux_linux
It should not


[5/18/2022 4:07 AM] nonasuomy
Haha fml...


[5/18/2022 4:07 AM] nonasuomy
busybox version 1.32.1


[5/18/2022 4:08 AM] nonasuomy
we're back baby
```
---[ end trace 2e453d4d11b8a842 ]---
Freeing init memory: 716K
/bin/sh: can't access tty; job control turned off
/ # 
```


[5/18/2022 4:08 AM] nonasuomy
Went back to your version (a fresh tar) and now it works.


[5/18/2022 4:10 AM] nonasuomy
It's like hitting yourself with a hammer because it feels so good when you stop.


[5/18/2022 4:12 AM] nonasuomy
Loving this SDCard Flex cable so much better not knocking my probes off every time I need to flash 😄


[5/18/2022 4:31 AM] nonasuomy
C$ 2.28  18％ Off | Micro SD to Micro SD Card TF Memory Card Reader Flexible Extender Compatible Extension Adapter Cable
https://a.aliexpress.com/_msvlXOQ

{Embed}
https://a.aliexpress.com/_msvlXOQ
1.7US $ 18% OFF|Micro Sd To Micro Sd Card Tf Memory Card Reader Fle...
Smarter Shopping, Better Living!  Aliexpress.com
/mnt/data/projects/git/conversations/media/Micro-SD-to-Micro-SD-Card-TF-Memory-Card-R-AB537.jpg


[5/18/2022 4:32 AM] nonasuomy
27days to ship.


[5/18/2022 4:56 AM] nonasuomy
```
MX50_ARM2 U-Boot > printenv
stdin=serial
stdout=serial
stderr=serial
ethact=FEC0
loadaddr=0x70800000
loadaddr_ramdisk=0x70C00000
bootdev=2
rawtable=0xF40000
bootcmd=mmc read 0 0x70800000 0x800 0x1400;mmc read 0 0x70C00000 0x2800 0x258;bootm
bootargs=console=ttymxc4,115200 rawtable=0xF40000 root=/dev/ram0 rdinit=/linuxrc rootfstype=ramfs

Environment size: 313/131068 bytes
```


[5/18/2022 4:59 AM] tux_linux
Yay?

{Reactions}
☑️ 

[5/18/2022 5:00 AM] nonasuomy
Still no further on the vcom front but hey at least I have full documentation now on the process.


[5/18/2022 5:00 AM] tux_linux
Please write it down entirely somewhere


[5/18/2022 5:01 AM] tux_linux
On the wiki


[5/18/2022 5:01 AM] nonasuomy
Can I add info to wiki?


[5/18/2022 5:01 AM] tux_linux
Yes


[5/18/2022 5:01 AM] nonasuomy
(do I need permissions)


[5/18/2022 5:01 AM] tux_linux
No


[5/18/2022 5:01 AM] tux_linux
Just create an account


[5/18/2022 5:01 AM] nonasuomy
ok


[5/18/2022 5:01 AM] nonasuomy
the github wiki?


[5/18/2022 5:01 AM] tux_linux
No


[5/18/2022 5:02 AM] tux_linux
inkbox.ddns.net/wiki


[5/18/2022 5:03 AM] nonasuomy
you should make a backup on github as well as personal websites tend to die ask me how I know... 11 year old device research 😄


[5/18/2022 5:03 AM] tux_linux
I can back it up on internet archive


[5/18/2022 5:04 AM] nonasuomy
I suppose a lot of stuff gets broken on there though.


[5/18/2022 5:04 AM] nonasuomy
Images / file downloads / etc


[5/18/2022 5:04 AM] tux_linux
Wiki pages are usually good


[5/18/2022 5:04 AM] tux_linux
Even images


[5/18/2022 5:05 AM] nonasuomy
does mediawiki translate to github wiki easily?


[5/18/2022 5:05 AM] tux_linux
I don't know


[5/18/2022 5:05 AM] tux_linux
But I don't want to migrate to GitHub wiki


[5/18/2022 5:07 AM] nonasuomy
https://github.com/outofcontrol/mediawiki-to-gfm

{Embed}
https://github.com/outofcontrol/mediawiki-to-gfm
GitHub - outofcontrol/mediawiki-to-gfm: Converts Mediawiki format t...
Converts Mediawiki format to Github Flavoured Markdown format - GitHub - outofcontrol/mediawiki-to-gfm: Converts Mediawiki format to Github Flavoured Markdown format
/mnt/data/projects/git/conversations/media/mediawiki-to-gfm-AC0C9


[5/18/2022 5:07 AM] nonasuomy
Maybe just put a copy there


[5/18/2022 5:07 AM] nonasuomy
you don't have to migrate.


[5/18/2022 5:08 AM] nonasuomy
You could run a full website as well off github then just point your domain to it


[5/18/2022 5:08 AM] nonasuomy
with Jekyll pages


[5/18/2022 5:10 AM] nonasuomy
https://inkbox.github.io


[5/18/2022 5:10 AM] nonasuomy
(If you requested that nick squat removal 😄


[5/18/2022 5:31 AM] nonasuomy
You should enable captcha on your mediawiki endless spam


[5/18/2022 5:32 AM] nonasuomy
I remember once I did that it basically ended it.


[5/18/2022 5:32 AM] nonasuomy
maybe not now with ML but eh probably make your recent edits a little nicer to read.


[5/18/2022 5:35 AM] nonasuomy
https://www.inmotionhosting.com/support/edu/mediawiki/enable-recaptcha-media/

{Embed}
https://www.inmotionhosting.com/support/edu/mediawiki/enable-recaptcha-media/
How to enable  reCAPTCHA in MediaWiki
To prevent spam bots and robots from filling your MediaWiki pages with spam links and unwanted content, you can have the “reCAPTCHA” enabled in your MediaWiki LocalSettings.php to preve…
/mnt/data/projects/git/conversations/media/blank-6F087.jpg


[5/18/2022 5:36 AM] nonasuomy
https://www.mediawiki.org/wiki/Extension:ConfirmEdit?tableofcontents=0

{Embed}
https://www.mediawiki.org/wiki/Extension:ConfirmEdit?tableofcontents=0
Extension:ConfirmEdit
The ConfirmEdit extension lets you use various different CAPTCHA techniques, to try to prevent spambots and other automated tools from editing your wiki, as well as to foil automated login attempts that try to guess passwords.
ConfirmEdit ships with several techniques/modules to generate captcha.

Some of these modules require additional setup w...
/mnt/data/projects/git/conversations/media/FancyCaptcha_screenshot-5F76E.png


[5/18/2022 5:44 AM] nonasuomy
Been so long I forget how to use mediawiki


[5/18/2022 5:44 AM] nonasuomy
do you have any special sections for device hacking


[5/18/2022 7:08 PM] nonasuomy
When you run busybox like how we are is it only possible to run busybox commands and not other binaries?


[5/19/2022 12:36 AM] nonasuomy
I think I found the culprit but not sure how to fix it...


[5/19/2022 12:36 AM] nonasuomy
'/sys/module/rawdatatable/parameters/rawdata_param' is read only


[5/19/2022 12:36 AM] nonasuomy
that rawdata_param file is empty


[5/19/2022 12:37 AM] nonasuomy
just says (null)


[5/19/2022 12:37 AM] nonasuomy
this tells the kernel were all the data is


[5/19/2022 12:37 AM] szybet
What is MediaWiki


[5/19/2022 12:38 AM] nonasuomy
MediaWiki is the software behind wikipedia


[5/19/2022 12:38 AM] szybet
OH ok


[5/19/2022 12:38 AM] nonasuomy
@tux-linux uses it to document inkbox.


[5/19/2022 12:38 AM] nonasuomy
It uses markdown or markup forget which.


[5/19/2022 12:39 AM] nonasuomy
maybe it was github that uses markdown


[5/19/2022 12:39 AM] nonasuomy
and wikipedia uses markup


[5/19/2022 12:39 AM] nonasuomy
you should document all the nia stuff there


[5/19/2022 12:40 AM] szybet
There is a guide for nia


[5/19/2022 12:40 AM] szybet
Not completet though


[5/19/2022 12:40 AM] nonasuomy
fix it.


[5/19/2022 12:41 AM] nonasuomy
I'm talking more about though like explain how you ported everything for laymen  like me.


[5/19/2022 12:41 AM] szybet
For now i want my time to spend on programming rather on writing guide


[5/19/2022 12:41 AM] szybet
It is about this topic, but the Sony is a higher level


[5/19/2022 12:41 AM] nonasuomy
This is what the stock image rawdata_param looks like
```
MBR :0x00000000:0x00000400
uBoot :0x00000400:0x000bfc00
Boot Env :0x000c0000:0x00020000
Reserved1 :0x000e0000:0x00020000
Normal Kernel :0x00100000:0x00400000
Normal Rootfs :0x00500000:0x00100000
Recovery Kernel :0x00600000:0x00400000
Reserved2 :0x00a00000:0x00500000
Normal Boot Env :0x00f00000:0x00020000
Recovery Boot Env :0x00f20000:0x00020000
Raw Data Table :0x00f40000:0x00020000
Info :0x00f60000:0x00020000
Id :0x00f80000:0x00020000
Reserved3 :0x00fa0000:0x00060000
Boot Image :0x01000000:0x00100000
Waveform :0x01100000:0x00200000
LOG :0x01300000:0x00500000
```


[5/19/2022 12:42 AM] szybet
Maybe Sony is using something other


[5/19/2022 12:42 AM] nonasuomy
the 26MB raw data that is at the start of the eMMC this is how it identifies where it is


[5/19/2022 12:43 AM] nonasuomy
Someone said this
```
Here is a little background:

Going by this Guide
```
https://web.archive.org/web/20170605084646/http://android-dls.com/wiki/index.php?title=HOWTO:_Unpack,_Edit,_and_Re-Pack_Boot_Images 
```(where I got most info from) the compressed image of Androids root file system is part of a boot image residing on a partition.

The T1 however seems to follow a different approach with a stand-alone root fs image in form of raw data on the unpartitioned area.
```


[5/19/2022 1:08 AM] nonasuomy
All this stuff is slowly starting to make some sense.


[5/19/2022 2:20 AM] nonasuomy
Can probably fix that pastlog error (Hardcoded mmcblk2)


[5/19/2022 2:20 AM] nonasuomy
```
Search "mmcblk2" (1 hit in 1 file of 34444 searched)
  G:\SonyPRST1\Sony OSS\PRST1_JP 20140702\linux-2.6.35.2-20140522-2\linux-2.6.35.2-20140522-2\linux-2.6.35.2\drivers\staging\pastlog\pastlog.c (1 hit)
    Line 725:             pastlog_emmc = is_rawdatadev("mmcblk2");
```


[5/19/2022 4:07 AM] nonasuomy
So not sure if that fixed anything for that issue


[5/19/2022 4:08 AM] nonasuomy
Need to figure out how it maps these values here /sys/module/rawdatatable/parameters/rawdata_param


[5/19/2022 4:08 AM] nonasuomy
then I think everything will load


[5/19/2022 4:16 AM] tux_linux
this is a really strange device
it seems simple to hack, but it's a thousand times more complicated than Kindles to understand


[5/19/2022 4:20 AM] nonasuomy
I guess the difference is that nobody has ever really hacked it before. You will be the first.


[5/19/2022 4:21 AM] tux_linux
*we


[5/19/2022 4:21 AM] tux_linux
but maybe yeah


[5/19/2022 4:21 AM] tux_linux
did you start your write-up on the wiki? it will be useful when I receive it


[5/19/2022 4:21 AM] nonasuomy
I tried but it kept locking up


[5/19/2022 4:22 AM] nonasuomy
something might have got saved


[5/19/2022 4:22 AM] tux_linux
?


[5/19/2022 4:23 AM] nonasuomy
Too much data


[5/19/2022 4:23 AM] nonasuomy
I kept having to save it in smaller and smaller chunks


[5/19/2022 4:23 AM] nonasuomy
then I realized it was erroring every time I pasted multiple links


[5/19/2022 4:24 AM] nonasuomy
So I would have to paste up to a link then save then edit then paste the link then save then edit.


[5/19/2022 4:24 AM] tux_linux
is there a way to mass-delete users?


[5/19/2022 4:25 AM] nonasuomy
probably just drop the user table haha


[5/19/2022 4:27 AM] nonasuomy
I think it's 99.9% percent spammers


[5/19/2022 4:27 AM] nonasuomy
https://www.mediawiki.org/wiki/Topic:Vpnkt6do9wr4ph5h

{Embed}
https://www.mediawiki.org/wiki/Topic:Vpnkt6do9wr4ph5h
Topic:Vpnkt6do9wr4ph5h


[5/19/2022 4:28 AM] nonasuomy
https://stackoverflow.com/questions/10706451/mediawiki-mass-user-delete-merge-block

{Embed}
https://stackoverflow.com/questions/10706451/mediawiki-mass-user-delete-merge-block
Mediawiki mass user delete/merge/block
I have 500 or so spambots and about 5 actual registered users on my wiki. I have used nuke to delete their pages but they just keep reposting. I have spambot registration under control using reCapt...
/mnt/data/projects/git/conversations/media/apple-touch-icon%402-C50E4.png


[5/19/2022 4:31 AM] nonasuomy
Looks like it never saved https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1


[5/19/2022 4:32 AM] nonasuomy
Something went wrong
Error contacting the Parsoid/RESTBase server: http-bad-status


[5/19/2022 4:36 AM] tux_linux
i'm currently setting up captcha extension

{Reactions}
💯 

[5/19/2022 4:43 AM] tux_linux
it doesn't work


[5/19/2022 4:43 AM] tux_linux
as usual


[5/19/2022 4:44 AM] tux_linux
ok it does now it seems


[5/19/2022 4:51 AM] nonasuomy
I'll try it in a moment when it unlocks my browser from trying to cut the document out haha


[5/19/2022 4:51 AM] nonasuomy
N/m crashed the browser


[5/19/2022 4:52 AM] nonasuomy
I think this file may be the secret to us winning rawdatatable.c


[5/19/2022 4:53 AM] nonasuomy
```
#define    RAWTABLE_DEV        "mmcblk%d"
```
lets see what happens when we change that to 0 instead of %d


[5/19/2022 5:05 AM] nonasuomy
I accidently forgot I perm added gcc 4.4.4 to rc but looks like it compiles ok still


[5/19/2022 5:05 AM] nonasuomy
Linux version 2.6.35.3 (nonasuomy@Marceline) (gcc version 4.4.4 (4.4.4_09.06.2010) ) #4 PREEMPT Wed May 18 22:58:32 EDT 2022


[5/19/2022 5:11 AM] nonasuomy
Do you think we can just dump a file with the memory allocations to sys via rcS under _install ?


[5/19/2022 5:11 AM] nonasuomy
.


[5/19/2022 5:14 AM] tux_linux
you lost me on the rawdata_param thing


[5/19/2022 5:14 AM] nonasuomy
Ok so on a stock boot there is a file at that location with that content in it.


[5/19/2022 5:15 AM] nonasuomy
when we boot our kernel the file is there but there is nothing in it (NULL)


[5/19/2022 5:15 AM] nonasuomy
and that is why I think we are getting that eMMC error


[5/19/2022 5:15 AM] tux_linux
hmm


[5/19/2022 5:15 AM] nonasuomy
because it needs those locations from that rawdata_param


[5/19/2022 5:16 AM] nonasuomy
those locations tell it what is in the 26MB raw area of the start memory unit (eMMC/SD)


[5/19/2022 5:16 AM] nonasuomy
specifically I think the waveform one.


[5/19/2022 5:17 AM] tux_linux
this makes sense


[5/19/2022 5:22 AM] nonasuomy
Do you think it will puke if we put in the busybox _install folder or it will just overwrite it or get a permission denied being that it may already be there before ours gets put there? or can you just not dump stuff in sys at all? 

busybox/_install/sys/module/rawdatatable/parameters/rawdata_param
```
MBR :0x00000000:0x00000400
uBoot :0x00000400:0x000bfc00
Boot Env :0x000c0000:0x00020000
Reserved1 :0x000e0000:0x00020000
Normal Kernel :0x00100000:0x00400000
Normal Rootfs :0x00500000:0x00100000
Recovery Kernel :0x00600000:0x00400000
Reserved2 :0x00a00000:0x00500000
Normal Boot Env :0x00f00000:0x00020000
Recovery Boot Env :0x00f20000:0x00020000
Raw Data Table :0x00f40000:0x00020000
Info :0x00f60000:0x00020000
Id :0x00f80000:0x00020000
Reserved3 :0x00fa0000:0x00060000
Boot Image :0x01000000:0x00100000
Waveform :0x01100000:0x00200000
LOG :0x01300000:0x00500000
```

Bytes in Decimal
```
MBR :0:1024
uBoot :1024:785408
Boot Env :786432:131072
Reserved1 :917504:131072
Normal Kernel :1048576:4194304
Normal Rootfs :5242880:1048576
Recovery Kernel :6291456:4194304
Reserved2 :10485760:5242880
Normal Boot Env :15728640:131072
Recovery Boot Env :15859712:131072
Raw Data Table :15990784:131072
Info :16121856:131072
Id :16252928:131072
Reserved3 :16384000:393216
Boot Image :16777216:1048576
Waveform :17825792:2097152
LOG :19922944:5242880
```


[5/19/2022 5:24 AM] nonasuomy
Or should we add scripting to rcS to generate that somehow.


[5/19/2022 5:25 AM] nonasuomy
I see it's under module maybe a module of some sort generates that table


[5/19/2022 5:25 AM] tux_linux
why not just change kernel code?


[5/19/2022 5:25 AM] tux_linux
it will not allow you to write there


[5/19/2022 5:33 AM] nonasuomy
Not really sure what is generating them


[5/19/2022 5:55 AM] nonasuomy
Well I know its this file linux-2.6.35.2-20140522-2\linux-2.6.35.2\drivers\mmc\card\rawdatatable.c


[5/19/2022 6:07 AM] tux_linux
grep -r the whole tree


[5/19/2022 6:08 AM] tux_linux
`grep -r "Recovery Boot Env" .`


[5/19/2022 6:23 AM] nonasuomy
Funny that's the same one I picked and also found nothing 😦


[5/19/2022 2:26 PM] nonasuomy
I’m guessing it maybe reads those labels off of some place


[5/19/2022 2:26 PM] tux_linux
probably


[5/19/2022 3:19 PM] nonasuomy
```
Permission of sysfs is defined in kernel space so you can not directly create the files or directory in /sys folder from the user space. If you want to create/modify the directory/file then I think you can achieve it through kernel module. There are loads of helper function that can be used to create the file attributes and directory inside /sys.

I belive already your driver will be using those helper function (something like sysfs_create_group or kobject_create_and_add). For changing the file permission and data read/write check your driver __ATTR and show/store function.

It should be something like:
```

```
static ssize_t fo_show(struct kobject *kobj, struct kobj_attribute 
*attr,char *buf){
}
static ssize_t fo_store(struct kobject *kobj, struct kobj_attribute 
*attr, const char *buf, size_t count){
}

static struct kobj_attribute baz_attribute =
__ATTR(foo, 0666, fo_show, fo_store);
```


[5/19/2022 4:58 PM] tux_linux
Does the raw data table c file read from some MMC offset?


[5/19/2022 5:39 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/rawdatatable-D7A39.c


[5/19/2022 5:39 PM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/rawdatatable-89B1B.h


[5/19/2022 5:52 PM] nonasuomy
If this table says:
```
Info :0x00f60000:0x00020000
Id :0x00f80000:0x00020000
Reserved3 :0x00fa0000:0x00060000
Boot Image :0x01000000:0x00100000
Waveform :0x01100000:0x00200000
LOG :0x01300000:0x00500000
```
Hex to Decimal
```
Info :16121856:131072
Id :16252928:131072
Reserved3 :16384000:393216
Boot Image :16777216:1048576
Waveform :17825792:2097152
LOG :19922944:5242880
```

How do you compute these values of dd to the above?

```
dd if=/dev/mmcblk2 of=/initrd/mnt/sd/WF_OLD.img skip=17408 count=2048 bs=1024 
sync

dd if=/dev/mmcblk2 of=/initrd/mnt/sd/Vcom_OLD.img skip=15876 count=1 bs=1024 
sync
```


[5/19/2022 6:14 PM] nonasuomy
Waveform to Decimal: 17825792Bytes : 2097152Bytes

skip=17408Blocks. Skip 17408 ibs-sized blocks at start of input

bs=1024Bytes. Read and write up to BYTES bytes at a time (default: 512);overrides ibs and obs

count=2048Blocks. Copy only 2048 input blocks

Starting Point of DD Copy
17408Blocks * 1024Bytes = 17825792Bytes ☑️ 

Count
2048Blocks * 1024Bytes = 2097152Bytes
17825792Bytes + 2097152Bytes = 19922944Bytes ☑️

Next Data Point
LOG :19922944 ☑️:5242880


[5/19/2022 6:29 PM] nonasuomy
Oh maybe the numbers are backwards which is strange as the first few seem to indicate :start:end


[5/19/2022 7:02 PM] nonasuomy
Ah the second number is how many bytes added to the starting point


[5/19/2022 7:19 PM] nonasuomy
So now we can see where VCOM is ripped from

```
dd if=/dev/mmcblk2 of=/initrd/mnt/sd/Vcom_OLD.img skip=15876 count=1 bs=1024 
```
skip=15876
count=1 
bs=1024 
VCOM Start: 15876 * 1024 = 16257024
1*1024 = 1024
VCOM End: 16257024 + 1024 = 16258048

```
Id :0x00f80000:0x00020000
Id :16252928:131072
```
Therefore VCOM is inside Id of the 26MB Raw Data Area
```
Id Start:   16252928
VCOM Start: 16257024
VCOM End:   16258048
Id End:     16384000
```


[5/19/2022 7:27 PM] nonasuomy
Seems like they should have ripped all of Id not sure how that is a backup/restore.
Also should have just ripped the full raw as it's only 26MB then restore it.


[5/19/2022 7:30 PM] nonasuomy
So I guess we can look at mechanisms in the kernel that hit the Id raw section.


[5/19/2022 11:05 PM] nonasuomy
Raw Id Locations
```
PRS-T1          UC,CEW^@^@^@^@^@^@^@^@^@^@0800461001BB6D47148427352023999.PRST1

STRING_PRODUCT_EMMC_ID_OFFSET 0x00 PRS-T1
STRING_SKU_EMMC_ID_OFFSET 0x10 UC,CEW (US) Also RU JP
STRING_SERIAL_EMMC_ID_OFFSET 0x30 148427352023999
```


[5/20/2022 3:34 AM] tux_linux
Did you find how to restore it?


[5/20/2022 3:35 AM] nonasuomy
Restore my eMMC?


[5/20/2022 3:35 AM] tux_linux
the vcom


[5/20/2022 3:37 AM] nonasuomy
nope was just looking at this file that pulls the waveform data in

{Reactions}
👍 

[5/20/2022 3:37 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/mxc_epdc_fb-C75F7.c


[5/20/2022 3:39 AM] tux_linux
```
#define WF_VER_OFFSET    0x0C
```
maybe this can give you a hint


[5/20/2022 3:39 AM] nonasuomy
I'm wondering if it's module related as that would explain why the stock works from sd


[5/20/2022 3:39 AM] nonasuomy
as we don't have any of the modules


[5/20/2022 3:39 AM] tux_linux
on kindle, it is


[5/20/2022 3:48 AM] nonasuomy
I was also trying to figure out what these values were from I just realized from the work above that 3rd set is the serial number again... BW1118073202953 BU1156245100493 148427352023999

{Reactions}
👍 

[5/20/2022 3:48 AM] nonasuomy
I was wondering why it kept polling temperature so much


[5/20/2022 3:49 AM] nonasuomy
then I realized it's because eink needs to use the temp data plus the lut data to properly update the screen

{Reactions}
👍 

[5/20/2022 3:49 AM] nonasuomy
eink is temperature sensitive


[5/20/2022 3:50 AM] nonasuomy
How were you able to get the modules loading on the kindle?


[5/20/2022 3:50 AM] tux_linux
modprobe or insmod


[5/20/2022 4:22 AM] nonasuomy
```
/mount/p7/Sony_Reader # xxd -l 120 WF_OLD.img
00000000: 4983 9360 2634 0100 a40b 0000 0506 7600  I..`&4........v.
00000010: 0333 0123 3c31 0085 0300 0000 4000 00bf  .3.#<1......@...
00000020: 4700 0001 0004 0d00 fffc 0000 0000 0054  G..............T
00000030: 0003 0609 0c0f 1215 181b 1e21 262b 3028  ...........!&+0(
00000040: 0000 0000 0000 0008 8305 0000 0000 00e8  ................
00000050: f106 0000 0000 00c8 a60a 0000 0000 00a8  ................
00000060: 5b0e 0000 0000 0098 0000 0000 0000 00a0  [...............
00000070: 7700 0000 0000 00a8                      w.......
```


[5/20/2022 4:22 AM] nonasuomy
looks like a v.3.#<1


[5/20/2022 4:22 AM] tux_linux
hmm


[5/20/2022 4:23 AM] tux_linux
coincidence or actual version


[5/20/2022 4:25 AM] nonasuomy
¯\_(ツ)_/¯


[5/20/2022 4:26 AM] nonasuomy
Do you know the waveform version on the kobo A/B ?


[5/20/2022 4:26 AM] nonasuomy
maybe it matches up


[5/20/2022 4:26 AM] tux_linux
it's not even the same display


[5/20/2022 4:26 AM] tux_linux
it sure won't


[5/20/2022 4:26 AM] nonasuomy
or maybe an arbitrary number


[5/20/2022 4:26 AM] nonasuomy
I read some place that they are the same display


[5/20/2022 4:28 AM] nonasuomy
Kobo Touch A/B, Sony PRS-T1, Nook Simple


[5/20/2022 4:32 AM] nonasuomy
Maybe bad listing as I can't find the same data again


[5/20/2022 4:34 AM] nonasuomy
All I see now is the PRS-T1 / Nook Simple


[5/20/2022 4:44 AM] nonasuomy
https://github.com/felixhaedicke/nst-kernel

{Embed}
https://github.com/felixhaedicke/nst-kernel
GitHub - felixhaedicke/nst-kernel: Linux Kernel for the Nook Simple...
Linux Kernel for the Nook Simple Touch with fixed USB host and fast display mode support - GitHub - felixhaedicke/nst-kernel: Linux Kernel for the Nook Simple Touch with fixed USB host and fast dis...
/mnt/data/projects/git/conversations/media/nst-kernel-158A7


[5/20/2022 4:45 AM] nonasuomy
Did you get all your wiki stuff solved?


[5/20/2022 4:46 AM] tux_linux
im ... t r y i n g


[5/20/2022 4:46 AM] tux_linux
@#$% thing doesn't want to show the logo


[5/20/2022 4:46 AM] tux_linux
look by yourself https://inkbox.ddns.net/wiki/index.php?title=Main_Page

{Embed}
https://inkbox.ddns.net/wiki/index.php?title=Main_Page
Index.php


[5/20/2022 4:46 AM] tux_linux
the php var is perfectly valid


[5/20/2022 4:49 AM] nonasuomy
Is the logo 135x135


[5/20/2022 4:49 AM] tux_linux
135x135


[5/20/2022 4:50 AM] tux_linux
before it was 192x192 and it showed fine on the other wiki


[5/20/2022 4:50 AM] nonasuomy
are the permissions set?


[5/20/2022 4:50 AM] nonasuomy
is the asset there?


[5/20/2022 4:50 AM] nonasuomy
chmod 644 wikilogo.png


[5/20/2022 4:50 AM] nonasuomy
chown apache:apache wikilogo.png


[5/20/2022 4:51 AM] tux_linux
not apache but www-data


[5/20/2022 4:51 AM] tux_linux
all yes


[5/20/2022 4:55 AM] nonasuomy
https://tenor.com/view/maurice-moss-unexpected-reboot-it-crowd-reboot-richard-ayoade-gif-11294807

{Embed}
https://tenor.com/view/maurice-moss-unexpected-reboot-it-crowd-reboot-richard-ayoade-gif-11294807
/mnt/data/projects/git/conversations/media/maurice-moss-unexpected-reboot-7519F.png


[5/20/2022 4:55 AM] tux_linux
yes


[5/20/2022 4:56 AM] nonasuomy
can you hit the static asset image alone?


[5/20/2022 4:56 AM] tux_linux
yes


[5/20/2022 4:57 AM] tux_linux
https://inkbox.ddns.net/wiki/inkbox-web.png

{Embed}
https://inkbox.ddns.net/wiki/inkbox-web.png
/mnt/data/projects/git/conversations/media/inkbox-web-6CAA0.png


[5/20/2022 4:57 AM] tux_linux
(\https://inkbox.ddns.net/wiki/inkbox-web.png)


[5/20/2022 4:58 AM] tux_linux
it shows


[5/20/2022 4:58 AM] tux_linux
now


[5/20/2022 4:58 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-D2CC4.png


[5/20/2022 4:58 AM] tux_linux
nonsense


[5/20/2022 4:59 AM] tux_linux
on the previous wiki wgResourceBasePath was `https://inkbox.ddns.net/wiki` and so is it on the new one now


[5/20/2022 4:59 AM] nonasuomy
If you echo $wgResourceBasePath what do you get?


[5/20/2022 4:59 AM] nonasuomy
maybe it set to nothingness.


[5/20/2022 5:02 AM] tux_linux
https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1
write here


[5/20/2022 5:02 AM] tux_linux
when you have time


[5/20/2022 5:03 AM] tux_linux
I do like that

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-FE118.png


[5/20/2022 5:04 AM] nonasuomy
Do I have to create a new account?


[5/20/2022 5:04 AM] tux_linux
yes


[5/20/2022 5:05 AM] tux_linux
everything is gone


[5/20/2022 5:05 AM] nonasuomy
k


[5/20/2022 5:05 AM] tux_linux
except articles/pages


[5/20/2022 5:05 AM] tux_linux
i wanted to start clean
I enabled captcha, I hope I won't get spam


[5/20/2022 5:08 AM] nonasuomy
Error contacting the Parsoid/RESTBase server (HTTP 404)


[5/20/2022 5:08 AM] tux_linux
hahaha i know


[5/20/2022 5:08 AM] tux_linux
use code editor for now


[5/20/2022 5:10 AM] nonasuomy
You do not have permission to edit this page, for the following reason:

The action you have requested is limited to users in the group: Users.


[5/20/2022 5:10 AM] tux_linux
no way


[5/20/2022 5:10 AM] tux_linux
what is this mess


[5/20/2022 5:11 AM] nonasuomy
I don't know it let me save the word test in the wysiwyg editor


[5/20/2022 5:11 AM] nonasuomy
Just enable github wiki and all will go away 😄


[5/20/2022 5:11 AM] tux_linux
https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1

{Embed}
https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1
Index.php


[5/20/2022 5:11 AM] tux_linux
it is there


[5/20/2022 5:14 AM] nonasuomy
Seems to be working now


[5/20/2022 5:14 AM] tux_linux
good


[5/20/2022 5:15 AM] nonasuomy
Ghosts in the machine


[5/20/2022 5:15 AM] tux_linux
i'm trying to fix the visual editor


[5/20/2022 5:24 AM] nonasuomy
Error: The text you wanted to publish was blocked by the spam filter. This is probably caused by a link to a forbidden external site. The following text is what triggered our spam filter: aliexpress.com


[5/20/2022 5:24 AM] nonasuomy
haha


[5/20/2022 5:26 AM] tux_linux
good


[5/20/2022 5:26 AM] tux_linux
could you... format the text a bit?


[5/20/2022 5:27 AM] nonasuomy
I'm just dumping it first

{Reactions}
👍 

[5/20/2022 5:27 AM] tux_linux
np


[5/20/2022 5:27 AM] tux_linux
also you have lonely wq out there at the bottom of the page... 😉

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-4E06C.png


[5/20/2022 5:27 AM] nonasuomy
It locked up last time if I pasted the full thing


[5/20/2022 5:28 AM] nonasuomy
I'm sure code tags etc will fix all that ...


[5/20/2022 5:29 AM] nonasuomy
I will have to brush the rust of my mediawiki markup


[5/20/2022 5:29 AM] tux_linux
a useful thing is to look at the syntax of other pages on the wiki


[5/20/2022 5:29 AM] tux_linux
that is a good example https://inkbox.ddns.net/wiki/index.php?title=Basic_diagnostics_kernel

{Embed}
https://inkbox.ddns.net/wiki/index.php?title=Basic_diagnostics_kernel
Index.php


[5/20/2022 6:06 AM] nonasuomy
https://www.mediawiki.org/wiki/Template:Code

{Embed}
https://www.mediawiki.org/wiki/Template:Code
Template:Code


[5/20/2022 6:06 AM] nonasuomy
fix plz


[5/20/2022 6:12 AM] tux_linux
fix what?


[5/20/2022 6:12 AM] nonasuomy
I loathe these html tags in markup


[5/20/2022 6:12 AM] nonasuomy
<pre></pre> for code tags etc.


[5/20/2022 6:13 AM] tux_linux
so i just copy it to a new page?


[5/20/2022 6:13 AM] tux_linux
gave up on visualeditor
nothing works


[5/20/2022 6:14 AM] tux_linux
```
root@debian-server /e/p/7/mods-available# tail -f /var/log/apache2/error.log
PHP Warning:  PHP Startup: Unable to load dynamic library 'xmlreader' (tried: /usr/lib/php/20180731/xmlreader (/usr/lib/php/20180731/xmlreader: cannot open shared object file: No such file or directory), /usr/lib/php/20180731/xmlreader.so (/usr/lib/php/20180731/xmlreader.so: undefined symbol: dom_node_class_entry)) in Unknown on line 0
[Fri May 20 00:05:33.317427 2022] [mpm_prefork:notice] [pid 57619] AH00163: Apache/2.4.38 (Debian) OpenSSL/1.1.1n configured -- resuming normal operations
[Fri May 20 00:05:33.317457 2022] [core:notice] [pid 57619] AH00094: Command line: '/usr/sbin/apache2'
[Fri May 20 00:11:01.006739 2022] [mpm_prefork:notice] [pid 57619] AH00169: caught SIGTERM, shutting down
[Fri May 20 00:11:01.107176 2022] [:notice] [pid 58849] mod_bw : Memory Allocated 96 bytes (each conf takes 48 bytes)
[Fri May 20 00:11:01.107222 2022] [:notice] [pid 58849] mod_bw : Version 0.92 - Initialized [2 Confs]
PHP Warning:  PHP Startup: Unable to load dynamic library 'xmlreader' (tried: /usr/lib/php/20180731/xmlreader (/usr/lib/php/20180731/xmlreader: cannot open shared object file: No such file or directory), /usr/lib/php/20180731/xmlreader.so (/usr/lib/php/20180731/xmlreader.so: undefined symbol: dom_node_class_entry)) in Unknown on line 0
PHP Warning:  Module 'dom' already loaded in Unknown on line 0
[Fri May 20 00:11:01.135493 2022] [mpm_prefork:notice] [pid 58849] AH00163: Apache/2.4.38 (Debian) OpenSSL/1.1.1n configured -- resuming normal operations
[Fri May 20 00:11:01.135528 2022] [core:notice] [pid 58849] AH00094: Command line: '/usr/sbin/apache2'
```


[5/20/2022 6:14 AM] tux_linux
tried every fix out there but none worked


[5/20/2022 6:14 AM] nonasuomy
github is only a git clone away.


[5/20/2022 6:17 AM] tux_linux
i never use the visualeditor


[5/20/2022 6:18 AM] tux_linux
?


[5/20/2022 6:19 AM] nonasuomy
Not sure what you are saying there.


[5/20/2022 6:20 AM] tux_linux
how do i fix it


[5/20/2022 6:21 AM] nonasuomy
Use github wiki haha


[5/20/2022 6:21 AM] tux_linux
no, i mean, the code tags


[5/20/2022 6:21 AM] nonasuomy
Fixes it every time.


[5/20/2022 6:28 AM] nonasuomy
I think I remember replacing the stock editor with a 3rd party "back in the day" can't remember


[5/20/2022 6:30 AM] nonasuomy
Think I used TinyMCE


[5/20/2022 6:31 AM] nonasuomy
https://www.mediawiki.org/wiki/Extension:TinyMCE

{Embed}
https://www.mediawiki.org/wiki/Extension:TinyMCE
Extension:TinyMCE
TinyMCE is a MediaWiki extension that lets users edit wiki pages using version 5 of the popular open source JavaScript-based WYSIWYG editor TinyMCE created by Ephox corp. The editor can be added to the standard edit page, to forms defined by the Page Forms extension, and to regular pages in view mode. 
The TinyMCE extension provides users with a...
/mnt/data/projects/git/conversations/media/1200px-TinyMCE_Editor_Example-6B8F8.png


[5/20/2022 6:43 AM] tux_linux
done

{Attachments}
/mnt/data/projects/git/conversations/media/unknown-8E72C.png

{Reactions}
🔥 

[5/20/2022 6:45 AM] tux_linux
surprisingly it worked


[5/20/2022 6:45 AM] tux_linux
(tinymce)


[5/20/2022 6:46 AM] nonasuomy
You're digging up graves in my brain from times past haha.


[5/20/2022 6:46 AM] nonasuomy
I remember all these same issues.


[5/20/2022 7:50 AM] nonasuomy
That BW1118073202953 string is the same as the sticker on the mainboard.


[5/20/2022 7:51 AM] nonasuomy
Just realized that when I was looking at my hardware section list...


[5/20/2022 7:51 AM] nonasuomy
"PCB PRS-T1/G1 M5047 1-884-610-12 BW1118073202953 Cast 2012/05/05A"


[5/20/2022 2:50 PM] tux_linux
very nice write-up so far, I edited it to put spoiler text for busybox and kernel config

{Reactions}
🤩 👍 

[5/20/2022 4:58 PM] nonasuomy
Can you upload this to your server and give me a link? https://jpa.kapsi.fi/stuff/other/sd_card_PRS-T1_1.0.07_adb_enabled.bin.xz


[5/20/2022 5:05 PM] szybet
Um why


[5/20/2022 5:19 PM] nonasuomy
Doesn't seem polite to abuse that persons bandwidth for our own purposes.


[5/20/2022 5:22 PM] nonasuomy
Also his site may shut down or get removed at any moment which then we can't continue hacking.


[5/20/2022 5:22 PM] szybet
Just download it / web archive


[5/20/2022 6:39 PM] nonasuomy
I asked them and they said it's ok to use the link. Still good to have multiple backups of it.


[5/20/2022 7:31 PM] nonasuomy
Seems like a great person they dumped me their history log when they built the image. 😄

{Reactions}
👍 

[5/20/2022 7:32 PM] szybet
Nice!


[5/21/2022 1:02 AM] nonasuomy
@tux-linux since we already have the modules on one of the SDCard partitions could we just mount it into our init directory? Or would it have to be compiled with the same compiler?


[5/21/2022 1:02 AM] szybet
i think with the same one


[5/21/2022 1:02 AM] szybet
¯\_(ツ)_/¯


[5/21/2022 3:22 AM] tux_linux
Modules are usually tied to the initial kernel build
If there is a config change, they will need to be rebuilt


[5/21/2022 5:05 AM] tux_linux
Put it on internet archive


[5/30/2022 12:11 AM] tux_linux
```
sd_card_PRS-T1_1.0.07_adb_enabled.bin
```
The altered U-Boot from this image loads the kernel from the external SD card too?


[5/30/2022 12:13 AM] nonasuomy
Yes


[5/30/2022 12:13 AM] tux_linux
good


[5/30/2022 12:22 AM] tux_linux
successfully got boot-looped 👍 
that is the right kernel source? strange link
https://prodgpl.blob.core.windows.net/download/Audio/common/2UrziX9Zanih0kfZRY4U3Q/linux-2.6.35.2-20140522-2.tgz


[5/30/2022 12:22 AM] nonasuomy
Yes


[5/30/2022 12:22 AM] tux_linux
Good, will put it in InkBox kernel repo


[5/30/2022 12:22 AM] nonasuomy
I don’t know why they have that domain


[5/30/2022 12:23 AM] tux_linux
It would be nice if we could make that U-Boot work over USB serial too


[5/30/2022 12:24 AM] nonasuomy
Does uboot support that?


[5/30/2022 12:24 AM] tux_linux
It seems to


[5/30/2022 12:24 AM] tux_linux
But nobody has tested it (AFAIK)


[5/30/2022 12:56 AM] tux_linux
```
Image Name:   Linux-2.6.35.3
Created:      Sun May 29 18:55:35 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    4412320 Bytes = 4308.91 KiB = 4.21 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```
how come it's 4.21 MiB


[5/30/2022 12:56 AM] tux_linux
I took same busybox and kernel config


[5/30/2022 12:56 AM] tux_linux
and same toolchain


[5/30/2022 12:57 AM] tux_linux
nvm
wrong initrd path


[5/30/2022 12:57 AM] tux_linux
```
Image Name:   Linux-2.6.35.3
Created:      Sun May 29 18:57:06 2022
Image Type:   ARM Linux Kernel Image (uncompressed)
Data Size:    1409876 Bytes = 1376.83 KiB = 1.34 MiB
Load Address: 70008000
Entry Point:  70008000
  Image arch/arm/boot/uImage is ready
```
better


[5/30/2022 1:25 AM] nonasuomy
Why so small?


[5/30/2022 1:25 AM] tux_linux
upx


[5/30/2022 1:26 AM] nonasuomy
I did the same but it was 2.2mb


[5/30/2022 1:26 AM] tux_linux
i also disabled some kernel features


[5/30/2022 1:30 AM] tux_linux
did we find how to fix that vcom issue at some point?
nothing has booted right now but I'd like to know


[5/30/2022 1:35 AM] nonasuomy
I looked into it further and it's because it has no idea how to read the eMMC

{Reactions}
👍 

[5/30/2022 1:35 AM] nonasuomy
It may work for you as you still have the eMMC intact


[5/30/2022 1:35 AM] nonasuomy
or not


[5/30/2022 1:35 AM] nonasuomy
because we don't have the modules compiled


[5/30/2022 2:42 AM] tux_linux
U-Boot doesn't seem to load kernel from sec 2048


[5/30/2022 2:43 AM] tux_linux
more like 1048756 according to binwalk


[5/30/2022 2:43 AM] nonasuomy
which is what the normal kernel?


[5/30/2022 2:43 AM] nonasuomy
partition


[5/30/2022 2:43 AM] tux_linux
wdym?


[5/30/2022 2:44 AM] tux_linux
I got the adb enabled image booted on external SD, now I want to flash a kernel on it to see if my build stack works before pushing to the repo


[5/30/2022 2:49 AM] tux_linux
nvm actually /dev/mmcblk0 wasn't existing in adb


[5/30/2022 2:52 AM] nonasuomy
ys/module/rawdatatable/parameters/rawdata_param
MBR :0x00000000:0x00000400
uBoot :0x00000400:0x000bfc00
Boot Env :0x000c0000:0x00020000
Reserved1 :0x000e0000:0x00020000
Normal Kernel :0x00100000:0x00400000
Normal Rootfs :0x00500000:0x00100000
Recovery Kernel :0x00600000:0x00400000
Reserved2 :0x00a00000:0x00500000
Normal Boot Env :0x00f00000:0x00020000
Recovery Boot Env :0x00f20000:0x00020000
Raw Data Table :0x00f40000:0x00020000
Info :0x00f60000:0x00020000
Id :0x00f80000:0x00020000
Reserved3 :0x00fa0000:0x00060000
Boot Image :0x01000000:0x00100000
Waveform :0x01100000:0x00200000
LOG :0x01300000:0x00500000


Bytes in Decimal
MBR :0:1024
uBoot :1024:785408
Boot Env :786432:131072
Reserved1 :917504:131072
Normal Kernel :1048576:4194304 <====
Normal Rootfs :5242880:1048576
Recovery Kernel :6291456:4194304
Reserved2 :10485760:5242880
Normal Boot Env :15728640:131072
Recovery Boot Env :15859712:131072
Raw Data Table :15990784:131072
Info :16121856:131072
Id :16252928:131072
Reserved3 :16384000:393216
Boot Image :16777216:1048576
Waveform :17825792:2097152
LOG :19922944:5242880


[5/30/2022 2:54 AM] tux_linux
I used `dd if=/data/local/tmp/uImage of=/dev/block/mmcblk0 bs=512 seek=2048`
It rebooted and UI started fine
Though adb/USB debugging has disappeared, so I can't see if it has actually booted that kernel
and it can't seem to detect that I plugged in USB


[5/30/2022 2:54 AM] nonasuomy
I thought I put this in the wiki but I guess I only added the last 5 entry conversions


[5/30/2022 2:55 AM] nonasuomy
yeah that stuff won't work with our kernel


[5/30/2022 2:55 AM] tux_linux
because..?


[5/30/2022 2:55 AM] nonasuomy
I tried to add just the serial terminal back


[5/30/2022 2:55 AM] tux_linux
maybe modules?


[5/30/2022 2:55 AM] nonasuomy
because we don't load the modules


[5/30/2022 2:55 AM] tux_linux
I guess it's a good sign then hehe


[5/30/2022 2:55 AM] tux_linux
Screen works as it did before


[5/30/2022 2:56 AM] tux_linux
(half-broken, but no change)


[5/30/2022 2:56 AM] nonasuomy
like you see the opening book animation and then nothing else


[5/30/2022 2:56 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/PXL_20220530_005612017-47E5C.jpg


[5/30/2022 2:56 AM] tux_linux
not here 😉


[5/30/2022 2:57 AM] nonasuomy
that's with your kernel?


[5/30/2022 2:57 AM] tux_linux
i guess?


[5/30/2022 2:57 AM] tux_linux
can't be sure of anything


[5/30/2022 2:57 AM] tux_linux
but it seems so


[5/30/2022 2:57 AM] nonasuomy
does the interface work?


[5/30/2022 2:57 AM] tux_linux
since USB does not work at all


[5/30/2022 2:57 AM] nonasuomy
can you press the buttons?


[5/30/2022 2:57 AM] tux_linux
yes, UI, touch input, buttons work


[5/30/2022 2:58 AM] tux_linux
It probably loads vcom from emmc


[5/30/2022 2:58 AM] nonasuomy
Ok I've never had my screen plugged in


[5/30/2022 2:58 AM] nonasuomy
but yes that too


[5/30/2022 3:02 AM] nonasuomy
check the info screen if it's all 00000 then it's loading from the sdcard


[5/30/2022 3:02 AM] tux_linux
yes it is


[5/30/2022 3:02 AM] tux_linux
anyways, previous firmware version didn't have kobo store


[5/30/2022 3:03 AM] nonasuomy
that too


[5/30/2022 3:03 AM] tux_linux
led for sd flashes a lot


[5/30/2022 3:04 AM] tux_linux
booting rupor's recovery had no effect
stuck on opening book screen
so I guess it can't read the vcom?
strange


[5/30/2022 3:05 AM] tux_linux
when rebooting with other sd card it works again


[5/30/2022 3:06 AM] tux_linux
oh well... @NiLuJe this definitely causes more brain damage than any Kindle... 😂


[5/30/2022 3:07 AM] nonasuomy
rupor's won't work until you change the uboot back.


[5/30/2022 3:07 AM] nonasuomy
env


[5/30/2022 3:07 AM] tux_linux
oh


[5/30/2022 3:08 AM] tux_linux
but then it won't boot the right kernel


[5/30/2022 3:08 AM] nonasuomy
correct


[5/30/2022 3:08 AM] tux_linux
and I don't really want to risk the emmc


[5/30/2022 3:08 AM] tux_linux
https://github.com/Kobo-InkBox/kernel/commit/5824826abc616ae05a19a9fe5cfdb4396e80f741
I put kernel sources there


[5/30/2022 3:08 AM] tux_linux
nothing complete yet, just a base


[5/30/2022 3:09 AM] nonasuomy
when you hold the home and menu button it normally sends the device to the recovery kernel


[5/30/2022 3:09 AM] nonasuomy
which knows how to unpack the rupor update.img


[5/30/2022 3:09 AM] tux_linux
yeah I was wondering how U-Boot would do that
makes sense now


[5/30/2022 3:33 AM] nonasuomy
There is a hidden test menu that enables adb if there is this file on the sdcard (which it already is there) you can try to press the ADB button and see what happens probably nothing with the modules.


[5/30/2022 3:34 AM] tux_linux
What's the ADB button?


[5/30/2022 3:35 AM] nonasuomy
HOW TO ENTER THE TEST MODE
Procedure:
1. Press the [1] key to turn the power on.
2. Confi rm the HOME menu was completely displayed, and con-
nect this unit to PC by the USB cable (MICRO B).
3. Confi rm the USB connection screen displayed, and touch the
“Data Transfer Mode”.
4. Confi rm the “READER” drive of this unit is recognized.
5. Copy the file for the test mode from PC to directly under the
“READER” drive of this unit.
6. Remove this unit and USB cable (MICRO B) from PC.
7. Confi rm the HOME menu was completely displayed, and
press the key as following order.
[>] Back [<] Back  
8. After a while, the test mode menu is displayed, and this unit
enters the test mode.


[5/30/2022 3:35 AM] tux_linux
Step 3 will fail


[5/30/2022 3:35 AM] nonasuomy
just ignore all the starting stuff and make sure its at home


[5/30/2022 3:35 AM] nonasuomy
then push > back < back


[5/30/2022 3:36 AM] nonasuomy
Just be careful in that menu as you can write vcom voltages and stuff


[5/30/2022 3:37 AM] nonasuomy
the option is switch adb


[5/30/2022 3:37 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-67C61.png


[5/30/2022 3:38 AM] tux_linux
it does nothing
like, what's > back < back?


[5/30/2022 3:38 AM] tux_linux
just flips pages of the home menu


[5/30/2022 3:39 AM] nonasuomy
the page forward button then the back menu button then the page back button then the menu back button again.


[5/30/2022 3:40 AM] nonasuomy
I should have a look at that script how it triggers reboot normal and reboot recovery


[5/30/2022 3:41 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/PXL_20220530_014051513-5FD8E.jpg


[5/30/2022 3:41 AM] nonasuomy
Nice at least you got there.


[5/30/2022 3:41 AM] nonasuomy
defo module missing thing I think


[5/30/2022 3:41 AM] tux_linux
yeah, I'm surprised it gave an error


[5/30/2022 3:41 AM] tux_linux
i'll try to compile them


[5/30/2022 3:42 AM] nonasuomy
oh or maybe put that file in your _install directory


[5/30/2022 3:42 AM] nonasuomy
one sec


[5/30/2022 3:42 AM] tux_linux
no, my kernel hasn't any initrd enabled


[5/30/2022 3:42 AM] tux_linux
I just compiled with the stock configuration


[5/30/2022 3:42 AM] tux_linux
otherwise it wouldn't have booted


[5/30/2022 3:42 AM] tux_linux
(yet)


[5/30/2022 3:42 AM] nonasuomy
oh ok that's why it worked haha


[5/30/2022 3:42 AM] nonasuomy
was weirding me out...


[5/30/2022 3:43 AM] tux_linux
but the modules issue makes sense


[5/30/2022 3:43 AM] tux_linux
they are probably incompatible or smth


[5/30/2022 3:43 AM] nonasuomy
maybe grab 4.4.0


[5/30/2022 3:43 AM] nonasuomy
I found it above some place


[5/30/2022 3:44 AM] tux_linux
if the kernel got there, I doubt a toolchain change will fix it


[5/30/2022 3:44 AM] nonasuomy
think microsoft had it


[5/30/2022 3:44 AM] nonasuomy
I just meant then you probably wouldn't have to compile the modules again


[5/30/2022 3:44 AM] nonasuomy
as they are already on there with that version


[5/30/2022 3:46 AM] nonasuomy
https://microsoft.github.io/mu/dyn/mu_tiano_plus/CryptoPkg/Library/OpensslLib/openssl/boringssl/third_party/android-cmake/ndk_links/

{Embed}
https://microsoft.github.io/mu/dyn/mu_tiano_plus/CryptoPkg/Library/OpensslLib/openssl/boringssl/third_party/android-cmake/ndk_links/
ndk links - Project Mu
Project Mu Documentation


[5/30/2022 3:46 AM] nonasuomy
Think it was in this package

{Reactions}
👍 

[5/30/2022 3:46 AM] nonasuomy
http://dl.google.com/android/ndk/android-ndk-r5c-darwin-x86.tar.bz2


[5/30/2022 4:01 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/rVPzp8O1j0m01oOq-4CFD7.crsZVu8crtmXG


[5/30/2022 4:01 AM] nonasuomy
this has to be on the root of partition 9 for adb to function from that service menu


[5/30/2022 4:02 AM] tux_linux
ok will do that


[5/30/2022 4:03 AM] nonasuomy
(it's already on that 1.0.07 image)


[5/30/2022 4:03 AM] nonasuomy
I'm just wondering if its confusing files mixed with the stock eMMC version and the SD image


[5/30/2022 4:04 AM] nonasuomy
so maybe if you put that on the user partition of the eMMC it will do something interesting


[5/30/2022 4:04 AM] tux_linux
we will see


[5/30/2022 4:09 AM] nonasuomy
User partition should look something like this with it.
```
OS Firmware
Sony_Reader
rVPzp8O1j0m01oOq.crsZVu8crtmXGrc2
```

{Reactions}
👍 

[5/30/2022 4:24 AM] tux_linux
```
nicolas@fedora ~> ls /mnt/tombstones/
tombstone_00  tombstone_01  tombstone_02  tombstone_03  tombstone_04  tombstone_05  tombstone_06  tombstone_07  tombstone_08  tombstone_09
nicolas@fedora ~>
```
...ok?


[5/30/2022 4:24 AM] tux_linux
this is p9


[5/30/2022 4:24 AM] tux_linux
```
nicolas@fedora ~> ls /mnt
anr/  app/  app-private/  backup/  dalvik-cache/  data/  dontpanic/  local/  lost+found/  misc/  property/  system/  tombstones/
nicolas@fedora ~>
```


[5/30/2022 4:24 AM] nonasuomy
weird


[5/30/2022 4:24 AM] nonasuomy
one sec let me look at your image


[5/30/2022 4:24 AM] tux_linux
I'm using the adb enabled one
in the SD


[5/30/2022 4:24 AM] tux_linux
I can't access the eMMC


[5/30/2022 4:26 AM] nonasuomy
Ok well your image has it as partition 8 for what it's worth


[5/30/2022 4:27 AM] tux_linux
```
nicolas@fedora ~> ls /mnt
audio/  books/  lost+found/  notepads/  pictures/  preload.xml*  userguide/
nicolas@fedora ~>
```


[5/30/2022 4:27 AM] tux_linux
not any OS Firmware folder or anything


[5/30/2022 4:27 AM] nonasuomy
It should be the largest partition


[5/30/2022 4:27 AM] nonasuomy
basically where you store books


[5/30/2022 4:28 AM] nonasuomy
This is the sample data partition


[5/30/2022 4:28 AM] tux_linux
```
nicolas@fedora ~> ls /mnt
'OS Firmware'/   rVPzp8O1j0m01oOq.crsZVu8crtmXGrc2*   Sony_Reader/
nicolas@fedora ~>
```
then, it is already there


[5/30/2022 4:28 AM] tux_linux
(p4)


[5/30/2022 4:28 AM] nonasuomy
yes as said above


[5/30/2022 4:28 AM] nonasuomy
I said the SD image already has it there but your eMMC doesn't


[5/30/2022 4:30 AM] nonasuomy
He modified the that image to load things from SD I'm thinking when you rebuild the kernel it doesn't have whatever he changed in it.


[5/30/2022 4:30 AM] nonasuomy
There is a whole bunch of ADB stuff in the kernel that I removed


[5/30/2022 4:30 AM] nonasuomy
as I was trying to get the Serial Terminal working


[5/30/2022 4:30 AM] nonasuomy
grab his /proc/config.gz


[5/30/2022 4:31 AM] nonasuomy
(not from your modification)


[5/30/2022 4:31 AM] tux_linux
I will need to reflash his kernel first


[5/30/2022 4:31 AM] nonasuomy
then recompile


[5/30/2022 4:31 AM] tux_linux
But I'm not sure just ripping it from the image will work
I've never had luck with that in the past


[5/30/2022 4:33 AM] nonasuomy
Should be fine if you don't modify it.


[5/30/2022 4:34 AM] nonasuomy
I may have already dumped it in the chat


[5/30/2022 4:40 AM] nonasuomy
Can a nonroot adb shell push CONFIG_KEXEC=y to a different kernel?


[5/30/2022 4:41 AM] tux_linux
it can only be done via kernel recompilation


[5/30/2022 4:42 AM] tux_linux
if it's nonroot, probably not since it won't be able to access mmcblk0 via dd


[5/30/2022 4:42 AM] nonasuomy
I think I was trying to copy rupor's serial gadget config to our kernel


[5/30/2022 4:43 AM] nonasuomy
I just  meant if you got the sd kernel to work stock and then made that single change


[5/30/2022 4:44 AM] tux_linux
it should work


[5/30/2022 4:44 AM] tux_linux
yeah


[5/30/2022 4:44 AM] tux_linux
but a thing I observed from the Kindle is that only uncompressed kernels seem to work


[5/30/2022 4:44 AM] tux_linux
otherwise it just hangs


[5/30/2022 4:45 AM] nonasuomy
makes sense


[5/30/2022 4:45 AM] nonasuomy
as uImage is only meant for UBoot.


[5/30/2022 4:45 AM] tux_linux
but I don't know about vcom, epdc, modules, etc.


[5/30/2022 4:45 AM] tux_linux
it might "boot", but that's it


[5/30/2022 4:49 AM] nonasuomy
The kernel modules all seem to be about usb related things


[5/30/2022 5:08 AM] nonasuomy
https://vladboroda-livejournal-com.translate.goog/180169.html?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en

{Embed}
https://vladboroda-livejournal-com.translate.goog/180169.html?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en
PRS-T1 Android rooting (дискуссия)
Если интересно, могу описать прогресс в области "укрощения" Андроида на новых ридерах (PRS-T1). Пока похоже, что без помощи людей, понимающих специфику Андроида, обойтись едва ли получится. 1) Мы имеем полный доступ к флешу (eMMC) ридера. В принципе, у нас есть возможность скачать или залить любой…
/mnt/data/projects/git/conversations/media/sign-E0C67.png


[5/30/2022 5:36 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/prs_commands-51AFD.txt


[5/30/2022 5:36 AM] nonasuomy
This is the persons terminal session of when they created the sd image


[5/30/2022 5:42 AM] tux_linux
thanks, lots to look at there


[5/30/2022 5:44 AM] nonasuomy
https://github.com/julbouln/ice40_eink_controller/tree/master/utils/wbf_dump

{Embed}
https://github.com/julbouln/ice40_eink_controller/tree/master/utils/wbf_dump
ice40_eink_controller/utils/wbf_dump at master · julbouln/ice40_ein...
ice40 FPGA eink controller. Contribute to julbouln/ice40_eink_controller development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/ice40_eink_controller-B3DD6


[5/30/2022 5:59 AM] nonasuomy
https://www.mobileread.com/forums/showthread.php?p=2207783#post2207783

{Embed}
https://www.mobileread.com/forums/showthread.php?p=2207783
PRS-T1 Altering Root FS - MobileRead Forums
PRS-T1 Altering Root FS Sony Reader Dev Corner


[6/1/2022 2:56 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1633-1CFB2.jpg


[6/1/2022 5:04 AM] tux_linux
...cool, it's your serial board?


[6/1/2022 5:08 AM] nonasuomy
Logic Level Bi directional converter

{Reactions}
👍 

[6/1/2022 5:08 AM] nonasuomy
.


[6/1/2022 5:08 AM] tux_linux
Oooh nice


[6/1/2022 5:10 AM] nonasuomy
You would probably be able to use something like that also to convert your ttl 3.3v to 1.8v not sure if txb would be better for that.


[6/1/2022 5:10 AM] tux_linux
My little circuit I have works well currently


[6/1/2022 5:12 AM] nonasuomy
Whatever works I suppose... unless that whatever is use a knife on a screw 😅


[6/1/2022 5:12 AM] tux_linux
The circuit was for the Kindle


[6/1/2022 5:13 AM] tux_linux
No need to unscrew anything there


[6/1/2022 5:13 AM] tux_linux
Clips 😉


[6/1/2022 5:13 AM] nonasuomy
Yeah I just saw this message when i was looking for that other message https://discord.com/channels/809205711778480158/935603767284469830/970375708356542474

{Reactions}
👍 

[6/1/2022 5:16 AM] nonasuomy
My only caution now though is not sure about removing caps to test it. I could technically just use our busybox setup just to flash the eMMC again


[6/1/2022 5:17 AM] nonasuomy
I just don't want to destroy the raw part at the start of the drive


[6/1/2022 5:18 AM] nonasuomy
As that is still intact.


[6/1/2022 5:48 AM] tux_linux
Maybe you could connect your tf card extender something to it ;)


[6/1/2022 5:58 AM] nonasuomy
I was thinking about soldering wires to this then to that board then using the same method with probes and those wood clamps to stick the probes on the contacts.

{Attachments}
/mnt/data/projects/git/conversations/media/43E031F8-8621-4217-9419-7A466422458D-74D21.jpg


[6/2/2022 11:29 PM] tux_linux
@NiLuJe does FBInk actually support the PRS-T1?


[6/2/2022 11:30 PM] tux_linux
because, without it, we are pretty much bound to failure \:)


[6/2/2022 11:31 PM] ninuje
Not per se, but it's apparently the same (or very similar) ioctls as the early Kindle 5.x & Kobos


[6/2/2022 11:31 PM] tux_linux
Ok thanks, so a test build for KT could probably "work" on it?


[6/2/2022 11:32 PM] ninuje
No, you'll need a device identification framework to wire stuff up properly


[6/2/2022 11:32 PM] tux_linux
oh you're right


[6/2/2022 11:32 PM] tux_linux
missing usid


[6/2/2022 11:33 PM] nonasuomy
What does that mean exactly?


[6/2/2022 11:33 PM] tux_linux
On Kindle, `/proc/usid` contains the serial number


[6/2/2022 11:33 PM] tux_linux
FBInk uses it to guess what device it's running on


[6/2/2022 11:34 PM] ninuje
The fallback case might work, though


[6/2/2022 11:34 PM] tux_linux
It's... kinda difficult to fool it, provided that we don't even know if we can boot a custom working kernel for sure or not


[6/2/2022 11:34 PM] ninuje
More likely for a PB or Kobo build than a Kindle one, though

{Reactions}
👍 

[6/2/2022 11:34 PM] tux_linux
it's something to try


[6/2/2022 11:34 PM] ninuje
Kindles were always using a custom struct


[6/2/2022 11:34 PM] ninuje
(except some very early 5.0 FW, but that's not the fallback)


[6/2/2022 11:36 PM] nonasuomy
What does the serial number look like?


[6/2/2022 11:37 PM] ninuje
https://wiki.mobileread.com/wiki/Kindle_Serial_Numbers

{Embed}
https://wiki.mobileread.com/wiki/Kindle_Serial_Numbers
Kindle Serial Numbers


[6/2/2022 11:38 PM] ninuje
Yeah, same ioctl as early Kobos


[6/2/2022 11:39 PM] ninuje
(At least on the kernel used by the port :D)

{Reactions}
👍 

[6/3/2022 12:00 AM] tux_linux
@NonaSuomy can you please try this on yours and post serial boot output? Have given up on mine, at least for now ^^

{Attachments}
/mnt/data/projects/git/conversations/media/uImage-D3A72

{Reactions}
🥺 

[6/3/2022 12:37 AM] nonasuomy
What has been done with this uImage?


[6/3/2022 12:37 AM] tux_linux
A simple busybox rcs that tells it to power off after 15secs


[6/3/2022 12:39 AM] nonasuomy
FBink would have to read the raw data for the unique serial number.


[6/3/2022 12:42 AM] nonasuomy
What does this sticker say for you?


[6/3/2022 12:44 AM] nonasuomy
Here is the serial string


[6/3/2022 1:04 AM] nonasuomy
@NiLuJe https://essentialscrap.com/eink/ED060SC4V2.pdf


[6/3/2022 1:23 AM] nonasuomy
@NiLuJe and this 

```
#include <linux/fb.h>
#include "mxcfb.h"
#include <sys/mman.h>
#include <stdlib.h>
#include <sys/ioctl.h>

  int fd = open("/dev/fb0",O_RDWR);
  if(!fd || fd==-1)
    exit(1);
  {
    struct mxcfb_update_data u;
    u.update_region.top=0;
    u.update_region.left=0;
    u.update_region.width=800;
    u.update_region.height=600;
    // i read in  mxc_epdc_fb.c in the kernel source                            
    // to figure out the following                                              
    u.update_mode =  UPDATE_MODE_FULL;
    u.waveform_mode = 4;  // fast black-and-white waveform, with no flashing
    //WAVEFORM_MODE_AUTO;     // blinking gray value waveform                              
    int marker = 1;
    u.update_marker = marker;
    u.flags=0;
    if(0>ioctl(fd,MXCFB_SEND_UPDATE,&u))
      printf("problem with update\n");
    if(0>ioctl(fd,MXCFB_WAIT_FOR_UPDATE_COMPLETE,&marker))
      printf("problem during wait\n");
  }
  close(fd);

```


[6/3/2022 2:02 AM] nonasuomy
Hmm just loaded my kernel instead of yours


[6/3/2022 2:34 AM] nonasuomy
Oh you added block after dev for some reason


[6/3/2022 2:34 AM] tux_linux
?


[6/3/2022 2:34 AM] tux_linux
That's how I flashed it in ADB


[6/3/2022 2:34 AM] tux_linux
Because `/dev/mmcblk0` didn't exist


[6/3/2022 2:35 AM] nonasuomy
Yeah wasn't paying attention and just used the last dd command in the chat I saw haha

{Reactions}
👍 

[6/3/2022 2:36 AM] nonasuomy
Can you check out that sticker on the mainboard?


[6/3/2022 2:36 AM] nonasuomy
What are the values


[6/3/2022 2:36 AM] nonasuomy
white long sticker


[6/3/2022 2:36 AM] tux_linux
BW1112015900320


[6/3/2022 2:37 AM] nonasuomy
on your flex cable what is the vcom voltage?


[6/3/2022 2:37 AM] tux_linux
-2.19?


[6/3/2022 2:37 AM] nonasuomy
-2.46?


[6/3/2022 2:38 AM] nonasuomy
ah interesting.


[6/3/2022 2:38 AM] nonasuomy
what are the numbers inside the cable?


[6/3/2022 2:38 AM] nonasuomy
(on the backside)


[6/3/2022 2:40 AM] tux_linux
ED060SCE(LF)C1
E4K008G41L7V04505AT
EET60B7025(E164)


[6/3/2022 2:43 AM] nonasuomy
```
U-Boot 2009.08 (Dec 21 2011 - 14:48:38)

CPU:   Freescale i.MX50 family 1.1V at 800 MHz
mx50 pll1: 800MHz
mx50 pll2: 400MHz
mx50 pll3: 216MHz
ipg clock     : 66666666Hz
ipg per clock : 66666666Hz
uart clock    : 24000000Hz
ahb clock     : 133333333Hz
axi_a clock   : 400000000Hz
axi_b clock   : 200000000Hz
weim_clock    : 100000000Hz
ddr clock     : 160000000Hz
esdhc1 clock  : 80000000Hz
esdhc2 clock  : 80000000Hz
esdhc3 clock  : 80000000Hz
esdhc4 clock  : 80000000Hz
Board: MX50 ARM2 board
Boot Reason: [POR]
Boot Device: MMC
I2C:   ready
DRAM:  256 MB
MMC:   FSL_ESDHC: 0, FSL_ESDHC: 1, FSL_ESDHC: 2
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
temperature 25
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
MMC set clock 50MHz
In:    serial
Out:   serial
Err:   serial
Net:   got MAC address from IIM: 00:00:00:00:00:00
FEC0
Hit any key to stop autoboot:  0

MMC read: dev # 0, block # 2048, count 5120 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
5120 blocks read: OK

MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
```


[6/3/2022 2:44 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/message-4326C.txt


[6/3/2022 2:45 AM] nonasuomy
Full on kernel panic


[6/3/2022 2:47 AM] tux_linux
still that vcom error
how did we get to busybox prompt before then?


[6/3/2022 2:47 AM] tux_linux
does it power off at least?


[6/3/2022 2:48 AM] nonasuomy
I wouldn't know as it kernel panics and then the watchdog restarts it.


[6/3/2022 2:49 AM] nonasuomy
Right after that Freeing init Memory, with the kernel I compiled I could hit enter and get a prompt. Alas the kernel panic prevents that from happening.


[6/3/2022 3:04 AM] nonasuomy
https://www.youtube.com/watch?v=xaQ9eX-b6GA

{Embed}
Ultimate Handyman
https://www.youtube.com/watch?v=xaQ9eX-b6GA
How to remove small stripped screws | stripped laptop screws | stri...
Removing small stripped screws can be difficult, in this video I remove some small rounded or stripped screws from a couple of small items including a mobile phone. There are a lot of different types of screw head/drivers available and so it’s best to get the correct driver to prevent the screw head from being damaged in the first place.

Common...
/mnt/data/projects/git/conversations/media/maxresdefault-B7D81.jpg


[6/3/2022 3:06 AM] nonasuomy
The elastic band looks interesting


[6/3/2022 3:13 AM] nonasuomy
Would have love to see with all your files intact if you got the same error still


[6/3/2022 3:16 AM] nonasuomy
or the crazy glue ( as long as you're careful to not spill it on the board, gluing the board to the case, or the screw to the board, etc)


[6/3/2022 3:24 AM] nonasuomy
https://www.youtube.com/watch?v=TEYgVsPcWjE

{Embed}
Go Cell Phone Repair
https://www.youtube.com/watch?v=TEYgVsPcWjE
How to Remove Stripped Screws from a Phone
This video tutorial will demonstrate how to remove stripped screws from a cell phone or tablet using several different tools and techniques. This can be difficult in some cases and while there is no guarantee that all of them will work hopefully following the advice given here will help you to accomplish your goal.

Thanks for the great comments...
/mnt/data/projects/git/conversations/media/maxresdefault-617CB.jpg


[6/3/2022 3:24 AM] nonasuomy
Haha at the starting warning... you may damage your board...


[6/3/2022 3:38 AM] tux_linux
i tried everything, I told you


[6/3/2022 3:39 AM] nonasuomy
I don't remember you saying details of what you did


[6/3/2022 3:42 AM] tux_linux
IT MOVES

{Reactions}
😅 

[6/3/2022 3:45 AM] nonasuomy
Not sure if you have taken a flex cable out from one of those connectors from the power board but you flip up that black bar on it.


[6/3/2022 3:47 AM] tux_linux
At. Last.

{Attachments}
/mnt/data/projects/git/conversations/media/PXL_20220603_014638359-D0C14.jpg


[6/3/2022 3:47 AM] nonasuomy
w00t


[6/3/2022 3:47 AM] nonasuomy
what finally did it?


[6/3/2022 3:47 AM] tux_linux
cut the screw with a pair of scissors


[6/3/2022 3:47 AM] nonasuomy
haha mmkay


[6/3/2022 3:48 AM] tux_linux
This is the "screw"

{Attachments}
/mnt/data/projects/git/conversations/media/PXL_20220603_014813947-6A79F.jpg


[6/3/2022 3:49 AM] nonasuomy
RIP

{Reactions}
😂 

[6/3/2022 3:49 AM] tux_linux
It seems I also stripped off some resistors from Cirrus Audio chip, but the display still works alright, I don't mind that much about audio, anyway we can use your device for that


[6/3/2022 3:49 AM] tux_linux
now... let's connect that @$#@ thing to serial


[6/3/2022 3:50 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/unknown-C3776.png

{Reactions}
👍 

[6/3/2022 3:52 AM] nonasuomy
How will you keep the wires on?


[6/3/2022 3:52 AM] tux_linux
dark magic


[6/3/2022 3:52 AM] nonasuomy
do you have wood clamps?


[6/3/2022 3:52 AM] tux_linux
no, I have my tips & tricks


[6/3/2022 3:53 AM] tux_linux
mind you, kindle pw3 is even harder than that


[6/3/2022 3:53 AM] nonasuomy
How so?


[6/3/2022 3:53 AM] tux_linux
e.g. hold it with blue tack


[6/3/2022 3:53 AM] nonasuomy
Technically in the beginning I just held it with my hand haha.


[6/3/2022 3:53 AM] tux_linux
well, I will do that first


[6/3/2022 3:56 AM] nonasuomy


{Attachments}
/mnt/data/projects/git/conversations/media/IMG_1638-91A3C.jpg


[6/3/2022 3:56 AM] tux_linux
yaayyy


[6/3/2022 3:56 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/message-37F58.txt

{Reactions}
🥳 

[6/3/2022 3:56 AM] tux_linux
My display is not connected
Maybe the vcom error is only because of that


[6/3/2022 3:58 AM] nonasuomy
Maybe I think there is some chip in the cable or display


[6/3/2022 3:59 AM] nonasuomy
is that stock kernel?


[6/3/2022 3:59 AM] nonasuomy
"build@inkbox" n/m


[6/3/2022 4:00 AM] nonasuomy
Probably just same issue with modules not compiling.


[6/3/2022 4:01 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/PXL_20220603_020107540-C43AE.jpg


[6/3/2022 4:02 AM] nonasuomy
haha very nice.


[6/3/2022 4:03 AM] nonasuomy
now just don't tear the power flex ribbon every time you need to remove the sdcard 😬


[6/3/2022 4:04 AM] nonasuomy
maybe stick some sticky tack on that large cap so it doesn't touch that cast frame as well


[6/3/2022 4:04 AM] nonasuomy
as the cast frame is electrically conductive


[6/3/2022 4:12 AM] nonasuomy
Blue magic.

{Reactions}
👍 

[6/3/2022 4:50 AM] tux_linux
```
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    286848 Bytes = 280.1 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
```
 I think this is the key


[6/3/2022 4:50 AM] tux_linux
It's an initrd image


[6/3/2022 4:50 AM] tux_linux
With InkBox initrd it isn't loaded, our BusyBox is instead


[6/3/2022 4:50 AM] tux_linux
In that image it must set up vcom, etc.


[6/3/2022 4:58 AM] tux_linux
Hehe
```
nicolas@fedora /t/w/_initrd.img.extracted [SIGINT]> cpio -t < 41-out
data
default.prop
dev
ebook
ebook/dic
ebook/fonts
ebook/preload
init
init.goldfish.rc
init.rc
lib
lib/modules
lib/modules/2.6.35.3
lib/modules/2.6.35.3/build
lib/modules/2.6.35.3/kernel
lib/modules/2.6.35.3/kernel/drivers
lib/modules/2.6.35.3/kernel/drivers/usb
lib/modules/2.6.35.3/kernel/drivers/usb/gadget
lib/modules/2.6.35.3/kernel/drivers/usb/gadget/arcotg_udc.ko
lib/modules/2.6.35.3/kernel/drivers/usb/gadget/g_android.ko
lib/modules/2.6.35.3/kernel/drivers/usb/host
lib/modules/2.6.35.3/kernel/drivers/usb/host/ehci-hcd.ko
lib/modules/2.6.35.3/kernel/drivers/usb/serial
lib/modules/2.6.35.3/kernel/drivers/usb/serial/usbserial.ko
lib/modules/2.6.35.3/modules.alias
lib/modules/2.6.35.3/modules.alias.bin
lib/modules/2.6.35.3/modules.builtin
lib/modules/2.6.35.3/modules.builtin.bin
lib/modules/2.6.35.3/modules.ccwmap
lib/modules/2.6.35.3/modules.dep
lib/modules/2.6.35.3/modules.dep.bin
lib/modules/2.6.35.3/modules.ieee1394map
lib/modules/2.6.35.3/modules.inputmap
lib/modules/2.6.35.3/modules.isapnpmap
lib/modules/2.6.35.3/modules.ofmap
lib/modules/2.6.35.3/modules.order
lib/modules/2.6.35.3/modules.pcimap
lib/modules/2.6.35.3/modules.seriomap
lib/modules/2.6.35.3/modules.symbols
lib/modules/2.6.35.3/modules.symbols.bin
lib/modules/2.6.35.3/modules.usbmap
lib/modules/2.6.35.3/source
proc
sbin
sbin/ts_calibrator
sys
system
842 blocks
nicolas@fedora /t/w/_initrd.img.extracted>
```


[6/3/2022 4:58 AM] tux_linux
you were right it seems


[6/3/2022 4:59 AM] nonasuomy
Yay!


[6/3/2022 5:00 AM] tux_linux


{Attachments}
/mnt/data/projects/git/conversations/media/initrd.tar-9FEB8.xz


[6/3/2022 5:01 AM] tux_linux
the init.rc files do a LOT of things


[6/3/2022 5:04 AM] nonasuomy
You can see those modules in PRSTUX as well.


[6/3/2022 5:04 AM] tux_linux
```
on boot
    setprop ARGH ARGH
```
oki


[6/3/2022 5:04 AM] tux_linux
they had a qemu emulator it seems


[6/3/2022 5:05 AM] nonasuomy
https://gitlab.com/phreakuencies/prstux/-/tree/master/rootfs/bin/modules/2.6.35.3

{Embed}
https://gitlab.com/phreakuencies/prstux/-/tree/master/rootfs/bin/modules/2.6.35.3
rootfs/bin/modules/2.6.35.3 · master · Matias N. / prstux · GitLab
PRS-TUX: Linux system for Sony PRS-T* ebook readers
/mnt/data/projects/git/conversations/media/logo-DE17F.png


[6/3/2022 5:07 AM] tux_linux
This is a really interesting device
I like reverse-engineering

{Attachments}
/mnt/data/projects/git/conversations/media/init-9E9D1.rc


[6/3/2022 5:24 AM] nonasuomy
Yeah seems to do a lot was talking about that before as well.


[6/3/2022 5:25 AM] nonasuomy
Hopefully you find something interesting.

{Reactions}
👍 

[6/3/2022 6:16 AM] nonasuomy
I wonder if they were going to have bluetooth on this device then nix'd it at the last moment keep seeing that all over the codebase


[6/3/2022 12:45 PM] tux_linux
Yeah it's strange


[6/3/2022 1:34 PM] ninuje
We have the mxcfb headers for the Sony kernels


[6/3/2022 1:34 PM] ninuje
Vcom setting is an mxcfb ioctl

{Reactions}
🥳 

[6/3/2022 2:18 PM] nonasuomy
How do you parse the vcom data from the unit?


[6/3/2022 2:49 PM] tux_linux
Right, but there aren't any modules anywhere


[6/3/2022 2:49 PM] tux_linux
Anyways we have them


[6/3/2022 2:58 PM] nonasuomy
Sure I was just saying that you can see they needed them as well and ripped them off the device. You can see in the README one folder above that:
```
These modules are from Sony's recovery root, without any modifications. Original sources can be found at:

http://oss.sony.net/Products/Linux/Audio/Download/PRS-T2_20140625/linux-2.6.35.2-20140522.tgz

License is GPLv2.
```


[6/3/2022 3:04 PM] nonasuomy
wonder why they didn't just run make modules.


[6/3/2022 4:33 PM] nonasuomy
What needs to be done next?


[6/3/2022 8:18 PM] nonasuomy
You can see all the builtin modules

{Attachments}
/mnt/data/projects/git/conversations/media/message-0EB3B.txt


[6/4/2022 12:05 AM] ninuje
I haven't looked at the actual code (mostly because I can't be arsed to find the kernel and I only have the header on hand)


[6/4/2022 12:05 AM] ninuje
So, exercise left to the reader 😉


[6/4/2022 12:05 AM] ninuje
https://github.com/koreader/koreader-base/blob/231cedca240ea62c530968cf132f87bac10e909e/ffi-cdecl/include/mxcfb-sony.h#L174-L176

{Embed}
https://github.com/koreader/koreader-base/blob/231cedca240ea62c530968cf132f87bac10e909e/ffi-cdecl/include/mxcfb-sony.h
koreader-base/mxcfb-sony.h at 231cedca240ea62c530968cf132f87bac10e9...
Base framework offering a Lua scriptable environment for creating document readers - koreader-base/mxcfb-sony.h at 231cedca240ea62c530968cf132f87bac10e909e · koreader/koreader-base
/mnt/data/projects/git/conversations/media/koreader-base-40907


[6/4/2022 12:13 AM] tux_linux
Thanks
Kernel sources are right there: https://github.com/Kobo-InkBox/kernel/tree/master/kernel%2Flinux-2.6.35.3-spt1

{Embed}
https://github.com/Kobo-InkBox/kernel/tree/master/kernel%2Flinux-2.6.35.3-spt1
kernel/kernel/linux-2.6.35.3-spt1 at master · Kobo-InkBox/kernel
Kernel sources for InkBox OS. Contribute to Kobo-InkBox/kernel development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/kernel-8E545

{Reactions}
👍 

[6/4/2022 12:18 AM] ninuje
https://github.com/Kobo-InkBox/kernel/blob/5824826abc616ae05a19a9fe5cfdb4396e80f741/kernel/linux-2.6.35.3-spt1/drivers/video/mxc/mxc_epdc_fb.c#L3184-L3204

{Embed}
https://github.com/Kobo-InkBox/kernel/blob/5824826abc616ae05a19a9fe5cfdb4396e80f741/kernel/linux-2.6.35.3-spt1/drivers/video/mxc/mxc_epdc_fb.c
kernel/mxc_epdc_fb.c at 5824826abc616ae05a19a9fe5cfdb4396e80f741 · ...
Kernel sources for InkBox OS. Contribute to Kobo-InkBox/kernel development by creating an account on GitHub.
/mnt/data/projects/git/conversations/media/kernel-8E545


[6/4/2022 12:18 AM] ninuje
Follow the yellow brick road ;o)


[6/4/2022 12:18 AM] ninuje
(aka, ripgrep is your best friend)

{Reactions}
👍 

[6/4/2022 5:11 AM] tux_linux
```
VFS: Cannot open root device "ram0" or unknown-block(1,0)
```
I am now stuck at this, for some reason


[6/4/2022 9:28 AM] nonasuomy
How so?


[6/4/2022 3:13 PM] tux_linux
I tried to embed Sony's initrd into my kernel


[6/4/2022 3:46 PM] nonasuomy
Probably looking for it to be loaded with uboot how we had it before with the two kernel entries


[6/4/2022 4:00 PM] nonasuomy
```
MMC read: dev # 0, block # 10240, count 600 partition # 0 ...
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x1
imx_esdhc.c bus_width 0x4
imx_esdhc.c bus_width 0x4
SD set clock 50MHz
600 blocks read: OK
## Booting kernel from Legacy Image at 70800000 ...
   Image Name:   Linux-2.6.35.3
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    2246720 Bytes =  2.1 MB
   Load Address: 70008000
   Entry Point:  70008000
   Verifying Checksum ... OK
## Loading init Ramdisk from Legacy Image at 70c00000 ...
   Image Name:   Normal Rootfs
   Image Type:   ARM Linux RAMDisk Image (uncompressed)
   Data Size:    286848 Bytes = 280.1 kB
   Load Address: 70308000
   Entry Point:  70308000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK
```
Ram0 is probably that second entry there: normal rootfs.


[6/4/2022 4:01 PM] tux_linux
I embedded in in the kernel, so it shouldn't need to worry about it
But maybe it overwrites it or smth


[6/4/2022 4:02 PM] nonasuomy
Load up the stock Sd image and check where it points to.


[6/4/2022 4:02 PM] nonasuomy
Over adb


[6/4/2022 4:02 PM] tux_linux
switching between sd and emmc is quirky


[6/4/2022 4:03 PM] nonasuomy
What happens?


[6/4/2022 4:04 PM] tux_linux
Well, last time it behaved really strange
It wouldn't stay on the external sd since there wasn't any available kernel/bootable setup and it auto-switched to the emmc
But then now even when SD is out it's in a boot-loop with red light


[6/4/2022 4:27 PM] nonasuomy
stdin=serial stdout=serial stderr=serial ethact=FEC0 loadaddr=0x70800000 loadaddr_ramdisk=0x70C00000 bootdev=2 rawtable=0xF40000 bootcmd=mmc read 2 ${loadaddr} 0x800 0x1400;mmc read 2 ${loadaddr_ramdisk} 0x2800 0x1F4;bootm ${loadaddr} ${loadaddr_ramdisk} bootargs=console=ttymxc2,115200 init=/init bootdev=2 rawtable=0xF40000


[6/4/2022 4:29 PM] nonasuomy
This is the original uboot env from before adding the sd values


[6/6/2022 5:50 AM] nonasuomy
I think I witnessed the same where it would reset the values above some how to it's original values. I assumed it it was doing a recovery restore some how.

{Reactions}
👍 

[6/6/2022 5:51 AM] nonasuomy
Didn't know if it was when I was holding reset too long or reset then power. Something like that.


[6/6/2022 5:51 AM] nonasuomy
After putting the values back it seemed ok.


[6/6/2022 11:54 AM] tux_linux
The reset sequence on this thing is really strange


[6/6/2022 4:02 PM] nonasuomy
How so?


[6/6/2022 4:03 PM] nonasuomy
Pretty sure you can chalk any weirdness up to them being Sony.


[6/19/2022 7:18 PM] tux_linux
I'm a bit desperate with this device; if you can get some busybox shell in an initrd with reproducible steps, I'm willing to try to port it further


[6/19/2022 7:20 PM] szybet
i tryied to follow and understand problems that accured with this device

and failed miserably


[6/19/2022 7:21 PM] tux_linux
I feel even the Elipsa port is going to be easier


[6/19/2022 7:21 PM] szybet
https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1

{Embed}
https://inkbox.ddns.net/wiki/index.php?title=Sony_PRS-T1
Index.php


[6/19/2022 7:21 PM] szybet
there is a wiki

{Reactions}
😉 

[6/19/2022 7:21 PM] szybet
oh my god


[6/19/2022 7:21 PM] tux_linux
That is well-written documentation


[6/19/2022 7:21 PM] tux_linux
by NonaSuomy

{Reactions}
😅 

[6/19/2022 7:22 PM] szybet
https://tenor.com/view/very-nice-excellent-yes-meme-nod-gif-17397471

{Embed}
https://tenor.com/view/very-nice-excellent-yes-meme-nod-gif-17397471
/mnt/data/projects/git/conversations/media/very-nice-excellent-8AE8C.png

{Reactions}
☺️ 

[6/19/2022 8:47 PM] nonasuomy
What did you try and where did you get?


[6/19/2022 8:48 PM] nonasuomy
Thought we already had this?


[6/19/2022 8:48 PM] nonasuomy
Has it already been hacked before?


[6/19/2022 8:49 PM] nonasuomy
What do you need to understand?


[6/19/2022 8:56 PM] tux_linux
Here


[6/19/2022 8:56 PM] tux_linux
Don't have an idea


[6/20/2022 7:47 AM] nonasuomy
Did you try to load the rootfs image along side your custom one?


[8/18/2022 7:55 PM] nonasuomy
https://youtu.be/DI8epeVnXnc

{Embed}
Good e-Reader
https://www.youtube.com/watch?v=DI8epeVnXnc
The History of Sony e-Readers | DPT and Beyond
Sony has had the longest career of any major Brand in the world of e-Paper.  They were the first ones to have major success with an e-reader and pioneered e-notes, with their Digital Paper. The entire e-paper industry owes a lot to Sony. 

Please enjoy this historical look-back of the Sony Reader & Digital Paper system.

You can buy Sony e-Reade...
/mnt/data/projects/git/conversations/media/maxresdefault-6FBF9.jpg


[8/18/2022 8:13 PM] nonasuomy
https://goodereader.com/blog/electronic-readers/good-e-reader-documentary-the-entire-history-of-sony-e-readers-and-e-notes

{Embed}
Michael Kozlowski
https://goodereader.com/blog/electronic-readers/good-e-reader-documentary-the-entire-history-of-sony-e-readers-and-e-notes
Documentary – The entire history of Sony e-readers and e-notes
Sony has a storied history in the e-reader and e-note space. They released a series of e-readers before Amazon, Barnes and Noble and Kobo ever got into the business.. They were also the ones that developed LED lights on e-readers. They also pioneered the concept of e-notes, which are digital note taking devices that you can freehand draw, take n...
/mnt/data/projects/git/conversations/media/IMG_8752-scaled-42657.jpg


==============================================================
Exported 3,468 message(s)
==============================================================
